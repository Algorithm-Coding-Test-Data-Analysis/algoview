{
    "Lv3_0000_프로그래머스_입국심사_구현_0.js": {
        "file_name": "Lv3_0000_프로그래머스_입국심사_구현_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "입국심사",
        "problem_type": "구현",
        "countmethod": {
            ".max": 1,
            ".floor": 2,
            ".forEach": 1
        },
        "line_count": 17,
        "module": {},
        "code": "function solution(n, times) {\n  let answer = 0;\n  let low = 1;\n  let high = Math.max(...times) * n;\n  while (low <= high) {\n    let count = 0;\n    let mid = Math.floor((low + high) / 2);\n    times.forEach((v) => (count += Math.floor(mid / v)));\n    if (count >= n) {\n      answer = mid;\n      high = mid - 1;\n    } else {\n      low = mid + 1;\n    }\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_2023_카카오_표현가능한이진트리_트리_0.js": {
        "file_name": "Lv3_2023_카카오_표현가능한이진트리_트리_0.js",
        "level": "level3",
        "year": "2023",
        "company_name": "카카오",
        "problem_name": "표현가능한이진트리",
        "problem_type": "트리",
        "countmethod": {
            ".toString": 1,
            "parseInt": 2,
            ".log2": 1,
            ".pow": 1,
            ".push": 2
        },
        "line_count": 44,
        "module": {},
        "code": "function solution(numbers) {\n    \n    const answer = [];\n    for(let number of numbers){\n        let numberToBinary = number.toString(2);\n        const treeHeight = parseInt(Math.log2(numberToBinary.length)) + 1\n        const nodes = Math.pow(2, treeHeight) - 1;\n        \n        const dummyCount = nodes - numberToBinary.length;\n        for(let i = 0; i < dummyCount; i++){\n            numberToBinary = '0' + numberToBinary\n        }\n        let flag = 0;\n        \n        function isMakeBinaryTree(start, end, binary){\n    \n            const half = parseInt( (start + end) / 2);\n            if (start === end) {\n                return ;\n            }\n            if (binary[half] == 0){\n                for(let i=start; i<half; i++){\n                    if (binary[i] == 1) {\n                        flag = 1;\n                        return ;\n                    }\n                }\n                for(let j=half+1; j<=end; j++){\n                    if (binary[j] == 1) {\n                        flag = 1;\n                        return ;\n                    }\n                }\n            }\n            isMakeBinaryTree(start,half-1,binary)\n            isMakeBinaryTree(half+1,end,binary)\n        }\n        isMakeBinaryTree(0,numberToBinary.length-1,numberToBinary);\n        \n        if (flag) answer.push(0);\n        else answer.push(1);\n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_가장먼노드_그래프_0.js": {
        "file_name": "Lv3_0000_프로그래머스_가장먼노드_그래프_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장먼노드",
        "problem_type": "그래프",
        "countmethod": {
            ".fill": 2,
            ".map": 1,
            ".shift": 1,
            ".forEach": 1,
            ".push": 1,
            ".filter": 1,
            ".max": 1
        },
        "line_count": 23,
        "module": {},
        "code": "function solution(n, vertex) {\n  let answer = 0;\n  let list = Array(n + 1).fill([]);\n  let count = Array(n + 1).fill(0);\n  count[1] = 1;\n  let node = [1];\n  let queue = [node];\n  vertex.map((v) => {\n    list[v[0]] = [...list[v[0]], v[1]];\n    list[v[1]] = [...list[v[1]], v[0]];\n  });\n  while (queue.length) {\n    node = queue.shift();\n    list[node].forEach((x) => {\n      if (!count[x]) {\n        queue.push(x);\n        count[x] = count[node] + 1;\n      }\n    });\n  }\n  answer = count.filter((x) => x === Math.max(...count)).length;\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_단어변환_DFSBFS_0.js": {
        "file_name": "Lv3_0000_프로그래머스_단어변환_DFSBFS_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "단어변환",
        "problem_type": "DFSBFS",
        "countmethod": {
            ".shift": 1,
            ".split": 1,
            ".filter": 1,
            ".push": 1
        },
        "line_count": 25,
        "module": {},
        "code": "function solution(begin, target, words) {\n  let answer = 0;\n  let queue = [begin];\n  let visited = { [begin]: 0 };\n  let curNode;\n  while (queue.length) {\n    curNode = queue.shift();\n    if (curNode === target) {\n      break;\n    }\n    for (let i = 0; i < words.length; i++) {\n      if (\n        !visited[words[i]] &&\n        curNode.split(\"\").filter((value, index) => value === words[i][index])\n          .length ===\n          begin.length - 1\n      ) {\n        queue.push(words[i]);\n        visited[words[i]] = visited[curNode] + 1;\n      }\n    }\n  }\n  answer = visited[target] ? visited[target] : 0;\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_베스트앨범_해시_0.js": {
        "file_name": "Lv3_0000_프로그래머스_베스트앨범_해시_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "베스트앨범",
        "problem_type": "해시",
        "countmethod": {
            ".map": 2,
            ".sort": 3,
            ".has": 1,
            ".get": 6,
            ".set": 4,
            ".flat": 4,
            ".push": 2,
            ".findIndex": 1,
            ".splice": 2,
            ".join": 1
        },
        "line_count": 41,
        "module": {},
        "code": "function solution(genres, plays) {\n  let answer = [];\n  let zip = genres.map((v, i) => v + plays[i]);\n  let sorted = genres.map((v, i) => [v, plays[i]]).sort((a, b) => b[1] - a[1]);\n  let temp = [];\n  let list = new Map();\n  let count = new Map();\n  for (let i = 0; i < sorted.length; i++) {\n    if (list.has(sorted[i][0]) && list.get(sorted[i][0]).length < 4) {\n      list.set(sorted[i][0], [list.get(sorted[i][0]), sorted[i]].flat());\n    } else if (list.get(sorted[i][0])) {\n      continue;\n    } else {\n      list.set(sorted[i][0], sorted[i].flat());\n    }\n  }\n  for (let i = 0; i < genres.length; i++) {\n    if (count.get(genres[i]) !== undefined) {\n      count.set(genres[i], count.get(genres[i]) + plays[i]);\n    } else {\n      count.set(genres[i], plays[i]);\n    }\n  }\n  [...count].sort((a, b) => b[1] - a[1]);\n  for (let i = 0; i < count.size; i++) {\n    temp.push(list.get([...count].sort((a, b) => b[1] - a[1])[i][0]));\n  }\n  for (let i = 0; i < temp.flat().length / 2; i++) {\n    let zipIndex = zip.findIndex(\n      (x) =>\n        x ===\n        temp\n          .flat()\n          .splice(2 * i, 2)\n          .join(\"\")\n    );\n    zip.splice(zipIndex, 1, null);\n    answer.push(zipIndex);\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_네트워크_DFSBFS_0.js": {
        "file_name": "Lv3_0000_프로그래머스_네트워크_DFSBFS_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "네트워크",
        "problem_type": "DFSBFS",
        "countmethod": {
            ".from": 1,
            ".push": 2,
            ".pop": 1
        },
        "line_count": 22,
        "module": {},
        "code": "function solution(n, computers) {\n  let answer = 0;\n  let stack = [];\n  let visited = Array.from({ length: n }, () => false);\n  for (let i = 0; i < computers.length; i++) {\n    if (visited[i] === false) {\n      stack.push(i);\n      visited[i] = true;\n      while (stack.length) {\n        let curNode = stack.pop();\n        for (let j = 0; j < computers[curNode].length; j++) {\n          if (computers[curNode][j] === 1 && visited[j] === false) {\n            stack.push(j);\n            visited[j] = true;\n          }\n        }\n      }\n      answer++;\n    }\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_여행경로_DFSBFS_0.js": {
        "file_name": "Lv3_0000_프로그래머스_여행경로_DFSBFS_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "여행경로",
        "problem_type": "DFSBFS",
        "countmethod": {
            ".sort": 1,
            ".reverse": 1,
            ".push": 1,
            ".pop": 2,
            ".unshift": 1
        },
        "line_count": 24,
        "module": {},
        "code": "function solution(tickets) {\n  let answer = [];\n  let newObj = {};\n  for (let ticket of tickets) {\n    if (newObj[ticket[0]] === undefined) {\n      newObj[ticket[0]] = [ticket[1]];\n    } else {\n      newObj[ticket[0]] = [...newObj[ticket[0]], ticket[1]];\n    }\n  }\n  for (let key in newObj) {\n    newObj[key].sort().reverse();\n  }\n  let stack = [\"ICN\"];\n  while (stack.length) {\n    let curNode = stack[stack.length - 1];\n    if (newObj[curNode] && newObj[curNode].length > 0) {\n      stack.push(newObj[curNode].pop());\n    } else {\n      answer.unshift(stack.pop());\n    }\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_백준_SXN타일링_다이나믹_0.js": {
        "file_name": "Lv3_0000_백준_SXN타일링_다이나믹_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "SXN타일링",
        "problem_type": "다이나믹",
        "countmethod": {
            ".log": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n    let memo = new Array(n + 1);\n    memo[1] = 1;\n    memo[2] = 2;\n    for (let i = 3; i <= n; i++) {\n        memo[i] = (memo[i - 1] + memo[i - 2]) % 10007;\n    }\n    console.log(memo[n]);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_백준_가장긴감소하는부분배열_다이나믹_0.js": {
        "file_name": "Lv3_0000_백준_가장긴감소하는부분배열_다이나믹_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "가장긴감소하는부분배열",
        "problem_type": "다이나믹",
        "countmethod": {
            ".readFileSync": 1,
            ".toString": 1,
            ".trim": 1,
            ".split": 2,
            ".map": 1,
            ".fill": 1,
            ".push": 1,
            ".max": 2,
            ".log": 1
        },
        "line_count": 14,
        "module": {},
        "code": "const filePath = process.platform === \"linux\" ? \"/dev/stdin\" : \"input.txt\";\nlet [N, A] = require('fs').readFileSync(filePath).toString().trim().split('\\n');\nA = A.split(' ').map(i => +i);\nlet memo = new Array(N * 1).fill(1);\nfor (let i = 1; i < N; i++) {\n    const values = [1];\n    for (let j = 0; j < i; j++) {\n        if (A[i] < A[j]) {\n            values.push(memo[j] + 1);\n        }\n    }\n    memo[i] = Math.max(...values);\n}\nconsole.log(Math.max(...memo));",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_백준_바이러스_DFSBFS_0.js": {
        "file_name": "Lv3_0000_백준_바이러스_DFSBFS_0.js",
        "level": "level3",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "바이러스",
        "problem_type": "DFSBFS",
        "countmethod": {
            ".readFileSync": 1,
            ".toString": 1,
            ".trim": 1,
            ".split": 2,
            ".map": 1,
            ".push": 4,
            ".pop": 1,
            ".includes": 1,
            ".log": 1
        },
        "line_count": 25,
        "module": {},
        "code": "const filePath = process.platform === 'linux' ? '/dev/stdin' : './input.txt';\nlet [C, N, ...arr] = require('fs').readFileSync(filePath).toString().trim().split('\\n');\nlet graph = {};\nfor (let i = 1; i <= C; i++) {\n    graph[i] = []\n}\nfor (let i = 0; i < N; i++) {\n    const [a, b] = arr[i].split(' ').map(v => +v);\n    graph[a].push(b);\n    graph[b].push(a);\n}\nconst dfs = (graph, startNode) => {\n    let visited = [];\n    let needVisit = [];\n    needVisit.push(startNode);\n    while (needVisit.length !== 0) {\n        const node = needVisit.pop();\n        if (!visited.includes(node)) {\n            visited.push(node);\n            needVisit = [...needVisit, ...graph[node]];\n        }\n    }\n    return visited;\n};\nconsole.log(dfs(graph, 1).length - 1);",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 2,
            ".sort": 2,
            ".join": 2,
            ".reverse": 1
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(s) {\n  let answer = s.split(\"\").sort((a, b) => {\n      if(a < b) return 1;\n      if(a === b) return 0;\n      if(a > b) return -1;\n  }).join(\"\");\n  return answer;\n}\nfunction solution(s) {\n  return s\n    .split(\"\")\n    .sort()\n    .reverse()\n    .join(\"\");\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두정수사이의합_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_두정수사이의합_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두정수사이의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(a, b) {\n  let answer = 0;\n  if (a > b){\n      for(let i = b; i <= a; i++){\n          answer += i\n      }\n  } else {\n      for(let i = a; i <= b; i++){\n          answer += i\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(n) {\n  let answer = 0;\n  for(let i = 0; i <= n; i++){\n      if(n % i === 0) answer += i;\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_0.js": {
        "file_name": "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "같은숫자는싫어",
        "problem_type": "스택큐",
        "countmethod": {
            ".filter": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(arr) {    \n    return arr.filter((v,i) => arr[i-1] !== v)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_수박수박수박수박수박수_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_수박수박수박수박수박수_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "수박수박수박수박수박수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(n) {\n  let answer = '';\n  for(let i = 0; i < n; i++){\n      if(i % 2 === 0){\n          answer += '수'\n      } else {\n          answer += '박'\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_숫자문자열과영단어_구현_0.js": {
        "file_name": "Lv1_2021_카카오_숫자문자열과영단어_구현_0.js",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "숫자문자열과영단어",
        "problem_type": "구현",
        "countmethod": {
            "isNaN": 1,
            "parseInt": 1
        },
        "line_count": 30,
        "module": {},
        "code": "function solution(s) {\n  const wordToNumber = {\n    zero: \"0\",\n    one: \"1\",\n    two: \"2\",\n    three: \"3\",\n    four: \"4\",\n    five: \"5\",\n    six: \"6\",\n    seven: \"7\",\n    eight: \"8\",\n    nine: \"9\",\n  };\n  \n  let answer = \"\";\n  let temp = \"\";\n  for (let i = 0; i < s.length; i++) {\n    const char = s[i];\n    if (!isNaN(char)) {\n      answer += char;\n    } else {\n      temp += char;\n      if (temp in wordToNumber) {\n        answer += wordToNumber[temp];\n        temp = \"\";\n      }\n    }\n  }\n  return parseInt(answer);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".reverse": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(s) {\n  return [...s].sort().reverse().join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_부족한금액계산하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_부족한금액계산하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "부족한금액계산하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(price, money, count) {\n  let total = 0;\n  for (let i = 1; i <= count; i++) {\n    total += price * i;\n  }\n  return total > money ? total - money : 0;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_완주하지못한선수_해시_0.js": {
        "file_name": "Lv1_0000_프로그래머스_완주하지못한선수_해시_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "완주하지못한선수",
        "problem_type": "해시",
        "countmethod": {
            ".sort": 2,
            ".find": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(participant, completion) {\n    completion.sort()\n    return participant.sort().find((v,i) => v !== completion[i])\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나누어떨어지는숫자배열",
        "problem_type": "구현",
        "countmethod": {
            ".push": 2,
            ".sort": 1
        },
        "line_count": 13,
        "module": {},
        "code": "function solution(arr, divisor) {\n  var answer = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % divisor === 0) {\n      answer.push(arr[i]);\n    }\n  }\n  if (answer.length === 0) {\n    answer.push(-1)\n  }\n  answer.sort((a, b) => a - b);\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열다루기기본_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열다루기기본_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열다루기기본",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".every": 1,
            "isNaN": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(s) {\n  if (s.length == 4 || s.length == 6) {\n    return s.split(\"\").every((x) => !isNaN(x));\n  } else return false;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_스택큐_0.js": {
        "file_name": "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_스택큐_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자연수뒤집어배열로만들기",
        "problem_type": "스택큐",
        "countmethod": {
            ".toString": 1,
            ".split": 1,
            ".map": 1,
            "parseInt": 1,
            ".reverse": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(n) {\n  return n\n    .toString()\n    .split(\"\")\n    .map((el) => parseInt(el))\n    .reverse();\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_직사각형별찍기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_직사각형별찍기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "직사각형별찍기",
        "problem_type": "구현",
        "countmethod": {
            ".setEncoding": 1,
            ".on": 1,
            ".split": 1,
            ".log": 1
        },
        "line_count": 12,
        "module": {},
        "code": "process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', data => {\n    const n = data.split(\" \");\n    const a = Number(n[0]), b = Number(n[1]);\n    for(let i = 0;i<b;i++){\n        let str = \"\"\n        for(let j = 0; j<a;j++){\n            str = str + '*'\n        }\n        console.log(str)\n    }\n});\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "서울에서김서방찾기",
        "problem_type": "구현",
        "countmethod": {
            ".indexOf": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(seoul) {\n  let location = seoul.indexOf('Kim');\n  return `김서방은 ${location}에 있다`\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_정렬_1.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_정렬_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내림차순으로배치하기",
        "problem_type": "정렬",
        "countmethod": {
            ".sort": 1,
            ".reverse": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(s) {\n    return [...s].sort().reverse().join('')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_삼총사_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_삼총사_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼총사",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(number) {\n  let result = 0;\n  for (let i = 0; i < number.length - 2; i++) {\n    for (let k = i + 1; k < number.length - 1; k++) {\n      for (let j = k + 1; j < number.length; j++) {\n        number[i] + number[k] + number[j] == 0 ? result++ : null;\n      }\n    }\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_이상한문자만들기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_이상한문자만들기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "이상한문자만들기",
        "problem_type": "구현",
        "countmethod": {
            ".toUpperCase": 1,
            ".replace": 1,
            ".toLowerCase": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(s) {\n  return s.toUpperCase().replace(/\\w{2}/g, v => v[0] + v[1].toLowerCase())\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".split": 1,
            ".reduce": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(n)\n{\n    var answer = n.toString()\n                    .split('')\n                    .reduce((acc,cur)=>acc+cur*1,0);\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_옹알이(2)_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_옹알이(2)_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "옹알이(2)",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".test": 2
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(babbling) {\n  const regexp1 = /(aya|ye|woo|ma)\\1/;\n  const regexp2 = /^(aya|ye|woo|ma)+$/;\n  return babbling.filter(v => !regexp1.test(v) && regexp2.test(v)).length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_하샤드수_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_하샤드수_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "하샤드수",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".split": 1,
            ".map": 1,
            ".reduce": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(x) {\n  let add = x.toString().split(\"\").map(Number).reduce((a, c) => a + c);\n  return x % add === 0 ? true : false;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_기사단원의무기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_기사단원의무기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "기사단원의무기",
        "problem_type": "구현",
        "countmethod": {
            ".sqrt": 1
        },
        "line_count": 19,
        "module": {},
        "code": "function solution(number, limit, power) {\n  let answer = 0;\n  for (let i = 1; i <= number; i++) {\n    let divisor = 0;\n    for (let j = 1; j <= Math.sqrt(i); j++) {\n      if (i % j === 0) {\n        if (i / j === j) divisor += 1;\n        else divisor += 2;\n      }\n      if (divisor > limit) {\n        divisor = power;\n        break;\n      }\n    }\n    answer += divisor;\n  }\n  \n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n  var answer = 0;\n  \n  for(let i=1;i<=n;i++){\n      answer += n%i===0 ? i : 0;\n  }\n  \n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최소직사각형_완전탐색_0.js": {
        "file_name": "Lv1_0000_프로그래머스_최소직사각형_완전탐색_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최소직사각형",
        "problem_type": "완전탐색",
        "countmethod": {
            ".map": 2,
            ".sort": 1,
            ".push": 2,
            ".max": 2
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(sizes) {\n  let width = [];\n  let height = [];\n  sizes\n    .map((x) => x.sort((a, b) => b - a))\n    .map((x) => {\n      width.push(x[0]);\n      height.push(x[1]);\n    });\n  return Math.max(...width) * Math.max(...height);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열을정수로바꾸기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(s) {\n  return Number(s);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2020_프로그래머스_두개뽑아서더하기_집합_0.js": {
        "file_name": "Lv1_2020_프로그래머스_두개뽑아서더하기_집합_0.js",
        "level": "level1",
        "year": "2020",
        "company_name": "프로그래머스",
        "problem_name": "두개뽑아서더하기",
        "problem_type": "집합",
        "countmethod": {
            ".push": 1,
            ".sort": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(numbers) {\n  const answer = [];\n  for (let i = 0; i < numbers.length-1; i++) {\n    for (let j = i+1; j < numbers.length; j++) {\n      answer.push(numbers[i] + numbers[j]);\n    }\n  }\n  return [...new Set(answer)].sort((a, b) => a - b);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_스택큐_0.js": {
        "file_name": "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_스택큐_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "X만큼간격이있는N개의숫자",
        "problem_type": "스택큐",
        "countmethod": {
            ".push": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(x, n) {\n  const arr = [];\n  for (let i = 1; i <= n; i++) {\n    arr.push(x * i);\n  }\n  return arr;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_예산_그리디_0.js": {
        "file_name": "Lv1_0000_프로그래머스_예산_그리디_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "예산",
        "problem_type": "그리디",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(d, budget) {\n  d.sort((a, b) => a - b);\n  let result = 0;\n  for (let i = 0; i < d.length; i++) {\n    budget -= d[i];\n    if (budget < 0) {\n      break;\n    }\n    result++;\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_음양더하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_음양더하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "음양더하기",
        "problem_type": "구현",
        "countmethod": {
            ".reduce": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(absolutes, signs) {\n  return absolutes.reduce(\n    (acc, val, index) => acc + val * (signs[index] ? 1 : -1),\n    0\n  );\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".sort": 1,
            ".reverse": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n  return (n+'').split('').sort().reverse().join('')*1;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "X만큼간격이있는N개의숫자",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 9,
        "module": {},
        "code": "function solution(x, n) {\n    let answer = [];\n    let y = 0;\n        for(let i = 0; i < n; i++){\n        answer[i] = x + y;\n        y += x;\n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_숫자문자열과영단어_구현_1.js": {
        "file_name": "Lv1_2021_카카오_숫자문자열과영단어_구현_1.js",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "숫자문자열과영단어",
        "problem_type": "구현",
        "countmethod": {
            ".forEach": 1,
            ".split": 1,
            ".join": 1,
            "parseInt": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(s) {\n  const numList = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' ,'nine'];\n  numList.forEach((v, i) => {\n    s = s.split(v).join(i);\n  });\n  return parseInt(s);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_콜라문제_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_콜라문제_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "콜라문제",
        "problem_type": "구현",
        "countmethod": {
            ".trunc": 1
        },
        "line_count": 18,
        "module": {},
        "code": "function solution(a, b, n) {\n  let cnt = 0;\n  while(n >= a) {\n    n -= (a - b);\n    cnt++;\n  }\n  return cnt * b;\n}\nfunction solution(a, b, n) {\n  let answer = 0;\n  while(n >= a) {\n    const cola = Math.trunc(n / a) * b;\n    answer += cola;\n    n = (n % a) + cola;\n  }\n  return answer;\n}\n// https://school.programmers.co.kr/learn/courses/30/lessons/132267",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_없는숫자더하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_없는숫자더하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "없는숫자더하기",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".includes": 1,
            ".reduce": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(numbers) {\n  let num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const numFilter = num.filter((v) => !numbers.includes(v));\n  const sum = numFilter.reduce((a, c) => a + c, 0);\n  return sum;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2020_프로그래머스_3진법뒤집기_구현_0.js": {
        "file_name": "Lv1_2020_프로그래머스_3진법뒤집기_구현_0.js",
        "level": "level1",
        "year": "2020",
        "company_name": "프로그래머스",
        "problem_name": "3진법뒤집기",
        "problem_type": "구현",
        "countmethod": {
            "parseInt": 1,
            ".toString": 1,
            ".reverse": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n  return parseInt([...n.toString(3)].reverse().join(''), 3);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_없는숫자더하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_없는숫자더하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "없는숫자더하기",
        "problem_type": "구현",
        "countmethod": {
            ".includes": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(numbers) {\n  let answer = 0;\n  for(let i = 0; i < 10; i++){\n      if (!numbers.includes(i)){\n          answer += i\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최대공약수와최소공배수_스택큐_0.js": {
        "file_name": "Lv1_0000_프로그래머스_최대공약수와최소공배수_스택큐_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최대공약수와최소공배수",
        "problem_type": "스택큐",
        "countmethod": 0,
        "line_count": 8,
        "module": {},
        "code": "function solution(n, m) {\n  const GCD = findGCD(n, m);\n  const LCM = n * m / GCD;\n  return [GCD, LCM];\n}\nfunction findGCD(a, b) {\n  return a % b === 0 ? b : findGCD(b, a % b);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_폰켓몬_해시_0.js": {
        "file_name": "Lv1_0000_프로그래머스_폰켓몬_해시_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "폰켓몬",
        "problem_type": "해시",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "function solution(nums) {\n  const getCnt = nums.length / 2;\n  let set = new Set([...nums]);\n  return getCnt < set.size ? getCnt : set.size;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_짝수와홀수_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_짝수와홀수_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수와홀수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 4,
        "module": {},
        "code": "function solution(num) {\n  var answer = num%2!==0 ? 'Odd' : 'Even';\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_수박수박수박수박수박수_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_수박수박수박수박수박수_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "수박수박수박수박수박수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(n) {\n  let answer = '';\n  for(let i = 0; i < n; i++){\n      if(i % 2 === 0){\n          answer += '수'\n      } else {\n          answer += '박'\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나누어떨어지는숫자배열",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(arr, divisor) {\n  const answer = arr.filter((v) => v % divisor == 0);\n  return answer.length == 0 ? [-1] : answer.sort((a, b) => a - b);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_크기가작은부분문자열_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_크기가작은부분문자열_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "크기가작은부분문자열",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".slice": 2,
            ".filter": 1
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(t, p) {\n  const arr = [];\n  for (let i = 0; i <= t.length - p.length; i++) {\n    arr.push(t.slice(i, i+p.length));\n  }\n  return arr.filter(v => v <= p).length;\n}\nfunction solution(t, p) {\n  let cnt = 0;\n  for (let i = 0; i <= t.length - p.length; i++) {\n    if (t.slice(i, i + p.length) <= p) cnt++;\n  }\n  return cnt;\n}\n// https://school.programmers.co.kr/learn/courses/30/lessons/147355",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_K번째수_정렬_0.js": {
        "file_name": "Lv1_0000_프로그래머스_K번째수_정렬_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "K번째수",
        "problem_type": "정렬",
        "countmethod": {
            ".push": 2,
            ".slice": 1,
            ".sort": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(array, commands) {\n  let cmArr = [];\n  let result = [];\n  for (let i = 0; i < commands.length; i++) {\n    cmArr.push(\n      array.slice(commands[i][0] - 1, commands[i][1]).sort((a, b) => a - b)\n    );\n    result.push(cmArr[i][commands[i][2] - 1]);\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_행렬의덧셈_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_행렬의덧셈_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "행렬의덧셈",
        "problem_type": "구현",
        "countmethod": {
            ".map": 2
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(arr1, arr2) {\n    return arr1.map((outer, oi) => outer.map((inner, ii) => inner + arr2[oi][ii]))\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_카드뭉치_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_카드뭉치_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "카드뭉치",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "function solution(cards1, cards2, goal) {\n    let a = 0,\n        b = 0;\n    for (const v of goal) {\n        if (cards1[a] === v) a++;\n        else if (cards2[b] === v) b++;\n        else return 'No';\n    }\n  return 'Yes';\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자연수뒤집어배열로만들기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".map": 1,
            ".reverse": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n  return (n + '').split('').map(Number).reverse();\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_시저암호_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_시저암호_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "시저암호",
        "problem_type": "구현",
        "countmethod": {
            ".replace": 1,
            ".charCodeAt": 1,
            ".fromCharCode": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(s, n) {\n  const result = s.replace(/[^ ]/g, v => {\n      const c = v.charCodeAt(0);\n      return String.fromCharCode((c & 96) + (c % 32 + n - 1) % 26 + 1);\n  })\n  return result;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_이상한문자만들기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_이상한문자만들기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "이상한문자만들기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".toUpperCase": 1,
            ".toLowerCase": 1,
            ".substr": 1
        },
        "line_count": 18,
        "module": {},
        "code": "function solution(s) {\n    let arr = s.split(' ')\n    let answer = ''\n    let str = ''\n    for(let i = 0; i<arr.length;i++){\n        let str = arr[i]\n        for(let j = 0; j<str.length;j++){\n            if(j%2 ===0){\n                 answer += str[j].toUpperCase();\n            }else{\n                 answer += str[j].toLowerCase();\n            }\n        } \n        answer += ' '\n    }\n     answer = answer.substr(0,answer.length-1);\n    return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_달리기경주_해시_0.js": {
        "file_name": "Lv1_0000_프로그래머스_달리기경주_해시_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "달리기경주",
        "problem_type": "해시",
        "countmethod": {
            ".forEach": 2
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(players, callings) {\n    const obj = {}\n    players.forEach((name, i) => {\n        obj[name] = i\n    })\n    callings.forEach((name) => {\n        const idx = obj[name]\n        const front = players[idx - 1]\n        players[idx] = front\n        players[idx - 1] = name\n        obj[name] -= 1\n        obj[front] += 1\n    })\n    return players\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2022_카카오_성격유형검사하기_구현_0.js": {
        "file_name": "Lv1_2022_카카오_성격유형검사하기_구현_0.js",
        "level": "level1",
        "year": "2022",
        "company_name": "카카오",
        "problem_name": "성격유형검사하기",
        "problem_type": "구현",
        "countmethod": {
            ".forEach": 2,
            ".set": 3,
            ".split": 1,
            ".get": 4
        },
        "line_count": 34,
        "module": {},
        "code": "function solution(survey, choices) {\n    \n    let answer = '';\n    const table = [['R','T'],['C','F'],['J','M'],['A','N']];\n    const map = new Map();\n    \n    table.forEach((alphas) => {\n      alphas.forEach(alpha =>{\n            map.set(alpha,0);\n      })\n    })\n    \n    for(let i=0; i<survey.length; i++){\n        const [front, back] = survey[i].split('');\n        const choice = choices[i];\n        \n        if (choice === 4) continue;\n        \n        if (choice < 4){\n            map.set(front, map.get(front) + (4 - choice));\n        } else {\n            map.set(back, map.get(back) + (choice - 4));\n        }        \n    }\n    \n    for(let i = 0; i < table.length; i++){\n        const [typeOne, typeTwo] = table[i];\n        const [typeOneData, typeTwoData] = [map.get(typeOne), map.get(typeTwo)];\n        \n        if (typeOneData ===  typeTwoData || typeOneData > typeTwoData) answer += typeOne;\n        else answer += typeTwo;      \n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_평균구하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_평균구하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평균구하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(arr) {\n    let answer = 0;\n    for(let i=0; i<arr.length; i++){\n        answer += arr[i];\n    }\n    return answer/arr.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_숫자문자열과영단어_해시_2.js": {
        "file_name": "Lv1_2021_카카오_숫자문자열과영단어_해시_2.js",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "숫자문자열과영단어",
        "problem_type": "해시",
        "countmethod": {
            ".replaceAll": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(s) {\n    const arr = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    for(let i in arr) s = s.replaceAll(arr[i], i)\n    return s*1\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_평균구하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_평균구하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평균구하기",
        "problem_type": "구현",
        "countmethod": {
            ".reduce": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(arr) {\n  let answer = arr.reduce((a, c) => a + c);\n  return answer / arr.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_짝수와홀수_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_짝수와홀수_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수와홀수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(num) {\n  return num % 2 ? \"Odd\" : \"Even\";\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내마음대로정렬하기_정렬_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내마음대로정렬하기_정렬_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내마음대로정렬하기",
        "problem_type": "정렬",
        "countmethod": {
            ".sort": 2,
            ".reverse": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(strings, n) {\n  return strings\n      .sort()\n      .reverse()\n      .sort((a, b) => a[n] > b[n] ? 1 : -1)\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2023_카카오_개인정보수집유효기간_구현_0.js": {
        "file_name": "Lv1_2023_카카오_개인정보수집유효기간_구현_0.js",
        "level": "level1",
        "year": "2023",
        "company_name": "카카오",
        "problem_name": "개인정보수집유효기간",
        "problem_type": "구현",
        "countmethod": {
            ".split": 4,
            ".set": 1,
            ".map": 2,
            ".get": 1,
            "parseInt": 1,
            ".push": 3
        },
        "line_count": 42,
        "module": {},
        "code": "function solution(today, terms, privacies) {\n    \n    const answer = [];\n    const map = new Map();\n    \n    for(let term of terms){\n        const [alpha, month] = term.split(' ');\n        \n        map.set(alpha, month);\n    }\n    for(let i = 0; i < privacies.length; i++){\n        const [date, type] = privacies[i].split(' ');\n        let [year, month, day] = date.split('.').map(Number);\n        \n        let addMonth = Number(map.get(type));\n        \n        year += parseInt(addMonth / 12);\n        month += addMonth % 12;\n        if (month > 12){\n            year += 1;\n            month %= 12;\n        }\n        \n        const [tY, tM, tD] = today.split('.').map(Number);\n        \n        if (year < tY){\n            answer.push(i+1);\n            continue;\n        } else if (year === tY){\n            if (month < tM) {\n                answer.push(i+1);\n                continue;\n            } else if (month === tM){\n                if (day <= tD) {\n                    answer.push(i+1);\n                    continue;\n                }\n            }\n        }\n    }\n    return answer\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_체육복_그리디_0.js": {
        "file_name": "Lv1_0000_프로그래머스_체육복_그리디_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "체육복",
        "problem_type": "그리디",
        "countmethod": {
            ".filter": 2,
            ".includes": 4,
            ".sort": 2,
            ".forEach": 1,
            ".splice": 2,
            ".indexOf": 2
        },
        "line_count": 16,
        "module": {},
        "code": "function solution(n, lost, reserve) {\n  const filter_reserve = reserve.filter(v => !lost.includes(v));\n  const filter_lost = lost.filter(v => !reserve.includes(v));\n  \n  filter_lost.sort((a, b) => a - b);\n  filter_reserve.sort((a, b) => a - b);\n  \n  filter_reserve.forEach(v => {\n      if(filter_lost.includes(v-1)) {\n          filter_lost.splice(filter_lost.indexOf(v-1), 1);\n      } else if (filter_lost.includes(v+1)) {\n          filter_lost.splice(filter_lost.indexOf(v+1), 1);\n      }\n  });\n  return n - filter_lost.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_폰켓몬_해시_1.js": {
        "file_name": "Lv1_0000_프로그래머스_폰켓몬_해시_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "폰켓몬",
        "problem_type": "해시",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "function solution(nums) {\n  const half = nums.length / 2;\n  const setSize = new Set(nums).size;\n  return half < setSize ? half : setSize;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2019_카카오_실패율_정렬_0.js": {
        "file_name": "Lv1_2019_카카오_실패율_정렬_0.js",
        "level": "level1",
        "year": "2019",
        "company_name": "카카오",
        "problem_name": "실패율",
        "problem_type": "정렬",
        "countmethod": {
            ".forEach": 1,
            ".push": 1,
            ".sort": 1,
            ".map": 1
        },
        "line_count": 13,
        "module": {},
        "code": "function solution(N, stages) {\n  const cnt = {};\n  for (let i = 1; i <= N + 1; i++) cnt[i] = 0;\n  stages.forEach(v => cnt[v]++);\n  \n  const answer = [];\n  let num = stages.length;\n  for (let i = 1; i <= N; i++) {\n      answer.push([i, cnt[i] / num]);\n      num -= cnt[i];\n  }\n  return answer.sort((a, b) => b[1] - a[1]).map(v => v[0]);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2019_카카오_크레인인형뽑기게임_스택큐_0.js": {
        "file_name": "Lv1_2019_카카오_크레인인형뽑기게임_스택큐_0.js",
        "level": "level1",
        "year": "2019",
        "company_name": "카카오",
        "problem_name": "크레인인형뽑기게임",
        "problem_type": "스택큐",
        "countmethod": {
            ".from": 1,
            ".forEach": 3,
            ".push": 2,
            ".shift": 1,
            ".pop": 1
        },
        "line_count": 22,
        "module": {},
        "code": "function solution(board, moves) {\n  const basket = []\n  let cnt = 0\n  const boardArr = Array.from({length:board.length}, () => [])\n  board.forEach(arr => {\n      arr.forEach((v, i) => {\n          if (v !== 0) boardArr[i].push(v)\n      })\n  })\n  moves.forEach(v => {\n      if (boardArr[v-1].length) {\n          const shift = boardArr[v-1].shift()\n          if (basket[basket.length-1] === shift) {\n              basket.pop()\n              cnt += 2\n          } else {\n              basket.push(shift)\n          }\n      }\n  })\n  return cnt\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_프로그래머스_예산_그리디_1.js": {
        "file_name": "Lv1_2018_프로그래머스_예산_그리디_1.js",
        "level": "level1",
        "year": "2018",
        "company_name": "프로그래머스",
        "problem_name": "예산",
        "problem_type": "그리디",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(d, budget) {\n  let answer = budget;\n  d.sort((a, b) => a - b);\n  for (let i = 0; i < d.length; i++) {\n    answer -= d[i];\n    if (answer < 0) return i;\n  }\n  return d.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_카카오_[1차]다트게임_구현_0.js": {
        "file_name": "Lv1_2018_카카오_[1차]다트게임_구현_0.js",
        "level": "level1",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "[1차]다트게임",
        "problem_type": "구현",
        "countmethod": {
            "parseInt": 1,
            ".push": 3
        },
        "line_count": 31,
        "module": {},
        "code": "function solution(dartResult) {\n  let answer = [];\n  let result = 0;\n  let temp = 0;\n  for (let i = 0; i < dartResult.length; i++) {\n    if (dartResult[i] >= 0 && dartResult[i] <= 9) {\n      if (dartResult[i] == 1 && dartResult[i + 1] == 0) {\n        temp = 10;\n        // continue\n        i++;\n      } else {\n        temp = parseInt(dartResult[i]);\n      }\n    } else if (dartResult[i] == \"S\") {\n      answer.push(temp);\n    } else if (dartResult[i] == \"D\") {\n      answer.push(temp ** 2);\n    } else if (dartResult[i] == \"T\") {\n      answer.push(temp ** 3);\n    } else if (dartResult[i] == \"*\") {\n      answer[answer.length - 1] *= 2;\n      answer[answer.length - 2] *= 2;\n    } else if (dartResult[i] == \"#\") {\n      answer[answer.length - 1] *= -1;\n    }\n  }\n  for (const value of answer) {\n    result += value;\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열나누기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열나누기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열나누기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 15,
        "module": {},
        "code": "function solution(s) {\n  let answer = 0;\n  let current;\n  let count = 0;\n  for(let i = 0; i < s.length; i++) {\n      if(count === 0) {\n          answer++;\n          current = s[i];\n          count = 1;\n      } else {\n          current === s[i] ? count++ : count--;\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_크기가작은부분문자열_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_크기가작은부분문자열_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "크기가작은부분문자열",
        "problem_type": "구현",
        "countmethod": {
            ".slice": 2,
            ".push": 1,
            ".filter": 1,
            "parseInt": 2
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(t, p) {\n  let array = [];\n  for (let i = 0; i < t.length; i++) {\n    if (t.slice(i, i + p.length).length == p.length) {\n      array.push(t.slice(i, i + p.length));\n    }\n  }\n  return array.filter((x) => parseInt(x) <= parseInt(p)).length;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_예산_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_예산_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "예산",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".map": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(d, budget) {\n  let result = 0;\n  let cnt = 0;\n  d.sort((a, b) => a - b).map((x) => {\n    result += x;\n    result <= budget ? cnt++ : null;\n  });\n  return cnt;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_숫자짝꿍_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_숫자짝꿍_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자짝꿍",
        "problem_type": "구현",
        "countmethod": {
            ".repeat": 1,
            ".min": 1
        },
        "line_count": 13,
        "module": {},
        "code": "function solution(X, Y) {\n  const cntX = [0,0,0,0,0,0,0,0,0,0];\n  const cntY = [0,0,0,0,0,0,0,0,0,0];\n  \n  for (const x of X) cntX[x]++;\n  for (const y of Y) cntY[y]++;\n  \n  let answer = '';\n  for (let i = 9; i >= 0; i--) {\n    answer += `${i}`.repeat(Math.min(cntX[i], cntY[i]));\n  }\n  return !answer ? '-1' : answer[0] === '0' ? '0' : answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_제일작은수제거하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_제일작은수제거하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제일작은수제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".min": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(arr) {\n    return arr.length < 2 ? [-1] : arr.filter(i => i !== Math.min(...arr))\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_폰켓몬_해시_2.js": {
        "file_name": "Lv1_0000_프로그래머스_폰켓몬_해시_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "폰켓몬",
        "problem_type": "해시",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "function solution(nums) {\n    const set = new Set(nums)\n    return set.size >= nums.length/2 \n    ? nums.length/2\n    : set.size\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두개뽑아서더하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_두개뽑아서더하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두개뽑아서더하기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".sort": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(numbers) {\n  let arr = [];\n  for (let i = 0; i < numbers.length; i++) {\n    for (let k = i + 1; k < numbers.length; k++) {\n      arr.push(numbers[i] + numbers[k]);\n    }\n  }\n  let set = new Set(arr.sort((a, b) => a - b));\n  return [...set];\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "핸드폰번호가리기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".fill": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(phone_number) {\n  let numArr = phone_number.split(\"\");\n  return numArr.fill(\"*\", 0, numArr.length - 4).join(\"\")\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2019_카카오_실패율_구현_1.js": {
        "file_name": "Lv1_2019_카카오_실패율_구현_1.js",
        "level": "level1",
        "year": "2019",
        "company_name": "카카오",
        "problem_name": "실패율",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 2,
            ".push": 1,
            ".sort": 1,
            ".map": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(N, stages) {\n  let result = [];\n  for (let i = 1; i <= N; i++) {\n    let reach = stages.filter((x) => x >= i).length;\n    let curr = stages.filter((x) => x === i).length;\n    result.push([i, curr / reach]);\n  }\n  result.sort((a, b) => b[1] - a[1]);\n  return result.map((x) => x[0]);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".reduce": 1,
            "parseInt": 2
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n){\n  return (n + '').split(\"\").reduce((a, c) => parseInt(a) + parseInt(c), 0);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_가장가까운글자_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_가장가까운글자_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장가까운글자",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".fill": 1,
            ".log": 1
        },
        "line_count": 14,
        "module": {},
        "code": "function solution(s) {\n    s = s.split('');\n    let answer = new Array(s.length).fill(-1)\n    for (let i = 0; i < s.length; i++) {\n      for (let j = i - 1; j >= 0; j--) {\n        if (s[i] === s[j]) {\n          // console.log(i);\n          answer[i] = (i - j);\n          break;\n        }\n      }\n    }\n    return answer\n  }",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_삼총사_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_삼총사_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼총사",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(number) {\n  let result = 0;\n  for (let i = 0; i < number.length - 2; i++) {\n    for (let k = i + 1; k < number.length - 1; k++) {\n      for (let j = k + 1; j < number.length; j++) {\n        number[i] + number[k] + number[j] == 0 ? result++ : null;\n      }\n    }\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수제곱근판별_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_정수제곱근판별_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수제곱근판별",
        "problem_type": "구현",
        "countmethod": {
            ".sqrt": 1,
            "parseInt": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(n) {\n  var answer = 0;\n  let sqrt = Math.sqrt(n);\n  if(parseInt(sqrt)===sqrt){\n      answer = (sqrt + 1) ** 2;\n  }else{\n      answer=-1\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_음양더하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_음양더하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "음양더하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(absolutes, signs) {\n  let answer = 0;\n  for(let i = 0; i < absolutes.length; i++){\n      if(signs[i]){\n          answer += absolutes[i];\n      } else {\n          answer -= absolutes[i];\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_직사각형별찍기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_직사각형별찍기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "직사각형별찍기",
        "problem_type": "구현",
        "countmethod": {
            ".setEncoding": 1,
            ".on": 1,
            ".split": 1,
            ".repeat": 1,
            ".log": 1
        },
        "line_count": 10,
        "module": {},
        "code": "process.stdin.setEncoding(\"utf8\");\nprocess.stdin.on(\"data\", (data) => {\n  const n = data.split(\" \");\n  const a = Number(n[0]),\n    b = Number(n[1]);\n  const row = \"*\".repeat(a);\n  for (let i = 0; i < b; i++) {\n    console.log(row);\n  }\n});\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_가운데글자가져오기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_가운데글자가져오기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가운데글자가져오기",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 1,
            ".slice": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(s) {\n  let middle = Math.floor(s.length / 2);\n  if (s.length % 2 !== 0) {\n      return s[middle];\n  } else {\n      return s.slice(middle - 1, middle + 1);\n  }\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_내적_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_내적_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "내적",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(a, b) {\n  let answer = 0;\n  for (let i = 0; i < a.length; i++) {\n    answer += a[i] * b[i];\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_둘만의암호_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_둘만의암호_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "둘만의암호",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".includes": 1,
            ".indexOf": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(s, skip, index) {\n  const alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    .filter(v => !skip.includes(v));\n  let answer = '';\n  for (const v of s) {\n    answer += alphabet[(alphabet.indexOf(v) + index) % alphabet.length];\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_숫자짝꿍_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_숫자짝꿍_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자짝꿍",
        "problem_type": "구현",
        "countmethod": {
            ".split": 3,
            ".filter": 2,
            ".repeat": 1,
            ".min": 1,
            ".sort": 1,
            ".join": 1
        },
        "line_count": 16,
        "module": {},
        "code": "function solution(X, Y) {\n  let xArr = X.split(\"\");\n  let yArr = Y.split(\"\");\n  let result = \"\";\n  for (let i = 0; i < 10; i++) {\n    const curX = xArr.filter((a) => Number(a) === i).length;\n    const curY = yArr.filter((a) => Number(a) === i).length;\n    result += String(i).repeat(Math.min(curX, curY));\n  }\n  if (result === \"\") return \"-1\";\n  if (Number(result) === 0) return \"0\";\n  return result\n    .split(\"\")\n    .sort((a, b) => Number(b) - Number(a))\n    .join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_햄버거만들기_스택큐_0.js": {
        "file_name": "Lv1_0000_프로그래머스_햄버거만들기_스택큐_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "햄버거만들기",
        "problem_type": "스택큐",
        "countmethod": {
            ".forEach": 1,
            ".push": 1,
            ".splice": 1
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(ingredient) {\n  const stk = [];\n  let count = 0;\n  ingredient.forEach(v => {\n      stk.push(v);\n      if (stk[stk.length-1] === 1 &&\n          stk[stk.length-2] === 3 &&\n          stk[stk.length-3] === 2 &&\n          stk[stk.length-4] === 1) {\n          count++;\n          stk.splice(-4);\n      }\n  })\n  return count;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "X만큼간격이있는N개의숫자",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(x, n) {\n  var answer = [];\n  \n  for(let i=1;i<=n;i++){\n      answer.push(x*i)\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_2016년_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_2016년_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "2016년",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".getDay": 1,
            ".join": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(a, b) {\n  let day = new Date(`2016-${a}-${b}`);\n  const dayArr = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  return dayArr\n    .filter((a, b) => (day.getDay() === b ? dayArr[b] : null))\n    .join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_직사각형별찍기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_직사각형별찍기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "직사각형별찍기",
        "problem_type": "구현",
        "countmethod": {
            ".setEncoding": 1,
            ".on": 1,
            ".split": 1,
            ".repeat": 1,
            ".log": 1
        },
        "line_count": 10,
        "module": {},
        "code": "process.stdin.setEncoding(\"utf8\");\nprocess.stdin.on(\"data\", (data) => {\n  const n = data.split(\" \");\n  const a = Number(n[0]),\n    b = Number(n[1]);\n  const row = \"*\".repeat(a);\n  for (let i = 0; i < b; i++) {\n    console.log(row);\n  }\n});\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_대충만든자판_완전탐색_0.js": {
        "file_name": "Lv1_0000_프로그래머스_대충만든자판_완전탐색_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대충만든자판",
        "problem_type": "완전탐색",
        "countmethod": {
            ".forEach": 2,
            ".push": 2
        },
        "line_count": 18,
        "module": {},
        "code": "function solution(keymap, targets) {\n  const obj = {};\n  const answer = [];\n  keymap.forEach(str => {\n    for (let i = 0; i < str.length; i++) {\n      if (!obj[str[i]] || obj[str[i]] > i+1) obj[str[i]] = i+1;\n    }\n  });\n  targets.forEach(str => {\n    let cnt = 0;\n    for (const v of str) {\n      if (obj[v]) cnt += obj[v];\n      else return answer.push(-1);\n    }\n    answer.push(cnt);\n  });\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_제일작은수제거하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_제일작은수제거하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제일작은수제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".min": 1,
            ".push": 1
        },
        "line_count": 13,
        "module": {},
        "code": "function solution(arr) {\n    var answer = [];\n    if(arr.length===1){\n        return [-1]\n    }else{\n        m = Math.min(...arr)\n        for(let i of arr){\n            if(i!==m) answer.push(i)\n        }\n    }\n    \n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_2016년_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_2016년_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "2016년",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 9,
        "module": {},
        "code": "function solution(a, b) {\n    const day = ['THU', 'FRI', 'SAT', 'SUN', 'MON', 'TUE', 'WED'];\n    const month = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let days = b;\n    for (let i = 0; i < a-1; i++) {\n        days += month[i];\n    }\n    return day[days % 7];\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열다루기기본_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열다루기기본_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열다루기기본",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".every": 1,
            "isNaN": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(s) {\n  if (s.length === 4 || s.length === 6){\n      return s.split(\"\").every(a => !isNaN(a));\n  } else {\n      return false;\n  }\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".shift": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n  let arr = [];\n  for(let i = 0; i < n; i++){\n      if (n % i === 1){\n          arr.push(i);\n      }\n  }\n  return arr.shift();\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_카카오_비밀지도_구현_0.js": {
        "file_name": "Lv1_2018_카카오_비밀지도_구현_0.js",
        "level": "level1",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "비밀지도",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1,
            ".push": 1,
            ".toString": 1,
            ".padStart": 1,
            ".replace": 2
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(n, arr1, arr2) {\n  answer = [];\n  const zip = (a, b) => a.map((v, i) => [v, b[i]]);\n  for ([i, j] of zip(arr1, arr2)) {\n    answer.push(\n      (i | j).toString(2).padStart(n, \"0\").replace(/1/g, \"#\").replace(/0/g, \" \")\n    );\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열다루기기본_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열다루기기본_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열다루기기본",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".every": 1,
            "isNaN": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(s) {\n  if (s.length == 4 || s.length == 6) {\n    return s.split(\"\").every((x) => !isNaN(x));\n  } else return false;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_명예의전당(1)_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_명예의전당(1)_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "명예의전당(1)",
        "problem_type": "구현",
        "countmethod": {
            ".push": 2,
            ".sort": 1,
            ".pop": 1,
            ".min": 1
        },
        "line_count": 14,
        "module": {},
        "code": "function solution(k, score) {\n    let best = []\n    let result = []\n    for(let i=0;i<score.length;i++){\n        best.push(score[i])\n        best.sort((a,b) => b-a)\n        \n        if(best.length > k){\n            best.pop()\n        }\n        result.push(Math.min(...best))\n    }\n    return result\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "서울에서김서방찾기",
        "problem_type": "구현",
        "countmethod": {
            ".indexOf": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(seoul) {\n    return `김서방은 ${seoul.indexOf(\"Kim\")}에 있다`\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_1.js": {
        "file_name": "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "같은숫자는싫어",
        "problem_type": "스택큐",
        "countmethod": {
            ".push": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(arr) {\n  let array = [];\n  for (let i = 0; i < arr.length + 1; i++) {\n    if (arr[i] !== arr[i + 1]) {\n      array.push(arr[i]);\n    }\n  }\n  return array;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_짝수와홀수_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_짝수와홀수_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수와홀수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(num) {\n  return num % 2 === 0 ?  \"Even\" : \"Odd\"\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최소직사각형_완전탐색_0.js": {
        "file_name": "Lv1_0000_프로그래머스_최소직사각형_완전탐색_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최소직사각형",
        "problem_type": "완전탐색",
        "countmethod": {
            ".map": 2,
            ".sort": 1,
            ".push": 2,
            ".max": 2
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(sizes) {\n  let width = [];\n  let height = [];\n  sizes\n    .map((x) => x.sort((a, b) => b - a))\n    .map((x) => {\n      width.push(x[0]);\n      height.push(x[1]);\n    });\n  return Math.max(...width) * Math.max(...height);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_콜라츠추측_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_콜라츠추측_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "콜라츠추측",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(num) {\n  var answer = 0;\n  let cnt = 0;\n  while(num!==1 && cnt<500){\n      num = !(num%2) ? num/2 : num*3+1;\n      cnt++;\n  }\n  if(cnt>=500){\n      cnt = -1\n  }\n  \n  return cnt;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_행렬의덧셈_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_행렬의덧셈_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "행렬의덧셈",
        "problem_type": "구현",
        "countmethod": {
            ".push": 2
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(arr1, arr2) {\n  let result = [];\n  for (let i = 0; i < arr1.length; i++) {\n    let sum = [];\n    for (let k = 0; k < arr1[i].length; k++) {\n      sum.push(arr1[i][k] + arr2[i][k]);\n    }\n    result.push(sum);\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_예산_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_예산_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "예산",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".map": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(d, budget) {\n  let result = 0;\n  let cnt = 0;\n  d.sort((a, b) => a - b).map((x) => {\n    result += x;\n    result <= budget ? cnt++ : null;\n  });\n  return cnt;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최대공약수와최소공배수_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_최대공약수와최소공배수_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최대공약수와최소공배수",
        "problem_type": "구현",
        "countmethod": {
            ".max": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(n, m) {\n  let a;\n  let b;\n  for (let i = 1; i <= Math.max(n, m); i++) {\n    if (n % i == 0 && m % i == 0) {\n      a = i;\n    }\n  }\n  b = (n * m) / a;\n  return [a, b];\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_과일장수_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_과일장수_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "과일장수",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".slice": 2,
            ".push": 1,
            ".min": 1
        },
        "line_count": 16,
        "module": {},
        "code": "function solution(k, m, score) {\n    let scoreSort = score.sort((a,b) => b-a)\n    let boxs = []\n    let price = 0\n    \n    for(let i = 0; i < scoreSort.length; i += m){\n        if(scoreSort.slice(i, i + m).length === m){\n            boxs.push(scoreSort.slice(i, i + m))    \n        }\n    }\n    \n    for(let i = 0; i < boxs.length; i++){\n        price += Math.min(...boxs[i]) * m\n    }\n    return price\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_명예의전당_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_명예의전당_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "명예의전당",
        "problem_type": "구현",
        "countmethod": {
            ".push": 2,
            ".splice": 1,
            ".indexOf": 1,
            ".min": 2
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(k, score) {\n    var answer = [];\n    let temp = []\n    for (let i = 0; i < score.length; i++) {\n    temp.push(score[i]);\n      if (temp.length > k) {\n        temp.splice(temp.indexOf(Math.min(...temp)),1);\n      }\n      answer.push(Math.min(...temp));\n    }\n    return answer;\n  }",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_하샤드수_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_하샤드수_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "하샤드수",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".reduce": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(x) {\n  var answer = true;\n  \n  pivot = (x+'').split('').reduce((acc,cur)=>acc+cur*1,0)\n  return !(x%pivot);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_모의고사_완전탐색_0.js": {
        "file_name": "Lv1_0000_프로그래머스_모의고사_완전탐색_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모의고사",
        "problem_type": "완전탐색",
        "countmethod": {
            ".filter": 3,
            ".max": 1,
            ".push": 3
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(answers) {\n  const two = [2, 1, 2, 3, 2, 4, 2, 5];\n  const three = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]\n  const a = answers.filter((v, i) => v === i % 5 + 1).length;\n  const b = answers.filter((v, i) => v === two[i % 8]).length;\n  const c = answers.filter((v, i) => v === three[i % 10]).length;\n  \n  const max = Math.max(a,b,c);\n  \n  const answer = [];\n  if (max === a) answer.push(1);\n  if (max === b) answer.push(2);\n  if (max === c) answer.push(3);\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수제곱근판별_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_정수제곱근판별_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수제곱근판별",
        "problem_type": "구현",
        "countmethod": {
            ".sqrt": 2,
            "parseInt": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(n) {\n  let answer = -1;\n  let sqrt = Math.sqrt(n);\n  if (parseInt(sqrt) === Math.sqrt(n)){\n      answer = (sqrt + 1) ** 2;\n  } \n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_콜라츠추측_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_콜라츠추측_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "콜라츠추측",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(num) {\n  for (let i = 0; i <= 500; i++) {\n    if (num === 1) {\n      return i;\n    } else if (i === 500) {\n      return -1;\n    } else if (num % 2 === 0) {\n      num = num / 2;\n    } else if (num % 2 !== 0) {\n      num = (num * 3) + 1;\n    }\n  }\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_프로그래머스_로또의최고순위와최저순위_구현_0.js": {
        "file_name": "Lv1_2021_프로그래머스_로또의최고순위와최저순위_구현_0.js",
        "level": "level1",
        "year": "2021",
        "company_name": "프로그래머스",
        "problem_name": "로또의최고순위와최저순위",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 2,
            ".includes": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(lottos, win_nums) {\n  const zero = lottos.filter(v => v === 0).length;\n  if (zero === 6) return [1, 6];\n  const min = lottos.filter(v => win_nums.includes(v)).length;\n  if (min === 0) return [6, 6];\n  return [7 - min - zero, 7 - min];\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_완주하지못한선수_해시_1.js": {
        "file_name": "Lv1_0000_프로그래머스_완주하지못한선수_해시_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "완주하지못한선수",
        "problem_type": "해시",
        "countmethod": {
            ".sort": 2
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(participant, completion) {\n  participant.sort();\n  completion.sort();\n  for (let i = 0; i < participant.length; i++) {\n    if (participant[i] !== completion[i]) return participant[i];\n  }\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의개수와덧셈",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 14,
        "module": {},
        "code": "function solution(left, right) {\n  let measure = 0;\n  let answer = 0;\n  for (let i = left; i <= right; i++) {\n    for (let k = 1; k <= i; k++) {\n      if (i % k == 0) {\n        measure++;\n      }\n    }\n    measure % 2 == 0 ? (answer += i) : (answer -= i);\n    measure = 0;\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_푸드파이트대회_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_푸드파이트대회_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "푸드파이트대회",
        "problem_type": "구현",
        "countmethod": {
            ".forEach": 1,
            ".repeat": 1,
            ".trunc": 1,
            ".split": 1,
            ".reverse": 1,
            ".join": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(food) {\n  let answer = '';\n  food.forEach((num, i) => {\n      answer += `${i}`.repeat(Math.trunc(num / 2));\n  })\n  return answer + '0' + answer.split('').reverse().join('');\n}\n// https://school.programmers.co.kr/learn/courses/30/lessons/134240",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_카카오_다트게임_구현_0.js": {
        "file_name": "Lv1_2018_카카오_다트게임_구현_0.js",
        "level": "level1",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "다트게임",
        "problem_type": "구현",
        "countmethod": {
            ".slice": 1,
            ".push": 2,
            ".reduce": 1
        },
        "line_count": 21,
        "module": {},
        "code": "function solution(dartResult) {\n  const answer = [];\n  const area = {'S':1, 'D':2, 'T':3};\n  for (let i = 0; i < dartResult.length; i+=2) {\n      if (dartResult.slice(i, i+2) === '10') {\n          i++;\n          answer.push(10 ** area[dartResult[i+1]]);\n      } else {\n          answer.push(dartResult[i] ** area[dartResult[i+1]]);\n      }\n      if (dartResult[i+2] === '*') {\n          answer[answer.length - 1] *= 2;\n          answer[answer.length - 2] *= 2;\n          i++;\n      } else if (dartResult[i+2] === '#') {\n          answer[answer.length - 1] *= -1;\n          i++;\n      }\n  }\n  return answer.reduce((a, b) => a + b);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최소직사각형_완전탐색_1.js": {
        "file_name": "Lv1_0000_프로그래머스_최소직사각형_완전탐색_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최소직사각형",
        "problem_type": "완전탐색",
        "countmethod": {
            ".forEach": 1,
            ".sort": 1,
            ".max": 2
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(sizes) {\n    \n    sizes.forEach(size => size.sort((a,b) => b-a))\n    let row = Number.MIN_SAFE_INTEGER;\n    let col = Number.MIN_SAFE_INTEGER;\n    \n    for(let size of sizes){\n        const [a,b] = size;\n        row = Math.max(a, row);\n        col = Math.max(b, col);\n    }\n    \n    return row*col\n    \n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_부족한금액계산하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_부족한금액계산하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "부족한금액계산하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(price, money, count) {\n  let total = 0;\n  for (let i = 1; i <= count; i++) {\n    total += price * i;\n  }\n  return total > money ? total - money : 0;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_카드뭉치_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_카드뭉치_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "카드뭉치",
        "problem_type": "구현",
        "countmethod": {
            ".shift": 2
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(cards1, cards2, goal) {\n  for (const s of goal) {\n    if (cards1[0] == s) {\n      cards1.shift();\n    } else if (cards2[0] == s) {\n      cards2.shift();\n    } else {\n      return \"No\";\n    }\n  }\n  return \"Yes\";\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_부족한금액계산하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_부족한금액계산하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "부족한금액계산하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(price, money, count) {\n  let answer = 0;\n  for (let i = 0; i <= count; i++){\n      answer += price * i\n  }\n  return  answer > money ? answer - money : 0;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".split": 1,
            ".reduce": 1,
            "parseInt": 2
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(n) {\n  return n\n    .toString()\n    .split(\"\")\n    .reduce((ac, cu) => parseInt(ac) + parseInt(cu), 0);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숨어있는숫자의덧셈(1)",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            "isNaN": 1,
            ".reduce": 1,
            "parseInt": 2
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(my_string) {\n  return [...my_string]\n    .filter((el) => !isNaN(el))\n    .reduce((a, c) => parseInt(a) + parseInt(c), 0);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_푸드파이트대회_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_푸드파이트대회_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "푸드파이트대회",
        "problem_type": "구현",
        "countmethod": {
            "parseInt": 1,
            ".push": 1,
            ".join": 2,
            ".reverse": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(food) {\n  let player = [];\n  let dish;\n  for (let i = 1; i < food.length; i++) {\n    dish = parseInt(food[i] / 2);\n    for (let k = 0; k < dish; k++) {\n      player.push(i);\n    }\n  }\n  return player.join(\"\") + 0 + player.reverse().join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_크기가작은부분문자열_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_크기가작은부분문자열_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "크기가작은부분문자열",
        "problem_type": "구현",
        "countmethod": {
            ".slice": 2,
            ".push": 1,
            ".filter": 1,
            "parseInt": 2
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(t, p) {\n  let array = [];\n  for (let i = 0; i < t.length; i++) {\n    if (t.slice(i, i + p.length).length == p.length) {\n      array.push(t.slice(i, i + p.length));\n    }\n  }\n  return array.filter((x) => parseInt(x) <= parseInt(p)).length;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_행렬의덧셈_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_행렬의덧셈_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "행렬의덧셈",
        "problem_type": "구현",
        "countmethod": {
            ".push": 2
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(arr1, arr2) {\n  let result = [];\n  for (let i = 0; i < arr1.length; i++) {\n    let sum = [];\n    for (let k = 0; k < arr1[i].length; k++) {\n      sum.push(arr1[i][k] + arr2[i][k]);\n    }\n    result.push(sum);\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_2016년_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_2016년_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "2016년",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".getDay": 1,
            ".join": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(a, b) {\n  let day = new Date(`2016-${a}-${b}`);\n  const dayArr = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  return dayArr\n    .filter((a, b) => (day.getDay() === b ? dayArr[b] : null))\n    .join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_평균구하기_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_평균구하기_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평균구하기",
        "problem_type": "구현",
        "countmethod": {
            ".reduce": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(arr) {\n  var answer = arr.reduce((acc,cur)=>acc+cur,0)/arr.length;\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".reverse": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(s) {\n  return [...s].sort().reverse().join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_소수찾기_에라토스테네스의체_0.js": {
        "file_name": "Lv1_0000_프로그래머스_소수찾기_에라토스테네스의체_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "소수찾기",
        "problem_type": "에라토스테네스의체",
        "countmethod": {
            ".Array": 1,
            ".keys": 1,
            ".map": 1,
            ".sqrt": 1,
            ".filter": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(n) {\n  const arr = [...Array(n-1).keys()].map(v => v+2);\n  for (let i = 2; i < Math.sqrt(n); i++) {\n    if (arr[i-2] !== null) {\n      for (let j = 2; i * j <= n; j++) {\n        arr[i * j - 2] = null;\n      }\n    }\n  }\n  return arr.filter(v => v !== null).length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_2.js": {
        "file_name": "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "같은숫자는싫어",
        "problem_type": "스택큐",
        "countmethod": {
            ".filter": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(arr){\n  return arr.filter((v,i) => v != arr[i+1]);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_K번째수_정렬_1.js": {
        "file_name": "Lv1_0000_프로그래머스_K번째수_정렬_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "K번째수",
        "problem_type": "정렬",
        "countmethod": {
            ".map": 1,
            ".slice": 1,
            ".sort": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(array, commands) {\n  return commands.map(v => {\n      return array\n          .slice(v[0]-1, v[1])\n          .sort((a, c) => a - c, 0)[v[2]-1];\n  })\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "핸드폰번호가리기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(x, n) {\n  var answer = [];\n  \n  for(let i=1;i<=n;i++){\n      answer.push(x*i)\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_추억점수_해시_0.js": {
        "file_name": "Lv1_0000_프로그래머스_추억점수_해시_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "추억점수",
        "problem_type": "해시",
        "countmethod": {
            ".forEach": 1,
            ".set": 1,
            ".map": 1,
            ".reduce": 1,
            ".get": 2
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(name, yearning, photo) {\n    const hash = new Map()\n    name.forEach((name, i) => {\n        hash.set(name, yearning[i])\n    })\n    const answer = photo.map((el) => {\n        return el.reduce((acc, e) => {\n            if (hash.get(e)) {\n                return acc + hash.get(e)\n            }\n            return acc\n        }, 0)\n    })\n    return answer\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_신규아이디추천_구현_0.js": {
        "file_name": "Lv1_2021_카카오_신규아이디추천_구현_0.js",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "신규아이디추천",
        "problem_type": "구현",
        "countmethod": {
            ".toLowerCase": 1,
            ".replace": 5,
            ".slice": 1,
            ".repeat": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(new_id) {\n  new_id = new_id\n      .toLowerCase()\n      .replace(/[^\\w\\-\\.]/g, '')\n      .replace(/\\.{2,}/g, '.')\n      .replace(/^\\.|\\.$/g, '')\n      .replace(/^$/, 'a')\n      .slice(0,15).replace(/\\.$/, '');\n  return new_id.length > 2 ? new_id : new_id + new_id[new_id.length - 1].repeat(3 - new_id.length);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_가운데글자가져오기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_가운데글자가져오기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가운데글자가져오기",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 1,
            ".slice": 2
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(s) {\n  const cnt = Math.floor(s.length / 2);\n  return s.length % 2 == 0 ? s.slice(cnt - 1, cnt + 1) : s.slice(cnt, cnt + 1);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_0.js": {
        "file_name": "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "같은숫자는싫어",
        "problem_type": "스택큐",
        "countmethod": {
            ".push": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(arr) {\n  let array = [];\n  for (let i = 0; i < arr.length + 1; i++) {\n    if (arr[i] !== arr[i + 1]) {\n      array.push(arr[i]);\n    }\n  }\n  return array;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최대공약수와최소공배수_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_최대공약수와최소공배수_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최대공약수와최소공배수",
        "problem_type": "구현",
        "countmethod": {
            ".max": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(n, m) {\n  let a;\n  let b;\n  for (let i = 1; i <= Math.max(n, m); i++) {\n    if (n % i == 0 && m % i == 0) {\n      a = i;\n    }\n  }\n  b = (n * m) / a;\n  return [a, b];\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "function solution(n) {\n  for (let i = 2; i < n; i++) {\n    if (n % i === 1) return i;\n  }\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2020_카카오_키패드누르기_구현_0.js": {
        "file_name": "Lv1_2020_카카오_키패드누르기_구현_0.js",
        "level": "level1",
        "year": "2020",
        "company_name": "카카오",
        "problem_name": "키패드누르기",
        "problem_type": "구현",
        "countmethod": {
            ".abs": 2
        },
        "line_count": 51,
        "module": {},
        "code": "function solution(numbers, hand) {\n  const keypad = {\n    1: [0, 0],\n    2: [0, 1],\n    3: [0, 2],\n    4: [1, 0],\n    5: [1, 1],\n    6: [1, 2],\n    7: [2, 0],\n    8: [2, 1],\n    9: [2, 2],\n    0: [3, 1],\n  };\n  let leftHand = [3, 0];\n  let rightHand = [3, 2];\n  let result = \"\";\n  for (let i = 0; i < numbers.length; i++) {\n    const number = numbers[i];\n    if (number === 1 || number === 4 || number === 7) {\n      result += \"L\";\n      leftHand = keypad[number];\n    } else if (number === 3 || number === 6 || number === 9) {\n      result += \"R\";\n      rightHand = keypad[number];\n    } else {\n      const leftDistance = calculateDistance(leftHand, keypad[number]);\n      const rightDistance = calculateDistance(rightHand, keypad[number]);\n      if (leftDistance < rightDistance) {\n        result += \"L\";\n        leftHand = keypad[number];\n      } else if (leftDistance > rightDistance) {\n        result += \"R\";\n        rightHand = keypad[number];\n      } else {\n        if (hand === \"left\") {\n          result += \"L\";\n          leftHand = keypad[number];\n        } else {\n          result += \"R\";\n          rightHand = keypad[number];\n        }\n      }\n    }\n  }\n  return result;\n}\nfunction calculateDistance(handPosition, numberPosition) {\n  const [handRow, handCol] = handPosition;\n  const [numberRow, numberCol] = numberPosition;\n  return Math.abs(handRow - numberRow) + Math.abs(handCol - numberCol);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".map": 1,
            ".sort": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n  return +(n + '').split(\"\").map(Number).sort((a,b) => b - a).join(\"\");\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의개수와덧셈",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 14,
        "module": {},
        "code": "function solution(left, right) {\n  let measure = 0;\n  let answer = 0;\n  for (let i = left; i <= right; i++) {\n    for (let k = 1; k <= i; k++) {\n      if (i % k == 0) {\n        measure++;\n      }\n    }\n    measure % 2 == 0 ? (answer += i) : (answer -= i);\n    measure = 0;\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내P와Y의개수",
        "problem_type": "구현",
        "countmethod": {
            ".toUpperCase": 1,
            ".split": 1,
            ".push": 2
        },
        "line_count": 14,
        "module": {},
        "code": "function solution(s){\n  let p = [];\n  let y = [];\n  let str = s.toUpperCase().split(\"\");\n  for(let i = 0; i < str.length; i++){\n      if(str[i] === \"P\") {\n          p.push(str[i])\n      } \n      if (str[i] === \"Y\") {\n          y.push(str[i])\n      }\n  }\n  return p.length === y.length\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_K번째수_정렬_2.js": {
        "file_name": "Lv1_0000_프로그래머스_K번째수_정렬_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "K번째수",
        "problem_type": "정렬",
        "countmethod": {
            ".map": 1,
            ".slice": 1,
            ".sort": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(array, commands) {\n    return commands.map(([i, j, k]) => {\n        return array.slice(i-1,j).sort((a,b) => a-b)[k-1]\n    })\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내P와Y의개수",
        "problem_type": "구현",
        "countmethod": {
            ".toUpperCase": 2,
            ".split": 2
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(s) {\n  return (\n    s.toUpperCase().split(\"P\").length === s.toUpperCase().split(\"Y\").length\n  );\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의개수와덧셈",
        "problem_type": "구현",
        "countmethod": {
            ".sqrt": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(left, right) {\n    let answer = 0;\n    for(let i=left; i<=right; i++) {\n        Math.sqrt(i) % 1 ? answer+=i : answer-=i\n    }\n    return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".min": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n  let x = [];\n  for (let i = 0; i <= n; i++) {\n    if (n % i === 1) {\n      x.push(i);\n    }\n  }\n  return Math.min(...x);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_덧칠하기_구현_0.js": {
        "file_name": "Lv1_0000_프로그래머스_덧칠하기_구현_0.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "덧칠하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(n, m, section) {\n    let cnt = 0\n    let idx = 0\n    for(let i of section){\n        while(i > idx){\n            cnt++\n            idx = i + m - 1\n        }\n    }\n    return cnt\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_삼총사_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_삼총사_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼총사",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(number) {\n  let result = 0;\n  for (let i = 0, length = number.length; i < length; i++) {\n    for (let j = i + 1; j < length; j++) {\n      for (let k = j + 1; k < length; k++) {\n        let sum = number[i] + number[j] + number[k];\n        if (sum) continue;\n        result++;\n      }\n    }\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_프로그래머스_소수만들기_구현_0.js": {
        "file_name": "Lv1_2018_프로그래머스_소수만들기_구현_0.js",
        "level": "level1",
        "year": "2018",
        "company_name": "프로그래머스",
        "problem_name": "소수만들기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".filter": 1
        },
        "line_count": 16,
        "module": {},
        "code": "function solution(nums) {\n  const answer = [];\n  for (let i = 0; i < nums.length - 2; i++) {\n    for (let j = i+1; j < nums.length - 1; j++) {\n      for (let k = j+1; k < nums.length; k++) {\n        answer.push(nums[i] + nums[j] + nums[k]);\n      }\n    }\n  }\n  return answer.filter(v => {\n    for (let i = 2; i < v; i++) {\n      if (v % i === 0) return false;\n    }\n    return true;\n  }).length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_추억점수_구현_1.js": {
        "file_name": "Lv1_0000_프로그래머스_추억점수_구현_1.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "추억점수",
        "problem_type": "구현",
        "countmethod": {
            ".map": 2,
            ".filter": 1,
            ".includes": 1,
            ".indexOf": 1,
            ".reduce": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(name, yearning, photo) {\n  return photo.map((v) => {\n    return v\n      .filter((x) => (x = name.includes(x)))\n      .map((v) => yearning[name.indexOf(v)])\n      .reduce((acc, cur) => acc + cur, 0);\n  });\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_카카오_[1차]비밀지도_구현_0.js": {
        "file_name": "Lv1_2018_카카오_[1차]비밀지도_구현_0.js",
        "level": "level1",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "[1차]비밀지도",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1,
            ".push": 1,
            ".toString": 1,
            ".padStart": 1,
            ".replace": 2
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(n, arr1, arr2) {\n  answer = [];\n  const zip = (a, b) => a.map((v, i) => [v, b[i]]);\n  for ([i, j] of zip(arr1, arr2)) {\n    answer.push(\n      (i | j).toString(2).padStart(n, \"0\").replace(/1/g, \"#\").replace(/0/g, \" \")\n    );\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열다루기기본_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_문자열다루기기본_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열다루기기본",
        "problem_type": "구현",
        "countmethod": {
            ".test": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(s) {\n    return /^\\d{6}$|^\\d{4}$/.test(s)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_삼총사_구현_2.js": {
        "file_name": "Lv1_0000_프로그래머스_삼총사_구현_2.js",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼총사",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 16,
        "module": {},
        "code": "function solution(number) {\n    const n = number.length;\n    let count = 0;\n  \n    for (let i = 0; i < n - 2; i++) {\n      for (let j = i + 1; j < n - 1; j++) {\n        for (let k = j + 1; k < n; k++) {\n          if (number[i] + number[j] + number[k] === 0) {\n            count++;\n          }\n        }\n      }\n    }\n  \n    return count;\n  }\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_2022_카카오_두큐합같게만들기_투포인터_0.js": {
        "file_name": "Lv2_2022_카카오_두큐합같게만들기_투포인터_0.js",
        "level": "level2",
        "year": "2022",
        "company_name": "카카오",
        "problem_name": "두큐합같게만들기",
        "problem_type": "투포인터",
        "countmethod": {
            ".forEach": 2,
            ".set": 3,
            ".split": 1,
            ".get": 4
        },
        "line_count": 34,
        "module": {},
        "code": "function solution(survey, choices) {\n    \n    let answer = '';\n    const table = [['R','T'],['C','F'],['J','M'],['A','N']];\n    const map = new Map();\n    \n    table.forEach((alphas) => {\n      alphas.forEach(alpha =>{\n            map.set(alpha,0);\n      })\n    })\n    \n    for(let i=0; i<survey.length; i++){\n        const [front, back] = survey[i].split('');\n        const choice = choices[i];\n        \n        if (choice === 4) continue;\n        \n        if (choice < 4){\n            map.set(front, map.get(front) + (4 - choice));\n        } else {\n            map.set(back, map.get(back) + (choice - 4));\n        }        \n    }\n    \n    for(let i = 0; i < table.length; i++){\n        const [typeOne, typeTwo] = table[i];\n        const [typeOneData, typeTwoData] = [map.get(typeOne), map.get(typeTwo)];\n        \n        if (typeOneData ===  typeTwoData || typeOneData > typeTwoData) answer += typeOne;\n        else answer += typeTwo;      \n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_뒤에있는큰숫자찾기_스택_0.js": {
        "file_name": "Lv2_0000_프로그래머스_뒤에있는큰숫자찾기_스택_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "뒤에있는큰숫자찾기",
        "problem_type": "스택",
        "countmethod": {
            ".fill": 1
        },
        "line_count": 35,
        "module": {},
        "code": "class Stack {\n  constructor() {\n    this.arr = [];\n    this.index = 0;\n  }\n  push(item) {\n    this.arr[this.index++] = item;\n  }\n  pop() {\n    if (this.index <= 0) return null;\n    const popValue = this.arr[--this.index];\n    return popValue;\n  }\n  peek() {\n    if (this.index <= 0) return null;\n    return this.arr[this.index - 1];\n  }\n}\nfunction solution(numbers) {\n  const answer = new Array(numbers.length).fill(-1);\n  const stack = new Stack();\n  let data = {};\n  for (let i = 0; i < numbers.length; i++) {\n    if (stack.peek() === null || numbers[stack.peek()] >= numbers[i]) {\n      stack.push(i);\n    } else {\n      while (stack.peek() !== null && numbers[stack.peek()] < numbers[i]) {\n        data = stack.pop();\n        answer[data] = numbers[i];\n      }\n      stack.push(i);\n    }\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 1
    },
    "Lv2_0000_프로그래머스_올바른괄호_스택큐_0.js": {
        "file_name": "Lv2_0000_프로그래머스_올바른괄호_스택큐_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "올바른괄호",
        "problem_type": "스택큐",
        "countmethod": {
            ".split": 1
        },
        "line_count": 15,
        "module": {},
        "code": "function solution(s) {\n  let isOpen = 0;\n  s = s.split('');\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === '(') {\n      isOpen++;\n    } else {\n      if (isOpen < 1) {\n        return false;\n      }\n      isOpen--;\n    }\n  }\n  return isOpen === 0 ? true : false;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_H-INDEX_정렬_0.js": {
        "file_name": "Lv2_0000_프로그래머스_H-INDEX_정렬_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "H-INDEX",
        "problem_type": "정렬",
        "countmethod": {
            ".sort": 1,
            ".reduce": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(citations) {\n  citations.sort((a, b) => b - a);\n  return citations.reduce((acc, cur, idx) => (idx < cur ? idx + 1 : acc), 0);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_이진변환반복하기_구현_0.js": {
        "file_name": "Lv2_0000_프로그래머스_이진변환반복하기_구현_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "이진변환반복하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 2,
            ".filter": 2,
            ".toString": 1
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(s) {\n    let binary = 0\n    let zero = 0\n    \n    while(s !== \"1\"){\n        zero += s.split('').filter(x => x === '0').length\n        s = s.split('').filter(x => x !== '0').length\n        s = s.toString(2)\n        binary++\n    }\n    return [binary, zero]\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_기능개발_스택큐_0.js": {
        "file_name": "Lv2_0000_프로그래머스_기능개발_스택큐_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "기능개발",
        "problem_type": "스택큐",
        "countmethod": {
            ".map": 1,
            ".ceil": 1,
            ".forEach": 1,
            ".max": 1,
            ".push": 2
        },
        "line_count": 17,
        "module": {},
        "code": "function solution(progresses, speeds) {\n    const arr = progresses.map((v,i) => Math.ceil((100 - v)/speeds[i]))\n    const result = []\n    let num = 0\n    let max = arr[0]\n    arr.forEach((v, i) => {\n        let temp = max\n        max = Math.max(temp, v)\n        if(max === temp) num++\n        else {\n            result.push(num)\n            num = 1\n        }\n        if(i === arr.length - 1) result.push(num)\n    })\n    return result\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_이진변환반복하기_재귀_1.js": {
        "file_name": "Lv2_0000_프로그래머스_이진변환반복하기_재귀_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "이진변환반복하기",
        "problem_type": "재귀",
        "countmethod": {
            ".replaceAll": 1,
            ".toString": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(s, x=0, y=0) {\n    function rec(s) {\n        if(s === '1') return\n        const t = s.replaceAll('0','')\n        y += s.length - t.length\n        x++\n        rec(t.length.toString(2))\n    }\n    rec(s)\n    return [x,y]\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_다리를지나는트럭_스택큐_0.js": {
        "file_name": "Lv2_0000_프로그래머스_다리를지나는트럭_스택큐_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "다리를지나는트럭",
        "problem_type": "스택큐",
        "countmethod": {
            ".fill": 1,
            ".reduce": 1,
            ".unshift": 2,
            ".shift": 1,
            ".pop": 2
        },
        "line_count": 23,
        "module": {},
        "code": "function solution(bridge_length, weight, truck_weights) {\n  let answer = 0;\n  let temp = Array(bridge_length).fill(0);\n  while (truck_weights.length) {\n    if (\n      temp.reduce((a, c) => a + c) - temp[temp.length - 1] + truck_weights[0] <=\n      weight\n    ) {\n      temp.unshift(truck_weights.shift());\n      if (temp.length > bridge_length) {\n        temp.pop();\n      }\n      answer++;\n    } else {\n      temp.unshift(0);\n      if (temp.length > bridge_length) {\n        temp.pop();\n      }\n      answer++;\n    }\n  }\n  return answer + bridge_length;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_프로세스_스택큐_0.js": {
        "file_name": "Lv2_0000_프로그래머스_프로세스_스택큐_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "프로세스",
        "problem_type": "스택큐",
        "countmethod": {
            ".sort": 1,
            ".slice": 1,
            ".pop": 1
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(priorities, location) {\n    let count = 0\n    const maxArr = [...priorities].sort((a,b) => a-b) \n    for(let i = 0; true; i++){\n        if(priorities[i] === maxArr.slice(-1)*1) {\n            count++\n            maxArr.pop()\n            if(i === location) return count\n        }\n        if(i === priorities.length) i = -1\n    }\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_연속된부분수열의합_투포인터_0.js": {
        "file_name": "Lv2_0000_프로그래머스_연속된부분수열의합_투포인터_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "연속된부분수열의합",
        "problem_type": "투포인터",
        "countmethod": 0,
        "line_count": 24,
        "module": {},
        "code": "function solution(sequence, k) {\n    let answer = [];\n    let start = 0;\n    let end = 0;\n    let sum = sequence[0];\n  \n    while (end < sequence.length) {\n      if (sum < k) {\n        end++;\n        sum += sequence[end];\n      } else if (sum > k) {\n        sum -= sequence[start];\n        start++;\n      } else {\n        if (!answer.length || end - start < answer[1] - answer[0]) {\n          answer = [start, end];\n        }\n        end++;\n        sum += sequence[end];\n      }\n    }\n  \n    return answer;\n  }",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_H-INDEX_정렬_1.js": {
        "file_name": "Lv2_0000_프로그래머스_H-INDEX_정렬_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "H-INDEX",
        "problem_type": "정렬",
        "countmethod": {
            ".sort": 1,
            ".filter": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(citations) {\n    return citations.sort((a,b) => b-a).filter((v,i) => v >= i+1).length\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_올바른괄호_스택큐_1.js": {
        "file_name": "Lv2_0000_프로그래머스_올바른괄호_스택큐_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "올바른괄호",
        "problem_type": "스택큐",
        "countmethod": 0,
        "line_count": 8,
        "module": {},
        "code": "function solution(s){\n    let acc = 0\n    for(let i=0; i<s.length; i++) {\n        s[i] === '(' ? acc+=1 : acc-=1\n        if(acc < 0) return false\n    } \n    return acc === 0 ? true : false\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_2018_카카오_[1차]캐시_구현_0.js": {
        "file_name": "Lv2_2018_카카오_[1차]캐시_구현_0.js",
        "level": "level2",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "[1차]캐시",
        "problem_type": "구현",
        "countmethod": {
            ".toLowerCase": 1,
            ".indexOf": 1,
            ".splice": 1,
            ".push": 2,
            ".shift": 1
        },
        "line_count": 22,
        "module": {},
        "code": "function solution(cacheSize, cities) {\n  let time = 0;\n  let cache = [];\n  for (let i = 0; i < cities.length; i++) {\n    let city = cities[i].toLowerCase();\n    let index = cache.indexOf(city);\n    if (index !== -1) {\n      //hit\n      cache.splice(index, 1);\n      cache.push(city);\n      time += 1;\n    } else {\n      //miss\n      cache.push(city);\n      time += 5;\n      if (cacheSize < cache.length) {\n        cache.shift();\n      }\n    }\n  }\n  return time;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_올바른괄호_스택큐_2.js": {
        "file_name": "Lv2_0000_프로그래머스_올바른괄호_스택큐_2.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "올바른괄호",
        "problem_type": "스택큐",
        "countmethod": 0,
        "line_count": 8,
        "module": {},
        "code": "function solution(s) {\n  let 스택 = 0;\n  for (let i = 0; i < s.length; i++) {\n    스택 += s[i] === \"(\" ? 1 : -1;\n    if (스택 < 0) return false;\n  }\n  return 스택 === 0 ? true : false;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_최댓값과최솟값_구현_0.js": {
        "file_name": "Lv2_0000_프로그래머스_최댓값과최솟값_구현_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값과최솟값",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".min": 1,
            ".max": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(s) {\n    const arr = s.split(' ')\n    return `${Math.min(...arr)} ${Math.max(...arr)}`;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_2022_카카오_주차요금계산_구현_0.js": {
        "file_name": "Lv2_2022_카카오_주차요금계산_구현_0.js",
        "level": "level2",
        "year": "2022",
        "company_name": "카카오",
        "problem_name": "주차요금계산",
        "problem_type": "구현",
        "countmethod": {
            ".from": 1,
            ".map": 2,
            ".split": 4,
            ".sort": 1,
            ".fill": 1,
            ".indexOf": 2,
            ".ceil": 1
        },
        "line_count": 21,
        "module": {},
        "code": "function solution(fees, records) {\n  const number = Array.from(new Set(records.map((v) => v.split(\" \")[1]))).sort(\n    (a, b) => a - b\n  );\n  const answer = Array(number.length).fill(0);\n  for (let item of records) {\n    item = item.split(\" \");\n    if (item[2] === \"IN\") {\n      item[0] = item[0].split(\":\");\n      answer[number.indexOf(item[1])] -= item[0][0] * 60 + +item[0][1] - 1439;\n    } else {\n      item[0] = item[0].split(\":\");\n      answer[number.indexOf(item[1])] += item[0][0] * 60 + +item[0][1] - 1439;\n    }\n  }\n  return answer.map((v) =>\n    v - fees[0] > 0\n      ? fees[1] + Math.ceil((v - fees[0]) / fees[2]) * fees[3]\n      : fees[1]\n  );\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_최댓값과최솟값_구현_1.js": {
        "file_name": "Lv2_0000_프로그래머스_최댓값과최솟값_구현_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값과최솟값",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".max": 1,
            ".min": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(s) {\n    s = s.split(\" \")\n    let max = Math.max(...s)\n    let min = Math.min(...s)\n    return min+\" \"+max;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_짝지어제거하기_스택큐_0.js": {
        "file_name": "Lv2_0000_프로그래머스_짝지어제거하기_스택큐_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝지어제거하기",
        "problem_type": "스택큐",
        "countmethod": {
            ".push": 2,
            ".pop": 1
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(s) {\n    let stack = [];\n    stack.push(s[0]);\n    for (let i = 1; i < s.length; i++) {\n        if (stack[stack.length - 1] == s[i]) {\n            stack.pop()\n        } else {\n            stack.push(s[i])\n        }\n    }\n    return stack.length ? 0 : 1;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_JADENCASE문자열만들기_구현_0.js": {
        "file_name": "Lv2_0000_프로그래머스_JADENCASE문자열만들기_구현_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "JADENCASE문자열만들기",
        "problem_type": "구현",
        "countmethod": {
            ".toLowerCase": 1,
            ".split": 1,
            ".map": 1,
            ".toUpperCase": 1,
            ".slice": 1,
            ".join": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(s) {\n    let words = s.toLowerCase().split(' ')\n    words = words.map(i => i ? i[0].toUpperCase() + i.slice(1) : '')\n    return words.join(' ')\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_연속된부분수열의합_투포인터_0.js": {
        "file_name": "Lv2_0000_프로그래머스_연속된부분수열의합_투포인터_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "연속된부분수열의합",
        "problem_type": "투포인터",
        "countmethod": 0,
        "line_count": 24,
        "module": {},
        "code": "function solution(sequence, k) {\n    let answer = [];\n    let start = 0;\n    let end = 0;\n    let sum = sequence[0];\n  \n    while (end < sequence.length) {\n      if (sum < k) {\n        end++;\n        sum += sequence[end];\n      } else if (sum > k) {\n        sum -= sequence[start];\n        start++;\n      } else {\n        if (!answer.length || end - start < answer[1] - answer[0]) {\n          answer = [start, end];\n        }\n        end++;\n        sum += sequence[end];\n      }\n    }\n  \n    return answer;\n  }",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_피로도_완전탐색_0.js": {
        "file_name": "Lv2_0000_프로그래머스_피로도_완전탐색_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피로도",
        "problem_type": "완전탐색",
        "countmethod": {
            ".fill": 1,
            ".push": 1,
            ".max": 1
        },
        "line_count": 17,
        "module": {},
        "code": "function solution(k, dungeons) {\n  var answer = [];\n  let visited = new Array(dungeons.length).fill(0);\n  function dfs(count, k) {\n    answer.push(count);\n    for (let i = 0; i < dungeons.length; i++) {\n      let current = dungeons[i];\n      if (k >= current[0] && !visited[i]) {\n        visited[i] = 1;\n        dfs(count + 1, k - current[1]);\n        visited[i] = 0;\n      }\n    }\n  }\n  dfs(0, k);\n  return Math.max(...answer);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_백준_서로다른부분문자열의개수_해시_0.js": {
        "file_name": "Lv2_0000_백준_서로다른부분문자열의개수_해시_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "서로다른부분문자열의개수",
        "problem_type": "해시",
        "countmethod": {
            ".readFileSync": 1,
            ".toString": 1,
            ".trim": 1,
            ".add": 1,
            ".slice": 1,
            ".log": 1
        },
        "line_count": 11,
        "module": {},
        "code": "const fs = require(\"fs\");\nconst filePath = process.platform === \"linux\" ? \"/dev/stdin\" : \"text.txt\";\nconst newLine = process.platform === \"linux\" ? \"\\n\" : \"\\r\\n\";\nconst input = fs.readFileSync(filePath).toString().trim();\nconst set = new Set();\nfor (let i = 0; i < input.length; i++) {\n  for (let j = input.length; j > i; j--) {\n    set.add(input.slice(i, j));\n  }\n}\nconsole.log(set.size);\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_최댓값과최솟값_구현_2.js": {
        "file_name": "Lv2_0000_프로그래머스_최댓값과최솟값_구현_2.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값과최솟값",
        "problem_type": "구현",
        "countmethod": {
            ".min": 1,
            ".split": 2,
            ".map": 2,
            ".max": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(s) {\n  var answer = '';\n  answer = `${Math.min(...s.split(' ').map(Number))} ${Math.max(\n    ...s.split(' ').map(Number)\n  )}`;\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_타겟넘버_DFS_0.js": {
        "file_name": "Lv2_0000_프로그래머스_타겟넘버_DFS_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "타겟넘버",
        "problem_type": "DFS",
        "countmethod": 0,
        "line_count": 15,
        "module": {},
        "code": "function solution(numbers, target) {\n  let answer = 0;\n  function dfs(index, currentSum) {\n    if (index === numbers.length) {\n      if (currentSum === target) {\n        answer++;\n      }\n      return;\n    }\n    dfs(index + 1, currentSum + numbers[index]);\n    dfs(index + 1, currentSum - numbers[index]);\n  }\n  dfs(0, 0);\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_피보나치수_다이나믹_0.js": {
        "file_name": "Lv2_0000_프로그래머스_피보나치수_다이나믹_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피보나치수",
        "problem_type": "다이나믹",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(n) {\n    const arr = [0,1]\n    for(let i = 2; i<=n; i++) {\n        arr[i] = (arr[i-1] + arr[i-2]) % 1234567\n    }\n    return arr[n] \n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_2022_카카오_K진수에서소수개수구하기_구현_0.js": {
        "file_name": "Lv2_2022_카카오_K진수에서소수개수구하기_구현_0.js",
        "level": "level2",
        "year": "2022",
        "company_name": "카카오",
        "problem_name": "K진수에서소수개수구하기",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".split": 1,
            ".filter": 1,
            ".map": 1,
            ".forEach": 1,
            ".sqrt": 1
        },
        "line_count": 16,
        "module": {},
        "code": "function solution(n, k) {\n  var answer = 0;\n  n.toString(k)\n    .split('0')\n    .filter((a) => a !== '' && a !== '1')\n    .map(Number)\n    .forEach((a, i) => {\n      for (let i = 2; i <= Math.sqrt(a); i++) {\n        if (a % i === 0) {\n          return false;\n        }\n      }\n      answer++;\n    });\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_2019_카카오_튜플_정렬_0.js": {
        "file_name": "Lv2_2019_카카오_튜플_정렬_0.js",
        "level": "level2",
        "year": "2019",
        "company_name": "카카오",
        "problem_name": "튜플",
        "problem_type": "정렬",
        "countmethod": {
            ".replaceAll": 2,
            ".split": 1,
            ".sort": 2,
            ".set": 1,
            ".get": 1,
            ".map": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(s) {\n    const arr = s.replaceAll('{','').replaceAll('}','').split(',').sort()\n    const map = new Map()\n    for(let i of arr) map.set(i, (map.get(i) || 0)+1) \n    return [...map].sort((a,b) => b[1]-a[1]).map(i => ~~i[0])\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_의상_해시_0.js": {
        "file_name": "Lv2_0000_프로그래머스_의상_해시_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "의상",
        "problem_type": "해시",
        "countmethod": {
            ".forEach": 1,
            ".values": 1,
            ".reduce": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(clothes) {\n    const obj = {}\n    clothes.forEach(i => obj[i[1]] = ++obj[i[1]] || 1)\n    return Object.values(obj).reduce((a,c) => a*(c+1), 1) - 1\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_백준_좌표압축_정렬_0.js": {
        "file_name": "Lv2_0000_백준_좌표압축_정렬_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "좌표압축",
        "problem_type": "정렬",
        "countmethod": {
            ".readFileSync": 1,
            ".toString": 1,
            ".trim": 2,
            ".split": 2,
            ".map": 1,
            ".sort": 1,
            ".forEach": 2,
            ".set": 1,
            ".get": 1,
            ".log": 1
        },
        "line_count": 11,
        "module": {},
        "code": "const fs = require(\"fs\");\nconst filePath = process.platform === \"linux\" ? \"/dev/stdin\" : \"text.txt\";\nconst newLine = process.platform === \"linux\" ? \"\\n\" : \"\\r\\n\";\nconst key = fs.readFileSync(filePath).toString().trim().split(newLine)[1].split(\" \").map(Number);\nconst map = new Map();\n[...new Set(key)].sort((a, b) => a - b).forEach((el, i) => map.set(el, i));\nlet answer = \"\";\nkey.forEach((el) => {\n  answer += `${map.get(el)} `;\n});\nconsole.log(answer.trim());\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_카펫_완전탐색_0.js": {
        "file_name": "Lv2_0000_프로그래머스_카펫_완전탐색_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "카펫",
        "problem_type": "완전탐색",
        "countmethod": 0,
        "line_count": 12,
        "module": {},
        "code": "function solution(brown, yellow) {\n    const total = brown + yellow;\n    for (let i = 3; i * i <= total; i++) {\n        if (total % i === 0) {\n            let col = total / i;\n            let row = i;\n            if ((col - 2) * (row - 2) === yellow) {\n                return [col, row];\n            }\n        }\n    }\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_가장큰수_정렬_0.js": {
        "file_name": "Lv2_0000_프로그래머스_가장큰수_정렬_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장큰수",
        "problem_type": "정렬",
        "countmethod": {
            ".map": 1,
            ".toString": 1,
            ".sort": 1,
            ".join": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(numbers) {\n    const answer = numbers.map(el => el.toString())\n        .sort((a, b) => (b + a) - (a + b)).join('');\n    return answer[0] === '0' ? '0' : answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_우박수열정적분_구현_0.js": {
        "file_name": "Lv2_0000_프로그래머스_우박수열정적분_구현_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "우박수열정적분",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".map": 1
        },
        "line_count": 22,
        "module": {},
        "code": "function solution(k, ranges) {\n  const graph = [k];\n  while (k !== 1) {\n    if (k % 2) {\n      k = k * 3 + 1;\n    } else {\n      k /= 2;\n    }\n    graph.push(k);\n  }\n  return ranges.map((cur) => {\n    let result = 0;\n    if (cur[0] > graph.length - 1 + cur[1]) {\n      return -1;\n    } else {\n      for (let i = cur[0]; i < graph.length - 1 + cur[1]; i++) {\n        result += (graph[i] + graph[i + 1]) / 2;\n      }\n      return result;\n    }\n  });\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_카펫_완전탐색_1.js": {
        "file_name": "Lv2_0000_프로그래머스_카펫_완전탐색_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "카펫",
        "problem_type": "완전탐색",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(brown, yellow) {\n  let a = brown - 4;\n  let b = 1;\n  while (true) {\n    if (a == (yellow / b) * 2 + b * 2) {\n      break;\n    }\n    b++;\n  }\n  return [yellow / b + 2, b + 2];\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_백준_큐_스택큐_0.js": {
        "file_name": "Lv2_0000_백준_큐_스택큐_0.js",
        "level": "level2",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "큐",
        "problem_type": "스택큐",
        "countmethod": {
            ".split": 1
        },
        "line_count": 69,
        "module": {},
        "code": "class Node {\n  constructor(value) {\n    this.value = value\n    this.next = null\n  }\n}\nclass Queue {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  \n  enqueue(value) {\n    const newValue = new Node(value)\n    if (!this.head) {\n      this.head = newValue\n      this.tail = newValue\n    } else {\n      this.tail.next = newValue\n      this.tail = newValue\n    }\n    this.length++\n  }\n  dequeue() {\n    if (!this.head) return null\n    const temp = this.head\n    if (this.head === this.tail) {\n      this.tail = null\n    }\n    this.head = this.head.next\n    this.length--\n    return temp\n  }\n}\nfunction solution(input) {\n  const queue = new Queue()\n  let result = \"\"\n  for (let orderStr of input) {\n    const order = orderStr.split(\" \")\n    const orderList = {\n      push: () => {\n        queue.enqueue(order[1])\n      },\n      pop: () => {\n        const node = queue.dequeue()\n        if (!node) result += `-1\\n`\n        else result += `${node.value}\\n`\n      },\n      size: () => {\n        result += `${queue.length}\\n`\n      },\n      empty: () => {\n        if (!queue.length) result += `1\\n`\n        else result += `0\\n`\n      },\n      front: () => {\n        if (queue.length) result += `${queue.head.value}\\n`\n        else result += `-1\\n`\n      },\n      back: () => {\n        if (queue.length) result += `${queue.tail.value}\\n`\n        else result += `-1\\n`\n      }\n    }\n    orderList[order[0]]()\n  }\n  return result\n}\n",
        "check_user_func": 0,
        "check_user_class": 1
    },
    "Lv2_0000_프로그래머스_JADENCASE문자열만들기_구현_1.js": {
        "file_name": "Lv2_0000_프로그래머스_JADENCASE문자열만들기_구현_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "JADENCASE문자열만들기",
        "problem_type": "구현",
        "countmethod": {
            ".toLowerCase": 1,
            ".split": 1,
            ".map": 1,
            ".replace": 1,
            ".toUpperCase": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(s) {\n    let arr = s.toLowerCase().split(' ')\n    return arr.map(x => x.replace(/^[a-z]/,char => char.toUpperCase())).join(' ')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_올바른괄호_스택큐_3.js": {
        "file_name": "Lv2_0000_프로그래머스_올바른괄호_스택큐_3.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "올바른괄호",
        "problem_type": "스택큐",
        "countmethod": 0,
        "line_count": 20,
        "module": {},
        "code": "function solution(s){\n    let answer = true\n    let cnt = 0\n    for(let i=0;i<s.length;i++){\n        if(s[i] === '('){\n            cnt++\n        }else cnt--\n        \n        if(cnt < 0){\n            answer = false\n            break\n        }\n        else if(cnt > s.length - 1){\n            answer = false\n            break\n        }\n    }\n    if(cnt !== 0) answer = false\n    return answer\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_가장큰수_정렬_1.js": {
        "file_name": "Lv2_0000_프로그래머스_가장큰수_정렬_1.js",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장큰수",
        "problem_type": "정렬",
        "countmethod": {
            ".sort": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(numbers) {\n    const answer = numbers.sort((a,b) => (b+''+a) - (a+''+b)).join('')\n    return answer[0] !== '0' ? answer : '0'\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모음제거_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_모음제거_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모음제거",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".filter": 1,
            ".includes": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(my_string) {\n  let result = my_string.split(\"\").filter(v => !['a', 'e', 'i', 'o', 'u'].includes(v)).join(\"\");\n  return result;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_외계어사전_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_외계어사전_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "외계어사전",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 2,
            ".join": 2,
            ".map": 1,
            ".split": 1,
            ".find": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(spell, dic) {\n    spell = spell.sort().join('')\n    let answer = dic.map(item=>item.split('').sort().join('')).find(item=>item ===spell)\n    return answer!==undefined?1:2\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼각형의완성조건(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(sides) {\n  sides.sort((a, b) => a - b);\n  return sides[2] < sides[0] + sides[1] ? 1 : 2;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_특정문자제거하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_특정문자제거하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "특정문자제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".join": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(my_string, letter) {\n  var answer = '';\n  \n  answer = my_string.split(letter).join('')\n  \n  return answer\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모음제거_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_모음제거_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모음제거",
        "problem_type": "구현",
        "countmethod": {
            ".replaceAll": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(my_string){\n    return my_string.replaceAll(/[aeiou]/g,\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_구슬을나누는경우의수_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_구슬을나누는경우의수_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "구슬을나누는경우의수",
        "problem_type": "구현",
        "countmethod": {
            ".round": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(balls, share) {\nconst Fac =(n) => {\n    let result = 1;\n    for(let i=2; i<=n; i++) {\n        result *= i;}\n    return result;\n}\n   return Math.round(Fac(balls) / (Fac(balls-share) * Fac(share)))\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_편지_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_편지_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "편지",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(message) {\n    return answer= (message.length)*2;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최빈값구하기_해시_0.js": {
        "file_name": "Lv0_0000_프로그래머스_최빈값구하기_해시_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최빈값구하기",
        "problem_type": "해시",
        "countmethod": {
            ".forEach": 1,
            ".set": 1,
            ".get": 1,
            ".sort": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(array) {\n    const map = new Map()\n    array.forEach(i => map.set(i, (map.get(i) || 0) + 1))\n    const sorted = [...map].sort((a,b) => b[1] - a[1])\n    return (sorted.length === 1 || sorted[0][1] !== sorted[1][1]) ? sorted[0][0] : -1\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_369게임_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_369게임_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "369게임",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(order) {\n    return (''+order).split(/[369]/).length - 1\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_진료순서정하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_진료순서정하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "진료순서정하기",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".map": 1,
            ".indexOf": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(emergency) {\n    let arr = [...emergency].sort((a,b)=>b-a)\n    return emergency.map(v => arr.indexOf(v)+1)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_외계행성의나이_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_외계행성의나이_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "외계행성의나이",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".map": 1,
            ".reduce": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution (age) {\n    return String(age).split(\"\").map(Number).reduce((a,b) => a+= arr[b], \"\")\n}  \n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_A로B만들기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_A로B만들기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "A로B만들기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 2,
            ".sort": 2,
            ".join": 2
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(before, after) {\n  return before.split(\"\").sort().join(\"\") === after.split(\"\").sort().join(\"\") ? 1 : 0\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_옷가게할인받기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_옷가게할인받기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "옷가게할인받기",
        "problem_type": "구현",
        "countmethod": {
            "parseInt": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(price) {\n    if(price>= 500000){\n        price*=0.8\n    }else if(price>=300000){\n        price*=0.9\n    }else if (price>=100000){\n        price*=0.95\n    }\n    return parseInt(price)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_머쓱이보다키큰사람_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_머쓱이보다키큰사람_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "머쓱이보다키큰사람",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(array, height) {\n  let num = [];\n  for (let i = 0; i <= array.length; i++) {\n    if (height < array[i]) {\n      num.push(i)\n    }\n  }\n  return num.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_한번만등장한문자_해시_0.js": {
        "file_name": "Lv0_0000_프로그래머스_한번만등장한문자_해시_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "한번만등장한문자",
        "problem_type": "해시",
        "countmethod": {
            ".push": 1,
            ".sort": 1,
            ".join": 1
        },
        "line_count": 14,
        "module": {},
        "code": "function solution(s) {\n  const count = {};\n  for (let char of s) {\n    count[char] = count[char] ? count[char] + 1 : 1;\n  }\n  const uniqueChars = [];\n  for (let char in count) {\n    if (count[char] === 1) {\n      uniqueChars.push(char);\n    }\n  }\n  uniqueChars.sort();\n  return uniqueChars.join(\"\");\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_잘라서배열로저장하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_잘라서배열로저장하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "잘라서배열로저장하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".push": 1,
            ".slice": 1,
            ".join": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(my_str, n) {\n    let strArr = my_str.split('')\n    let arr = []\n    for(let i = 0; i<strArr.length;i += n){\n        arr.push(strArr.slice(i,i+n).join(''))\n    }\n    return arr\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_직사각형넓이구하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_직사각형넓이구하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "직사각형넓이구하기",
        "problem_type": "구현",
        "countmethod": {
            ".forEach": 1,
            ".push": 2,
            ".max": 2,
            ".min": 2
        },
        "line_count": 13,
        "module": {},
        "code": "function solution(dots) {\n    let rowArr = []\n    let row = 0\n    let colArr = []\n    let col = 0\n    dots.forEach((item)=>{\n       rowArr.push(item[0])\n        row = Math.max(...rowArr) - Math.min(...rowArr)\n        colArr.push(item[1])\n        col = Math.max(...colArr) - Math.min(...colArr)\n    })\n    return row * col\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최댓값만들기(1)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_최댓값만들기(1)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값만들기(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(numbers) {\n    numbers.sort((a,b) => b-a);\n    return numbers[0] * numbers[1]\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자반복출력하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자반복출력하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자반복출력하기",
        "problem_type": "구현",
        "countmethod": {
            ".repeat": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(my_string, n) {\n  let print = \"\";\n  for (let i = 0; i < my_string.length; i++) {\n    print += my_string[i].repeat(n);\n  }\n  return print;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_개미군단_완전탐색_0.js": {
        "file_name": "Lv0_0000_프로그래머스_개미군단_완전탐색_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "개미군단",
        "problem_type": "완전탐색",
        "countmethod": {
            ".floor": 1,
            ".min": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(hp) {\n  let minAnts = Infinity;\n  for (let i = 0; i <= hp / 5; i++) {\n    const remainingHp = hp - i * 5;\n    const j = Math.floor(remainingHp / 3);\n    const k = remainingHp % 3;\n    const totalAnts = i + j + k;\n    minAnts = Math.min(minAnts, totalAnts);\n  }\n  return minAnts;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_캐릭터의좌표_해시_0.js": {
        "file_name": "Lv0_0000_프로그래머스_캐릭터의좌표_해시_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "캐릭터의좌표",
        "problem_type": "해시",
        "countmethod": {
            ".min": 2,
            ".max": 2,
            ".forEach": 1
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(keyinput, board) {\n    const point = [0,0]\n    const newboard = [~~(board[0]/2), ~~(board[1]/2)]\n    const move = {\n        up: arr => arr[1] = Math.min(arr[1] + 1, newboard[1]),\n        down: arr => arr[1] = Math.max(arr[1] - 1, -newboard[1]),\n        left: arr => arr[0] = Math.max(arr[0] - 1, -newboard[0]),\n        right: arr => arr[0] = Math.min(arr[0] + 1, newboard[0]),\n    }\n    keyinput.forEach(i => move[i](point))\n    return point\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_아이스아메리카노_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_아이스아메리카노_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "아이스아메리카노",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(money) {\n  return [Math.floor(money / 5500), money % 5500]\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_N의배수_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_N의배수_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "N의배수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "function solution(num, n) {\n    var answer = 0;\n    if(num % n === 0) {\n        answer = 1;\n    }\n    else{\n        answer = 0;\n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열계산하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열계산하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열계산하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(my_string) {\n    const arr = my_string.split(' ')\n    let num = 0;\n    for(let i=0; i<arr.length; i+=2){\n        num += (arr[i-1] === '-'? -arr[i] : +arr[i])\n    }\n    return num\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(1)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(1)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(1)",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 2
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n  return n % 7 === 0 ? Math.floor(n / 7) : Math.floor(n / 7) + 1\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_팩토리얼_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_팩토리얼_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "팩토리얼",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(n) {\n  let ans = 1;\n  for (let i = 1; i <= n; i++) {\n    ans *= i;\n    if (ans === n) {\n      return i;\n    }\n    if (ans > n) {\n      return i - 1;\n    }\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_자릿수더하기_구현_3.js": {
        "file_name": "Lv0_0000_프로그래머스_자릿수더하기_구현_3.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".reduce": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(n) {\n  let answer =  String(n).split(\"\").reduce((a,c) => a + c * 1, 0)\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열뒤집기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열뒤집기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열뒤집기",
        "problem_type": "구현",
        "countmethod": {
            ".reverse": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(num_list) {\n    return answer = [...num_list].reverse()\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_369게임_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_369게임_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "369게임",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".split": 2,
            ".filter": 1,
            ".includes": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(order) {\n  var answer = 0;\n  \n  answer=order.toString().split('').filter(v=>\"369\".split('').includes(v)).length\n  \n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_제곱수판별하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_제곱수판별하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제곱수판별하기",
        "problem_type": "구현",
        "countmethod": {
            ".sqrt": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n  return Math.sqrt(n) % 1 === 0 ? 1 : 2\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열섞기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열섞기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열섞기",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(str1, str2) {\n    return [...str1].map((a, i) => a+str2[i]).join(\"\")\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열이몇번등장하는지세기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열이몇번등장하는지세기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열이몇번등장하는지세기",
        "problem_type": "구현",
        "countmethod": {
            ".substring": 1
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(myString, pat) {\n  let count = 0;\n  let startIndex = 0;\n  while (startIndex <= myString.length - pat.length) {\n    const substring = myString.substring(startIndex, startIndex + pat.length);\n    if (substring === pat) {\n      count++;\n    }\n    startIndex++;\n  }\n  return count;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_세균증식_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_세균증식_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "세균증식",
        "problem_type": "구현",
        "countmethod": {
            ".pow": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n, t) {\n    return n * Math.pow(2, t);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_홀짝구분하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_홀짝구분하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "홀짝구분하기",
        "problem_type": "구현",
        "countmethod": {
            ".log": 1
        },
        "line_count": 5,
        "module": {},
        "code": "    n = Number(input[0]);\n    function solution (){\n        return(n % 2 === 0 ? `${n} is even` : `${n} is odd`)\n    };\n    console.log(solution(n));\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_연속된수의합_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_연속된수의합_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "연속된수의합",
        "problem_type": "구현",
        "countmethod": {
            ".from": 1,
            ".ceil": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(num, total) {\n    return Array.from({length: num}, (v,i) => Math.ceil(total/num) - ~~(num/2) + i)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_인덱스바꾸기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_인덱스바꾸기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "인덱스바꾸기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".join": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(my_string, num1, num2) {\n    const arr = my_string.split('');\n    [arr[num1], arr[num2]] = [arr[num2], arr[num1]];\n    return arr.join('');\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열여러번뒤집기_정렬_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열여러번뒤집기_정렬_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열여러번뒤집기",
        "problem_type": "정렬",
        "countmethod": {
            ".forEach": 1,
            ".join": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(my_string, queries) {\n    const arr = [...my_string]\n    queries.forEach(([s,e]) => {\n        for(let i=0; i<(e-s)/2; i++) {\n            [arr[s+i], arr[e-i]] = [arr[e-i], arr[s+i]]\n        } \n    })\n    return arr.join('')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_대문자와소문자_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_대문자와소문자_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대문자와소문자",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1,
            ".test": 1,
            ".toUpperCase": 1,
            ".toLowerCase": 1,
            ".join": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(my_string) {\n    return [...my_string].map(i => \n        /[a-z]/.test(i) ? i.toUpperCase() : i.toLowerCase()\n    ).join('')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_인덱스바꾸기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_인덱스바꾸기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "인덱스바꾸기",
        "problem_type": "구현",
        "countmethod": {
            ".splice": 2,
            ".join": 1
        },
        "line_count": 6,
        "module": {},
        "code": "function solution(my_string, num1, num2) {\n  let answer = [...my_string];\n  answer.splice(num1, 1, my_string[num2]);\n  answer.splice(num2, 1, my_string[num2]);\n  return answer.join('');\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_약수구하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_약수구하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수구하기",
        "problem_type": "구현",
        "countmethod": {
            ".sqrt": 1,
            ".add": 2,
            ".sort": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(n) {\n    let s = new Set();\n    for (let i = 1; i <= Math.sqrt(n); i++) {\n        !(n % i) && (s.add(i), s.add(n / i))\n    }\n    return [...s].sort((a, b) => a - b);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_유한소수판별하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_유한소수판별하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "유한소수판별하기",
        "problem_type": "구현",
        "countmethod": {
            ".min": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(a, b) {\n    for(let i=0; i<=Math.min(a,b); i++) {\n        (a%i===0 && b%i===0) && (a=a/i, b=b/i)\n    }\n    while (!(b%2)) b /= 2\n    while (!(b%5)) b /= 5\n    return b === 1 ? 1 : 2\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최댓값만들기(2)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_최댓값만들기(2)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값만들기(2)",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".max": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(numbers) {\n  let answer = [];\n  for (let i = 0; i < numbers.length; i++) {\n    for (let j = 0; j < numbers.length; j++) {\n      if (i !== j) {\n        answer.push(numbers[i] * numbers[j]);\n      }\n    }\n  }\n  return Math.max(...answer);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(1)",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".map": 1,
            ".filter": 1,
            ".isNaN": 1,
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(my_string) {\n  let answer = my_string.split(\"\").map(Number).filter((v) => !Number.isNaN(v)).sort((a, b) => a - b);\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_A로B만들기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_A로B만들기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "A로B만들기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 2,
            ".sort": 2,
            ".join": 2
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(before, after) {\n  return before.split(\"\").sort().join(\"\") === after.split(\"\").sort().join(\"\")\n    ? 1\n    : 0;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열안에문자열_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열안에문자열_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열안에문자열",
        "problem_type": "구현",
        "countmethod": {
            ".includes": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(str1, str2) {\n    return str1.includes(str2)==1?1:2\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_저주의숫자3_다이나믹_0.js": {
        "file_name": "Lv0_0000_프로그래머스_저주의숫자3_다이나믹_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "저주의숫자3",
        "problem_type": "다이나믹",
        "countmethod": {
            ".from": 1,
            ".filter": 1,
            ".test": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n) {\n    return Array.from({length: n*3}, (_,i) => i).filter(i => i%3 && !(/3/.test(i)))[n-1]\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_수열과구간쿼리2_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_수열과구간쿼리2_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "수열과구간쿼리2",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1,
            ".slice": 1,
            ".sort": 1,
            ".find": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(arr, queries) {\n    return queries.map(([s, e, k]) => {\n        return arr.slice(s,e+1).sort((a,b) => a-b).find(i => i>k) || -1\n    })\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_두수의연산값비교하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_두수의연산값비교하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두수의연산값비교하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "function solution(a, b) {\n    const atob = String(a) + String(b)\n    const ab2 = 2*a*b\n    \n    return atob >= ab2 ? Number(atob) : Number(ab2)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(1)",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".isInteger": 1,
            ".push": 1,
            ".sort": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(my_string) {\n  let answer = [];\n  const newArr = my_string.split('');\n  for (let i = 0; i < newArr.length; i++) {\n    if (Number.isInteger(Number(newArr[i]))) {\n      answer.push(Number(newArr[i]));\n    }\n  }\n  return answer.sort();\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최빈값구하기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_최빈값구하기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최빈값구하기",
        "problem_type": "구현",
        "countmethod": {
            ".set": 1,
            ".get": 1,
            ".sort": 2
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(array) {\n  let arr = new Map();\n  for (let i of array) {\n    arr.set(i, (arr.get(i) || 0) + 1);\n  }\n  let result = [...arr].sort((a, b) => b[0] - a[0]); // 원소 먼저 정렬\n  result.sort((a, b) => b[1] - a[1]); // 최빈값 정렬\n  if (result.length === 1) return result[0][0];\n  else if (result[0][1] === result[1][1]) return -1;\n  else return result[0][0];\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_N의배수고르기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_N의배수고르기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "N의배수고르기",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(n, numlist) {\n  return numlist.filter((el) => el % n === 0)\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_대문자와소문자_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_대문자와소문자_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대문자와소문자",
        "problem_type": "구현",
        "countmethod": {
            ".charCodeAt": 10,
            ".fromCharCode": 2
        },
        "line_count": 12,
        "module": {},
        "code": "function solution(my_string) {\n  var answer = '';\n  for (str of my_string){\n      if ('a'.charCodeAt(0) <= str.charCodeAt(0) && str.charCodeAt(0)<= 'z'.charCodeAt(0)){\n          answer += String.fromCharCode(str.charCodeAt(0)-32)\n      }\n      else if ('A'.charCodeAt(0) <= str.charCodeAt(0) && str.charCodeAt(0) <= 'Z'.charCodeAt(0)){\n          answer += String.fromCharCode(str.charCodeAt(0)+32)\n      }\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_주사위의개수_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_주사위의개수_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "주사위의개수",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 3
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(box, n) {\n    const width = Math.floor(box[0]/n);\n    const length = Math.floor(box[1]/n);\n    const height = Math.floor(box[2]/n);\n    \n    return width * length * height;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_7의개수_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_7의개수_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "7의개수",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            ".split": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(array) {\n  return array.join('').split('7').length - 1;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(2)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(2)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(2)",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 7,
        "module": {},
        "code": "function solution(n) {\n    for(let i = 1 ; i <= n; i++){\n        if(6 * i % n == 0) {\n            return i\n        }   \n    }\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_진료순서정하기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_진료순서정하기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "진료순서정하기",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".map": 1,
            ".indexOf": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(emergency) {\n  let sort = [...emergency].sort((a, b) => b - a);\n  return emergency.map((v) => sort.indexOf(v) + 1);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_삼격형의완성조건(1)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_삼격형의완성조건(1)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼격형의완성조건(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(sides) {\n  const arr = sides.sort((a, b) => a - b)\n  return arr[0] + arr[1] > arr[2] ? 1 : 2\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_다음에올숫자_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_다음에올숫자_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "다음에올숫자",
        "problem_type": "구현",
        "countmethod": {
            ".pop": 2
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(common) {\n    return (common[0]-common[1] === common[1] - common[2]) \n    ? common.pop()-common[0]+common[1]\n    : common.pop()/common[0]*common[1]\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_연속된수의합_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_연속된수의합_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "연속된수의합",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(num, total) {\n    var answer = [];\n    let start = (total/num) - ((num-1)/2);\n    \n    for(let i = 0 ; i < num; i++){\n        answer.push(start);\n        start += 1;\n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_다음에올숫자_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_다음에올숫자_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "다음에올숫자",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "function solution(common) {\n    let obj = common[1] - common[0]\n    let obj2 = common[2] - common[1]\n    \n    return (obj === obj2)? common[common.length-1] + obj : common[common.length-1] * (obj2 / obj)  \n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열원소의길이_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열원소의길이_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열원소의길이",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(strlist) {\n    let answer = [];\n    for(let i=0; i<strlist.length; i++){\n        answer.push(strlist[i].length)\n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(2)",
        "problem_type": "구현",
        "countmethod": {
            ".toLowerCase": 1,
            ".split": 1,
            ".sort": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(my_string) {\n    return my_string.toLowerCase().split('').sort().join('')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_수열과구간쿼리3_정렬_0.js": {
        "file_name": "Lv0_0000_프로그래머스_수열과구간쿼리3_정렬_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "수열과구간쿼리3",
        "problem_type": "정렬",
        "countmethod": {
            ".forEach": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(arr, queries) {\n    queries.forEach(([i,j]) => [arr[i], arr[j]] = [arr[j], arr[i]])\n    return arr\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_N의배수고르기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_N의배수고르기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "N의배수고르기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n, numlist) {\n  let answer = [];\n  for (let i = 0; i < numlist.length; i++) {\n    if (numlist[i] % n === 0) {\n      answer.push(numlist[i]);\n    }\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열겹쳐쓰기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열겹쳐쓰기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열겹쳐쓰기",
        "problem_type": "구현",
        "countmethod": {
            ".splice": 1,
            ".join": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(my_string, overwrite_string, s) {\n    const myStr = [...my_string]\n    myStr.splice(s, overwrite_string.length, overwrite_string)\n    return myStr.join(\"\")\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가위바위보_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_가위바위보_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가위바위보",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(rsp) {\n    let result = \"\";\n    for(let i = 0; i < rsp.length; i++) {\n        if(rsp[i] === \"2\"){\n            result += \"0\";\n        }else if(rsp[i] === \"0\"){\n            result += \"5\";\n        }else if (rsp[i] === \"5\"){\n            result += \"2\";\n        }\n    }\n    return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_순서쌍의개수_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_순서쌍의개수_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "순서쌍의개수",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n    let arr = [];\n    for(let i = 1; i <= n; i++){\n        if(n % i === 0){\n            arr.push(i);\n        }\n    }\n    return arr.length\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숨어있는숫자의덧셈(1)",
        "problem_type": "구현",
        "countmethod": {
            ".match": 1,
            ".reduce": 1,
            "parseInt": 2
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(my_string) {\n  return my_string\n      .match(/[0-9]/g)\n      .reduce((a, b) => parseInt(a) + parseInt(b), 0)\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_대문자와소문자_구현_2.js": {
        "file_name": "Lv0_0000_프로그래머스_대문자와소문자_구현_2.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대문자와소문자",
        "problem_type": "구현",
        "countmethod": {
            ".toUpperCase": 2,
            ".toLowerCase": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(my_string) {\n    let result = \"\";\n    for(let i of my_string){\n        if(i === i.toUpperCase()){\n            result += i.toLowerCase();\n        }else{\n            result += i.toUpperCase();\n        }\n    }\n    return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_치킨쿠폰_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_치킨쿠폰_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "치킨쿠폰",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(chicken) {\n    return ~~(chicken*0.111111)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열만들기4_스택큐_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열만들기4_스택큐_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열만들기4",
        "problem_type": "스택큐",
        "countmethod": {
            ".push": 2,
            ".slice": 1,
            ".pop": 1
        },
        "line_count": 11,
        "module": {},
        "code": "function solution(arr) {\n    const stk = []\n    for(let i = 0; i < arr.length; i++) {\n        if(!stk.length) stk.push(arr[i])\n        else {\n            if ([...stk.slice(-1)] < arr[i]) stk.push(arr[i])\n            else stk.pop(), --i\n        }\n    }\n    return stk;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_백준_고양이_구현_0.js": {
        "file_name": "Lv0_0000_백준_고양이_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "백준",
        "problem_name": "고양이",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "const cat = \n`\\\\    /\\\\\n )  ( ')\n(  /  )\n \\\\(__)|\n`;\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_점의위치구하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_점의위치구하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "점의위치구하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 15,
        "module": {},
        "code": "function solution(dot) {\n  let answer = 0;\n  let x = dot[0] > 0 ? 1 : 0;\n  let y = dot[1] > 0 ? 1 : 0;\n  if (x === 1 && y === 1) {\n    return 1;\n  } else if (x === 0 && y === 1) {\n    return 2;\n  } else if (x === 0 && y === 0) {\n    return 3;\n  } else {\n    return 4;\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_평행_완전탐색_0.js": {
        "file_name": "Lv0_0000_프로그래머스_평행_완전탐색_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평행",
        "problem_type": "완전탐색",
        "countmethod": {
            ".splice": 1
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(dots) {\n    for(let i = 1; i < dots.length; i++) {\n        const arr = [...dots]\n        const [pick] = arr.splice(i,1)\n        if ((arr[0][0]-pick[0])*(arr[1][1]-arr[2][1])===(arr[0][1]-pick[1])*(arr[1][0]-arr[2][0])) return 1\n    }\n    return 0\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_암호해독_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_암호해독_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "암호해독",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".filter": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(cipher, code) {\n    var answer = cipher.split('').filter((v, i) => (i + 1) % code === 0).join('');\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_조건에맞게수열변환하기1_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_조건에맞게수열변환하기1_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "조건에맞게수열변환하기1",
        "problem_type": "구현",
        "countmethod": {
            ".push": 3
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(arr) {\n  var answer = [];\n  for(let i=0; i<arr.length;i++){\n      if(arr[i]>=50 && arr[i]%2===0) answer.push(arr[i]/2)\n      else if(arr[i]<50 && arr[i]%2!==0) answer.push(arr[i]*2)\n      else answer.push(arr[i])\n  }\n  return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의평균값_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열의평균값_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의평균값",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 9,
        "module": {},
        "code": "function solution(numbers) {\n    let sum = 0;\n    \n    for (let i = 0; i < numbers.length; i++){\n     sum += numbers[i];      \n    }\n         \n    return  sum / numbers.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열계산하기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열계산하기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열계산하기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            "isNaN": 1
        },
        "line_count": 14,
        "module": {},
        "code": "function solution(my_string) {\n    let arr = my_string.split(' ')\n    let operator = '+';\n    let answer = 0\n    for(let i = 0;i<=my_string.length;i++){\n        let num = Number(arr[i])\n        if(isNaN(num)){\n            operator = arr[i]\n        }else{\n            operator == '+'?answer += num:answer -= num\n        }\n    }\n    return answer\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_특이한정렬_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_특이한정렬_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "특이한정렬",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".abs": 2
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(numlist, n) {\n  return numlist.sort((a, b) => Math.abs(a - n) - Math.abs(b - n) || b - a);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_종이자르기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_종이자르기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "종이자르기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(M, N) {\n    return answer = (M * N)-1;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자리스트를문자열로변환하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자리스트를문자열로변환하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자리스트를문자열로변환하기",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(arr) {\n    return [...arr].join('');\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가장큰수찾기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_가장큰수찾기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장큰수찾기",
        "problem_type": "구현",
        "countmethod": {
            ".max": 1,
            ".indexOf": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(array) {\n  const bigNum = Math.max(...array);\n  const bigIndex = array.indexOf(bigNum);\n  return [bigNum, bigIndex];\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열자르기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열자르기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열자르기",
        "problem_type": "구현",
        "countmethod": {
            ".slice": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(numbers, num1, num2) {\n    return answer = numbers.slice(num1,num2+1);\n    \n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_옷가게할인받기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_옷가게할인받기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "옷가게할인받기",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 3
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(price) {\n  if (price >= 500000) {\n    return Math.floor(price - price * 0.2);\n  } else if (price >= 300000) {\n    return Math.floor(price - price * 0.1);\n  } else if (price >= 100000) {\n    return Math.floor(price - price * 0.05);\n  }\n  return price;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_잘라서배열로저장하기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_잘라서배열로저장하기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "잘라서배열로저장하기",
        "problem_type": "구현",
        "countmethod": {
            ".match": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(my_str, n) {\n  let reg = new RegExp(`.{1,${n}}`, 'g')\n  return my_str.match(reg)\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모스부호(1)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_모스부호(1)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모스부호(1)",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".reduce": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(letter) {\n    const morse = { \n        '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',\n        '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',\n        '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',\n        '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',\n        '-.--':'y','--..':'z'\n    }\n    return letter.split(' ').reduce((a,c) => a + morse[c], '')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼각형의완성조건(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(sides) {\n   sides.sort((a,b) => b-a);\n   return sides[0] < sides[1] + sides[2] ? 1 : 2;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_영어가싫어요_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_영어가싫어요_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "영어가싫어요",
        "problem_type": "구현",
        "countmethod": {
            ".forEach": 1,
            ".replaceAll": 1
        },
        "line_count": 5,
        "module": {},
        "code": "function solution(numbers) {\n    const arr = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    arr.forEach((v,i) => numbers = numbers.replaceAll(v, i))\n    return Number(numbers)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열곱하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열곱하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열곱하기",
        "problem_type": "구현",
        "countmethod": {
            ".repeat": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(my_string, k) {\n    return my_string.repeat(k);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수의합_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_짝수의합_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "function solution(n) {\n    let answer = 0;\n    for (i=0; i<=n; i++){\n        if(i % 2 === 0){\n            answer += i\n    }        \n        }        \n    \n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_369게임_구현_2.js": {
        "file_name": "Lv0_0000_프로그래머스_369게임_구현_2.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "369게임",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".split": 1,
            ".filter": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(order) {\n  return order.toString().split(\"\").filter((v) => v === \"3\" || v === \"6\" || v === \"9\").length\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열두배만들기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열두배만들기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열두배만들기",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(numbers) {\n  return numbers.map(n => n * 2);\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자찾기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_숫자찾기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자찾기",
        "problem_type": "구현",
        "countmethod": {
            ".from": 1,
            ".indexOf": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(num, k) {\n  const newArr = Array.from(String(num));\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i] === String(k)) {\n      return newArr.indexOf(String(k)) + 1;\n    }\n  }\n  return -1;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_두수의합_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_두수의합_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두수의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(num1, num2) {\n  return num1 + num2;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의유사도_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_배열의유사도_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의유사도",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".includes": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(s1, s2) {\n  return s1.filter((v, i) => s2.includes(v)).length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_점의위치구하기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_점의위치구하기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "점의위치구하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 14,
        "module": {},
        "code": "function solution(dot) {\n    if(dot[0]>0 && dot[1]>0){\n        return 1\n    }\n    else if(dot[0]<0 && dot[1]>0){\n        return 2\n    }\n    else if(dot[0]<0 && dot[1]<0){\n        return 3\n    }\n    else return 4\n     \n        \n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(2)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(2)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숨어있는숫자의덧셈(2)",
        "problem_type": "구현",
        "countmethod": {
            ".match": 1,
            ".reduce": 1,
            "parseInt": 2
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(my_string) {\n  return (my_string.match(/\\d+/g) ?? [])\n      .reduce((a, b) => parseInt(a) + parseInt(b), 0)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중복된문자제거_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_중복된문자제거_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중복된문자제거",
        "problem_type": "구현",
        "countmethod": {
            ".from": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(my_string) {\n  const newSet = new Set(my_string);\n  return Array.from(newSet).join('');\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_369게임_구현_3.js": {
        "file_name": "Lv0_0000_프로그래머스_369게임_구현_3.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "369게임",
        "problem_type": "구현",
        "countmethod": {
            ".toString": 1,
            ".match": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(order) {\n    let value = order.toString().match(/[369]/g) ?? []\n    return value.length;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_2차원으로만들기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_2차원으로만들기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "2차원으로만들기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".splice": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(num_list, n) {\n  let answer = [];\n  while (num_list.length) {\n    answer.push(num_list.splice(0, n));\n  }\n  return answer;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_암호해독_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_암호해독_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "암호해독",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".filter": 1,
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(cipher, code) {\n    return cipher.split('').filter((_, index) => (index + 1) % code === 0).join('');\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_OX퀴즈_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_OX퀴즈_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "OX퀴즈",
        "problem_type": "구현",
        "countmethod": {
            ".map": 1,
            "eval": 1,
            ".replace": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(quiz) {\n    return quiz.map(i => eval(i.replace('=', '===')) ? 'O' : 'X')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_편지_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_편지_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "편지",
        "problem_type": "구현",
        "countmethod": {
            ".match": 1,
            ".join": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(message){\n    let result = message.match(/[a-zA-Z~! ]/g).join(\"\");\n    return result.length * 2;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_분수의덧셈_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_분수의덧셈_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "분수의덧셈",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "function solution(numer1, denom1, numer2, denom2) {\n    let numer = numer1*denom2 + numer2*denom1\n    let denom = denom1 * denom2\n    for(let i = ~~(denom/2); i > 1; i--){\n        if(!(numer % i) && !(denom % i)) {\n            numer /= i\n            denom /= i\n        }\n    }\n    return [numer, denom]\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열안에문자열_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_문자열안에문자열_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열안에문자열",
        "problem_type": "구현",
        "countmethod": {
            ".includes": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(str1, str2) {\n  return str1.includes(str2) ? 1 : 2;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수는싫어요_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_짝수는싫어요_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수는싫어요",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n  let odd = [];\n  for(let i = 1; i <= n; i++){\n    if(i % 2 === 1) {\n      odd.push(i);\n    }\n  }\n  return odd;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_치킨쿠폰_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_치킨쿠폰_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "치킨쿠폰",
        "problem_type": "구현",
        "countmethod": {
            ".floor": 2
        },
        "line_count": 8,
        "module": {},
        "code": "function solution(chicken) {\n  let result = 0;\n  while (chicken >= 10) {\n    result += Math.floor(chicken / 10);\n    chicken = (chicken % 10) + Math.floor(chicken / 10);\n  }\n  return result;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(3)_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(3)_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(3)",
        "problem_type": "구현",
        "countmethod": {
            ".ceil": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(slice, n) {\n  return Math.ceil(n / slice);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모스부호(1)_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_모스부호(1)_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모스부호(1)",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".map": 1,
            ".join": 1
        },
        "line_count": 10,
        "module": {},
        "code": "function solution(letter) {\n    let morse = { \n    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',\n    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',\n    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',\n    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',\n    '-.--':'y','--..':'z'\n    }\n    return letter.split(' ').map(x=>morse[x]).join('')\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_각도기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_각도기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "각도기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "function solution(angle) {\n    if(angle < 90) return 1;\n    else if(angle === 90) return 2;\n    else if(angle <180) return 3;\n    else return 4;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의유사도_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_배열의유사도_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의유사도",
        "problem_type": "구현",
        "countmethod": {
            ".filter": 1,
            ".includes": 1
        },
        "line_count": 4,
        "module": {},
        "code": "function solution(s1, s2){\n    const checkArr = s1.filter(el => s2.includes(el));\n    return checkArr.length\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_편지_구현_2.js": {
        "file_name": "Lv0_0000_프로그래머스_편지_구현_2.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "편지",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(message) {\n  return message.length * 2;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_A로B만들기_구현_2.js": {
        "file_name": "Lv0_0000_프로그래머스_A로B만들기_구현_2.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "A로B만들기",
        "problem_type": "구현",
        "countmethod": {
            ".from": 2,
            ".sort": 2,
            ".join": 2
        },
        "line_count": 7,
        "module": {},
        "code": "function solution(before, after) {\n  const newArr1 = Array.from(before);\n  const newArr2 = Array.from(after);\n  const beforeArr = newArr1.sort().join('');\n  const afterArr = newArr2.sort().join('');\n  return beforeArr === afterArr ? 1 : 0;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_주사위의개수_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_주사위의개수_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "주사위의개수",
        "problem_type": "구현",
        "countmethod": {
            ".reduce": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(box, n) {\n    return box.reduce((a,c) => a * ~~(c/n), 1)\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가장큰수찾기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_가장큰수찾기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장큰수찾기",
        "problem_type": "구현",
        "countmethod": {
            ".max": 2,
            ".indexOf": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(array) {\n    return [Math.max(...array), array.indexOf(Math.max(...array))]\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_정수찾기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_정수찾기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수찾기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "function solution(num_list, n) {\n    var answer = 0;\n    for(let i = 0; i < num_list.length; i++){\n        if(num_list[i] === n){\n            answer = 1;\n            break\n        }\n        else{\n            answer = 0;\n        }\n    }\n    return answer;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_주사위게임3_완전탐색_0.js": {
        "file_name": "Lv0_0000_프로그래머스_주사위게임3_완전탐색_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "주사위게임3",
        "problem_type": "완전탐색",
        "countmethod": {
            ".entries": 1,
            ".sort": 1,
            ".map": 1,
            ".min": 1,
            ".abs": 1
        },
        "line_count": 14,
        "module": {},
        "code": "function solution(a, b, c, d) {\n    const obj = {}\n    for(let i of [a, b, c, d]) obj[i] = (obj[i] || 0) + 1\n    const arr = Object.entries(obj).sort((a,b) => a[1]-b[1])\n    const arr2 = arr.map(v => ~~v[0])\n    switch(arr.length) {\n        case 4: return Math.min(a, b, c, d)\n        case 3: return arr2[0]*arr2[1]\n        case 2: return (arr[0][1] === 1 \n                ? (10 * arr2[1] + arr2[0])**2 \n                : (arr2[0] + arr2[1]) * Math.abs(arr2[0] - arr2[1]))\n        case 1: return 1111 * arr2[0]\n    }\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자비교하기_구현_0.js": {
        "file_name": "Lv0_0000_프로그래머스_숫자비교하기_구현_0.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자비교하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "function solution(num1, num2) {\n  return num1 === num2 ? 1 : -1\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자찾기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_숫자찾기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자찾기",
        "problem_type": "구현",
        "countmethod": {
            ".indexOf": 1
        },
        "line_count": 3,
        "module": {},
        "code": "function solution(num, k) {   \n  return String(num).indexOf(k) + 1 ||  -1;\n}",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_팩토리얼_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_팩토리얼_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "팩토리얼",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "function solution(n) {\n    for(let i=1, m=1; true; ++i) {\n        if(m > n) return i-2\n        m *= i\n    }\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_약수구하기_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_약수구하기_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수구하기",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1,
            ".sort": 1
        },
        "line_count": 9,
        "module": {},
        "code": "function solution(n) {\n  var answer = [];\n  for (let i = n; i > 0; i--) {\n    if (n % i === 0) {\n      answer.push(i);\n    }\n  }\n  return answer.sort((a, b) => a - b);\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수는싫어요_구현_1.js": {
        "file_name": "Lv0_0000_프로그래머스_짝수는싫어요_구현_1.js",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수는싫어요",
        "problem_type": "구현",
        "countmethod": {
            ".push": 1
        },
        "line_count": 7,
        "module": {},
        "code": "function solution (n) {\n    let arr = [];\n    for(let i = 1; i <= n; i+=2){\n        arr.push(i);\n    }\n    return arr;\n}\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_단어변환_DFSBFS_0.py": {
        "file_name": "Lv3_0000_프로그래머스_단어변환_DFSBFS_0.py",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "단어변환",
        "problem_type": "DFSBFS",
        "countmethod": {
            ".index": 1,
            "len": 3,
            ".popleft": 1,
            ".append": 2,
            "range": 2,
            "print": 1
        },
        "line_count": 32,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(begin, target, words):\n    answer = 0\n    \n    if target in words:\n        t = words.index(target)\n        graph = [0]*(len(words))\n        q = deque(check(begin,words))\n        for i in q:\n            graph[i] = 1\n        while q:\n            v = q.popleft()\n            for i in check(words[v],words):\n                if graph[i] == 0:\n                    graph[i] = graph[v] + 1\n                    q.append(i)\n        answer = graph[t]\n    \n    return answer\ndef check(pivot,words):\n    result = []\n    l = len(pivot)\n    for i in range(len(words)):\n        a = l\n        for j in range(l):\n            if pivot[j] != words[i][j]:\n                a -= 1\n        if a == l-1:\n            result.append(i)\n    \n    return result\nprint(solution(\"aab\", \"aba\", [\"abb\", \"aba\"]))",
        "check_user_func": 1,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_네트워크_DFSBFS_0.py": {
        "file_name": "Lv3_0000_프로그래머스_네트워크_DFSBFS_0.py",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "네트워크",
        "problem_type": "DFSBFS",
        "countmethod": {
            "range": 4,
            ".append": 1
        },
        "line_count": 25,
        "module": {},
        "code": "def solution(n, computers):\n    answer = 0\n    graph = [[] for _ in range(n+1)]\n    visited = [False]*(n+1)\n    for i in range(n):\n        for j in range(n):\n            if computers[i][j] == 1:\n                graph[i+1].append(j+1)\n    \n    def dfs(s):\n        visited[s] = True\n        \n        for i in graph[s]:\n            if not visited[i]:\n                visited[i] = True\n                dfs(i)\n        \n        return True\n    \n    for i in range(1,n+1):\n        if not visited[i]:\n            dfs(i)\n            answer+=1\n    \n    return answer",
        "check_user_func": 1,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_정수삼각형_다이나믹_0.py": {
        "file_name": "Lv3_0000_프로그래머스_정수삼각형_다이나믹_0.py",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수삼각형",
        "problem_type": "다이나믹",
        "countmethod": {
            "len": 2,
            "range": 3,
            ".append": 1,
            "max": 2
        },
        "line_count": 19,
        "module": {},
        "code": "def solution(t):\n    answer = 0\n    n = len(t)\n    m = len(t[-1])\n    a = []\n    for i in range(n):\n        a.append([0]*m)\n    \n    a[0][0] = t[0][0]\n        \n    for i in range(1,n):\n        for j in range(0,i+1):\n            if j==0:\n                a[i][j] = t[i][j] + a[i-1][j]\n            elif j==i:\n                a[i][j] = t[i][j] + a[i-1][j-1]\n            else:\n                a[i][j] = t[i][j] + max(a[i-1][j],a[i-1][j-1])\n    return max(a[-1])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_베스트앨범_해시_0.py": {
        "file_name": "Lv3_0000_프로그래머스_베스트앨범_해시_0.py",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "베스트앨범",
        "problem_type": "해시",
        "countmethod": {
            "enumerate": 1,
            "zip": 1,
            ".append": 5,
            ".sort": 1,
            "sorted": 1,
            ".items": 1,
            "len": 1
        },
        "line_count": 24,
        "module": {},
        "code": "def solution(genres, plays):\n    answer = []\n    d = {}\n    d2 = {}\n    for i,x in enumerate(zip(genres,plays)):\n        try:\n            d[x[0]].append([i,x[1]])\n            d2[x[0]] += x[1]\n        except:\n            d[x[0]] = []\n            d[x[0]].append([i,x[1]])\n            d2[x[0]] = x[1]\n    for k in d:\n        d[k].sort(key = lambda x:x[1],reverse=True)\n    d2 = sorted(d2.items(), key = lambda x:x[1], reverse=True)\n    \n    for c,_ in d2:\n        if len(d[c])==1:\n            answer.append(d[c][0][0])\n        else:\n            answer.append(d[c][0][0])\n            answer.append(d[c][1][0])\n    return answer\n            ",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv3_0000_프로그래머스_등굣길_다이나믹_0.py": {
        "file_name": "Lv3_0000_프로그래머스_등굣길_다이나믹_0.py",
        "level": "level3",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "등굣길",
        "problem_type": "다이나믹",
        "countmethod": {
            "range": 3,
            ".append": 1
        },
        "line_count": 19,
        "module": {},
        "code": "def solution(m, n, puddles):\n    answer = 0\n    arr = []\n    for _ in range(n):\n        arr.append([1]*m)\n    \n    for x,y in puddles:\n        arr[y-1][x-1] = 0\n    \n    for i in range(n):\n        for j in range(m):\n            if (i!=0 or j!=0) and not arr[i][j] == 0:\n                if i == 0:\n                    arr[i][j] = arr[i][j-1]\n                elif j == 0:\n                    arr[i][j] = arr[i-1][j]\n                else:\n                    arr[i][j] = arr[i-1][j] + arr[i][j-1]\n    return arr[-1][-1]%1000000007\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_가운데글자가져오기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_가운데글자가져오기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가운데글자가져오기",
        "problem_type": "구현",
        "countmethod": {
            "len": 4,
            "int": 3
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(s):\n    if len(s) % 2 == 0:\n        return s[int(len(s) / 2) - 1: int(len(s) / 2) + 1]\n    else:\n        return s[int(len(s) / 2)]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두정수사이의합_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_두정수사이의합_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두정수사이의합",
        "problem_type": "구현",
        "countmethod": {
            "abs": 2
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(a, b):\n    answer = (a+b)//2*(abs(b-a)+1) if (a+b)%2==0 else (a+b)*(abs(b-a)+1)//2\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_월간코드챌린지시즌2_음양더하기_구현_0.py": {
        "file_name": "Lv1_0000_월간코드챌린지시즌2_음양더하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "월간코드챌린지시즌2",
        "problem_name": "음양더하기",
        "problem_type": "구현",
        "countmethod": {
            "enumerate": 1,
            ".append": 2,
            "sum": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(absolutes, signs):\n    answer = []\n    for i, v in enumerate(absolutes):\n        if signs[i] is True:\n            answer.append(v)\n        else:\n            answer.append(-v)\n    return sum(answer)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": {
            "min": 1,
            "range": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    keep = n\n    return min([val for val in range(1, n) if keep % val == 1])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "서울에서김서방찾기",
        "problem_type": "구현",
        "countmethod": {
            ".index": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(seoul):\n    index_of_kim = seoul.index(\"ㅏim\")\n    answer = f\"김서방은 {index_of_kim}에 있다\"\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_월간코드챌린지시즌3_없는숫자더하기_구현_0.py": {
        "file_name": "Lv1_0000_월간코드챌린지시즌3_없는숫자더하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "월간코드챌린지시즌3",
        "problem_name": "없는숫자더하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "range": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(numbers):\n    answer = sum([i for i in [i for i in range(0, 10)] if i not in numbers])\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1,
            ".join": 1,
            "map": 1,
            "sorted": 1,
            "list": 1,
            "str": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    answer = int(''.join(map(str, sorted(list(str(n)), reverse=True))))\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_프로그래머스_로또의최고순위와최저순위_구현_0.py": {
        "file_name": "Lv1_2021_프로그래머스_로또의최고순위와최저순위_구현_0.py",
        "level": "level1",
        "year": "2021",
        "company_name": "프로그래머스",
        "problem_name": "로또의최고순위와최저순위",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 18,
        "module": {},
        "code": "def solution(lottos, win_nums):\n    answer = []\n    s=0\n    f=0\n    \n    rank = [6,6,5,4,3,2,1]\n    \n    for i in lottos:\n        if i == 0:\n            s+=1\n            continue\n        if i in win_nums:\n            s+=1\n            f+=1\n    answer = [rank[s],rank[f]]\n        \n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열을정수로바꾸기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(s):\n    answer = int(s)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나누어떨어지는숫자배열",
        "problem_type": "구현",
        "countmethod": {
            "len": 1,
            ".sort": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(arr, divisor):\n    answer = [i for i in arr if i % divisor == 0]\n    if len(answer) == 0:\n        answer = [-1]\n    answer.sort()\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_부족한금액계산하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_부족한금액계산하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "부족한금액계산하기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "print": 1,
            "abs": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(price, money, count):\n    answer = 0\n    \n    for i in range(1,count+1):\n        print(money)\n        money -= price*i\n    \n    if money<0:\n        answer = abs(money)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_0.py": {
        "file_name": "Lv1_0000_프로그래머스_같은숫자는싫어_스택큐_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "같은숫자는싫어",
        "problem_type": "스택큐",
        "countmethod": {
            "range": 1,
            "len": 1,
            ".append": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(arr):\n    result = [arr[0]]\n    \n    for i in range(1, len(arr)):\n        if arr[i] != arr[i - 1]:\n            result.append(arr[i])\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "int": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(n):\n    l = 0\n    for i in range(1, (int(n/2)+1)):\n        if n % i == 0:\n            l += i\n    return l + n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_내적_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_내적_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "내적",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "len": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(a, b):\n    result = 0\n    for i in range(len(a)):\n        result += a[i] * b[i]\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의개수와덧셈",
        "problem_type": "구현",
        "countmethod": {
            "range": 2,
            ".append": 2,
            "len": 1
        },
        "line_count": 13,
        "module": {},
        "code": "def solution(left, right):\n    answer = 0\n    \n    d = {}\n    for a in range(left,right+1):\n        l = []\n        for i in range(1,a//2+1):\n            if a%i == 0:\n                l.append(i)\n        l.append(a)\n        answer += a if len(l)%2 == 0 else -a\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "X만큼간격이있는N개의숫자",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(x, n):\n    return [x * i for i in range(1, n + 1)]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_콜라츠추측_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_콜라츠추측_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "콜라츠추측",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 13,
        "module": {},
        "code": "def solution(num):\n    answer = num\n    count = 0\n    while answer != 1:\n        if count == 500:\n            return -1\n        else:\n            if answer % 2 == 0:\n                answer = answer / 2\n            else:\n                answer = answer * 3 + 1\n            count += 1\n    return count\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_약수의개수와덧셈_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의개수와덧셈",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "int": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(left, right):\n    result = 0\n    for i in range(left, right + 1):\n        if int(i**0.5) == i**0.5:\n            result -= i\n        else:\n            result += i\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_내적_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_내적_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "내적",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "zip": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(a, b):\n    answer = 1234567890\n    \n    answer = sum([i*j for i,j in zip(a,b)])\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_X만틈간격이있는N개의숫자_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_X만틈간격이있는N개의숫자_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "X만틈간격이있는N개의숫자",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            ".append": 2
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(x, n):\n    answer = []\n    for i in range(1, n+1):\n        if i == 1:\n            answer.append(x)\n        else:\n            answer.append(answer[-1] + x)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_푸드파이트대회_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_푸드파이트대회_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "푸드파이트대회",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "len": 1,
            "str": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(food):\n    result = ''\n    \n    for i in range(1, len(food)):\n        num = food[i] // 2\n        result += str(i) * num\n        \n    return result + '0' + result[::-1]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_콜라문제_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_콜라문제_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "콜라문제",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "def solution(a, b, n):\n    result = 0\n    \n    while True:\n        result += (n // a) * b\n        n = (n // a) * b + (n % a)\n        if a - 1 >= n:\n            break\n        \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_프로그래머스_소수만들기_구현_0.py": {
        "file_name": "Lv1_2018_프로그래머스_소수만들기_구현_0.py",
        "level": "level1",
        "year": "2018",
        "company_name": "프로그래머스",
        "problem_name": "소수만들기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "range": 1
        },
        "line_count": 12,
        "module": {
            "itertools": 1,
            "combinations": 1
        },
        "code": "from itertools import combinations\ndef solution(nums):\n    answer = 0\n    \n    for e in combinations(nums,3):\n        answer+=check(sum(e))\n    return answer\ndef check(num):\n    for i in range(2,num//2+1):\n        if num%i == 0:\n            return 0\n    return 1",
        "check_user_func": 1,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": {
            "min": 1,
            "range": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return min([i for i in range(1, n) if n % i == 1])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_가운데글자가져오기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_가운데글자가져오기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가운데글자가져오기",
        "problem_type": "구현",
        "countmethod": {
            "len": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(s):\n    answer = ''\n    \n    l = len(s)\n    if l%2 !=0:\n        answer += s[l//2]\n    else:\n        answer += s[l//2-1:l//2+1]\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": {
            "range": 2,
            "sum": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(n):\n    keep = n\n    answer = [i for i in range(1, n + 1) for j in range(1, n + 1) if i * j == keep]\n    return sum(answer)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내P와Y의개수",
        "problem_type": "구현",
        "countmethod": {
            ".lower": 1,
            ".count": 2
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(s):\n    s = s.lower()\n    P = s.count('p')\n    Y = s.count('y')\n    \n    if P == Y:\n        return True\n    else:\n        return False",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            "int": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    for i in str(n):\n        answer += int(i)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_음양더하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_음양더하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "음양더하기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "len": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(absolutes, signs):\n    result = 0\n    for i in range(len(signs)):\n        if signs[i] == True:\n            result += absolutes[i]\n        else:\n            result -= absolutes[i]\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_평균구하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_평균구하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평균구하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "len": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(arr):\n    hap = sum(arr)\n    answer = hap / len(arr)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_모의고사_완전탐색_0.py": {
        "file_name": "Lv1_0000_프로그래머스_모의고사_완전탐색_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모의고사",
        "problem_type": "완전탐색",
        "countmethod": {
            "len": 5,
            "range": 4,
            "max": 1,
            ".values": 1,
            ".append": 1
        },
        "line_count": 23,
        "module": {},
        "code": "def solution(answers):\n    answer = []\n    n = len(answers)//5+1\n    \n    s1 = [1,2,3,4,5]*n\n    s2 = [2,1,2,3,2,4,2,5]*n\n    s3 = [3,3,1,1,2,2,4,4,5,5]*n\n    question = [s1[:len(answers)],s2[:len(answers)],s3[:len(answers)]]\n    \n    d = {i:0 for i in range(1,4)}\n    \n    for i in range(0,3):\n        for j in range(len(answers)):\n            if answers[j] == question[i][j]:\n                d[i+1] += 1\n    \n    m = max(d.values())\n    \n    for i in range(1,4):\n        if m == d[i]:\n            answer.append(i)\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_월간코드챌린지시즌3_없는숫자더하기_구현_0.py": {
        "file_name": "Lv1_0000_월간코드챌린지시즌3_없는숫자더하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "월간코드챌린지시즌3",
        "problem_name": "없는숫자더하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "range": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(numbers):\n    answer = sum([i for i in [i for i in range(0, 10)] if i not in numbers])\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_K번째수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_K번째수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "K번째수",
        "problem_type": "구현",
        "countmethod": {
            "print": 1,
            "sorted": 2,
            ".append": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(array, commands):\n    answer = []\n    \n    for e1,e2,e3 in commands:\n        print(sorted(array[e1-1:e2-1]))\n        answer.append(sorted(array[e1-1:e2])[e3-1])\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_홀수와짝수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_홀수와짝수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "홀수와짝수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(num):\n    if num % 2 == 0:\n        return 'Even'\n    else:\n        return 'Odd'",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내P와Y의개수",
        "problem_type": "구현",
        "countmethod": {
            ".append": 2,
            "len": 2
        },
        "line_count": 12,
        "module": {},
        "code": "def solution(s):\n    y_list = []\n    p_list = []\n    for i in s:\n        if i == 'p' or i == 'P':\n            p_list.append(i)\n        elif i == 'y' or i == 'Y':\n            y_list.append(i)\n    \n    if len(y_list) == len(p_list):\n        return True\n    return False",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_추억점수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_추억점수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "추억점수",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "len": 1,
            ".index": 1,
            ".append": 1
        },
        "line_count": 15,
        "module": {},
        "code": "def solution(name, yearning, photo):\n    result = []\n    \n    for i in photo:\n        sum_ = 0\n        for j in range(len(i)):\n            if i[j] in name:\n                index_ = name.index(i[j])\n                sum_ += yearning[index_]\n            else:\n                pass\n        \n        result.append(sum_)\n        \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_같은숫자는싫어_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_같은숫자는싫어_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "같은숫자는싫어",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열다루기기본_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열다루기기본_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열다루기기본",
        "problem_type": "구현",
        "countmethod": {
            "len": 2,
            ".isdigit": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(s):\n    if len(s) != 4 and len(s) != 6:\n        return False\n    if s.isdigit():\n        return True\n    else:\n        return False",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_이상한문자만들기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_이상한문자만들기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "이상한문자만들기",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            "range": 1,
            "len": 1,
            ".upper": 1,
            ".lower": 1,
            ".append": 1,
            ".join": 1
        },
        "line_count": 15,
        "module": {},
        "code": "def solution(s):\n    result = []\n    split_s = s.split(' ')\n    \n    for i in split_s:\n        result_word = ''\n        for x in range(len(i)):\n            if x % 2 == 0:\n                result_word += i[x].upper()\n            else:\n                result_word += i[x].lower()\n        \n        result.append(result_word)\n        \n    return ' '.join(result)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수제곱근판별_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_정수제곱근판별_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수제곱근판별",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    if n**0.5 == int(n**0.5):\n        return (n**0.5 + 1) ** 2\n    else:\n        return -1",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_없는숫자더하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_없는숫자더하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "없는숫자더하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "def solution(numbers):\n    answer = 0\n    for e in [1,2,3,4,5,6,7,8,9,0]:\n        if e not in numbers:\n            answer+=e\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_3진법뒤집기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_3진법뒤집기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "3진법뒤집기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_프로그래머스_예산_구현_0.py": {
        "file_name": "Lv1_2018_프로그래머스_예산_구현_0.py",
        "level": "level1",
        "year": "2018",
        "company_name": "프로그래머스",
        "problem_name": "예산",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_월간코드챌린지시즌3_나머지가1이되는수찾기_구현_2.py": {
        "file_name": "Lv1_0000_월간코드챌린지시즌3_나머지가1이되는수찾기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "월간코드챌린지시즌3",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(n):\n    for i in range(1, n+1):\n        if n % i == 1:\n            return i\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최소직사각형_완전탐색_0.py": {
        "file_name": "Lv1_0000_프로그래머스_최소직사각형_완전탐색_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최소직사각형",
        "problem_type": "완전탐색",
        "countmethod": {
            ".append": 4,
            "max": 2
        },
        "line_count": 13,
        "module": {},
        "code": "def solution(sizes):\n    max_size = []\n    min_size = []\n    \n    for x, y in sizes:\n        if x >= y :\n            max_size.append(x)\n            min_size.append(y)\n        else:\n            max_size.append(y)\n            min_size.append(x)\n    \n    return max(max_size) * max(min_size)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자연수뒤집어배열로만들기",
        "problem_type": "구현",
        "countmethod": {
            "list": 2,
            "map": 1,
            "str": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    answer = list(map(int, list(str(n))[::-1]))\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_제일작은수제거하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_제일작은수제거하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제일작은수제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".pop": 1,
            ".index": 1,
            "min": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(arr):\n    arr.pop(arr.index(min(arr)))\n    answer = [-1] if arr == [] else arr\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두개뽑아서더하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_두개뽑아서더하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두개뽑아서더하기",
        "problem_type": "구현",
        "countmethod": {
            "range": 2,
            "len": 2,
            ".append": 1,
            "set": 1,
            "sorted": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(numbers):\n    result = []\n    \n    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            result.append(numbers[i] + numbers[j])\n        \n    result = set(result)\n    return sorted(result)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "서울에서김서방찾기",
        "problem_type": "구현",
        "countmethod": {
            ".index": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(seoul):\n    position = seoul.index('Kim')\n    return f'김서방은 {position}에 있다'",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_X만큼간격이있는N개의숫자_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "X만큼간격이있는N개의숫자",
        "problem_type": "구현",
        "countmethod": {
            "range": 3
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(x, n):\n    if x == 0:\n        return [0 for _ in range(n)]\n    elif x >= 1:\n        answer = [val for val in range(x, x * n + 1, x)]\n    else:\n        answer = [val for val in range(x, x * n - 1, x)]\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자연수뒤집어배열로만들기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1,
            "reversed": 1,
            "str": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return [int(i) for i in reversed(str(n))]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두개뽑아서더하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_두개뽑아서더하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두개뽑아서더하기",
        "problem_type": "구현",
        "countmethod": {
            "set": 2,
            ".append": 1,
            "list": 1,
            ".sort": 1
        },
        "line_count": 10,
        "module": {
            "itertools": 1,
            "combinations": 1
        },
        "code": "from itertools import combinations as cb\ndef solution(numbers):\n    answer = []\n    \n    for x,y in set(cb(numbers,2)):\n        answer.append(x+y)\n    \n    answer = list(set(answer))\n    answer.sort()\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            ".append": 1,
            "sum": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(n):\n    answer = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            answer.append(i)\n    return sum(answer)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_완주하기못한선수_해시_0.py": {
        "file_name": "Lv1_0000_프로그래머스_완주하기못한선수_해시_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "완주하기못한선수",
        "problem_type": "해시",
        "countmethod": {
            ".sort": 2,
            "len": 4,
            "set": 4,
            "range": 1,
            "list": 1
        },
        "line_count": 16,
        "module": {},
        "code": "def solution(participant, completion):\n    answer = ''\n    \n    participant.sort()\n    completion.sort()\n    \n    if len(set(participant)) == len(set(completion)): \n        for i in range(len(participant)):\n            if participant[i] != completion[i] :\n                \n                return participant[i%len(participant)]\n            \n    else :\n        return list(set(participant) - set(completion))[0]\n        \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_짝수와홀수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_짝수와홀수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수와홀수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "def solution(num):\n    if num % 2 == 0:\n        answer = \"Even\"\n    else:\n        answer = \"Odd\"\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열다루기기본_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열다루기기본_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열다루기기본",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_신규아이디추천_구현_0.py": {
        "file_name": "Lv1_2021_카카오_신규아이디추천_구현_0.py",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "신규아이디추천",
        "problem_type": "구현",
        "countmethod": {
            ".lower": 1,
            "range": 3,
            "len": 6,
            ".append": 1,
            ".strip": 2
        },
        "line_count": 35,
        "module": {},
        "code": "def solution(new_id):\n    answer = ''\n    \n    new_id = new_id.lower()\n    s = ''\n    for i in range(len(new_id)):\n        if new_id[i] not in '~!@#$%^&*()=+[{]}:?,<>/':\n            s+=new_id[i]\n    new_id = s\n    \n    d = []\n    for i in range(len(new_id)-1):\n        if new_id[i] =='.' and new_id[i+1]=='.':\n            d.append(i)\n    s = ''\n    for i in range(len(new_id)):\n        if i in d and i != 0:\n            continue\n        s+=new_id[i]\n    \n    new_id = s\n    new_id = new_id.strip('.')\n    \n    if len(new_id) == 0:\n        new_id += 'a'\n        \n    if len(new_id)>=16:\n        new_id = new_id[:15]\n    \n    while len(new_id)<=2:\n        new_id += new_id[-1]\n        \n    answer = new_id.strip('.')\n            \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_서울에서김서방찾기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "서울에서김서방찾기",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            ".index": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(seoul):\n    answer = ''\n    answer = '김서방은 '+str(seoul.index('Kim'))+'에 있다'\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_추억점수_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_추억점수_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "추억점수",
        "problem_type": "구현",
        "countmethod": {
            "dict": 1,
            "zip": 1,
            ".get": 2,
            ".append": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(name, yearning, photo):\n    answer = []\n    d = dict(zip(name, yearning))\n    hap = 0\n    for i in photo:\n        hap = 0\n        for j in i:\n            hap += d.get(j) if d.get(j) else 0\n        answer.append(hap)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_대충만든자판_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_대충만든자판_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대충만든자판",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            "set": 1,
            ".find": 1,
            ".append": 1
        },
        "line_count": 27,
        "module": {},
        "code": "def solution(keymap, targets):\n    answer = []\n    s = ''.join(keymap)\n    temp = -1\n    find_index = -1\n    d = {}\n    for i in set(s):\n        temp = -1\n        for j in keymap:\n            find_index = j.find(i)\n            if find_index == -1:\n                continue\n            if temp == -1:\n                temp = find_index\n            elif find_index < temp:\n                temp = find_index\n        if temp != -1:    \n            d[i] = temp + 1\n    for i in targets:\n        temp = 0\n        for j in i:\n            if j not in d:\n                temp = -1\n                break\n            temp += d[j]\n        answer.append(temp)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_체육복_그리디_0.py": {
        "file_name": "Lv1_0000_프로그래머스_체육복_그리디_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "체육복",
        "problem_type": "그리디",
        "countmethod": {
            "len": 2,
            "set": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(nums):\n    answer = 0\n    \n    l = len(set(nums))\n    N = len(nums)//2\n    \n    if N<=l :\n        return N\n    else:\n        return l",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_예산_그리디_1.py": {
        "file_name": "Lv1_0000_프로그래머스_예산_그리디_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "예산",
        "problem_type": "그리디",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 12,
        "module": {},
        "code": "def solution(d, budget):\n    d.sort()\n    result = 0\n    \n    for i in d:\n        if budget >= i:\n            budget -= i\n            result += 1\n        else:\n            break\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_제일작은수제거하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_제일작은수제거하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제일작은수제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".remove": 1,
            "min": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(arr):\n    arr.remove(min(arr))\n    if arr == []:\n        return [-1]\n    else:\n        return arr",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_없는숫자더하기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_없는숫자더하기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "없는숫자더하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "range": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(numbers):\n    return sum([i for i in range(10) if i not in numbers])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두정수사이의합_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_두정수사이의합_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두정수사이의합",
        "problem_type": "구현",
        "countmethod": {
            "range": 2
        },
        "line_count": 11,
        "module": {},
        "code": "def solution(a, b):\n    sum = 0\n    if a < b:\n        for i in range(a, b+1):\n            sum += i\n    elif a > b:\n        for i in range(b, a+1):\n            sum += i\n    else:\n        return a\n    return sum",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_음양더하기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_음양더하기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "음양더하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "zip": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(absolutes, signs):\n    answer = 0\n    \n    answer = sum([a if s else -a for a,s in zip(absolutes,signs)])\n        \n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_숫자문자열과영단어_구현_0.py": {
        "file_name": "Lv1_2021_카카오_숫자문자열과영단어_구현_0.py",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "숫자문자열과영단어",
        "problem_type": "구현",
        "countmethod": {
            ".items": 1,
            ".compile": 1,
            ".sub": 1,
            "str": 1,
            "int": 1
        },
        "line_count": 18,
        "module": {
            "re": 1
        },
        "code": "import re\ndef solution(s):\n    table = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    }\n    for key, val in table.items():\n        p = re.compile(key)\n        s = re.sub(p, str(val), s)\n    return int(s)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_카카오_[1차]비밀지도_비트연산_0.py": {
        "file_name": "Lv1_2018_카카오_[1차]비밀지도_비트연산_0.py",
        "level": "level1",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "[1차]비밀지도",
        "problem_type": "비트연산",
        "countmethod": {
            "range": 1,
            ".append": 1,
            "bin": 1,
            ".zfill": 1,
            ".replace": 2
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(n, arr1, arr2):\n    result = []\n    for i in range(n):\n        result.append((bin(arr1[i] | arr2[i])[2:].zfill(n)).replace('1', '#').replace('0',' '))\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내림차순으로배치하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            ".islower": 1,
            ".append": 2,
            ".join": 1,
            "sorted": 2
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(s):\n    lower_s = []\n    upper_s = []\n    for i in s:\n        if i.islower():\n            lower_s.append(i)\n        else:\n            upper_s.append(i)\n    return ''.join(sorted(lower_s, reverse = True) + sorted(upper_s, reverse = True))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2019_카카오_실패율_구현_0.py": {
        "file_name": "Lv1_2019_카카오_실패율_구현_0.py",
        "level": "level1",
        "year": "2019",
        "company_name": "카카오",
        "problem_name": "실패율",
        "problem_type": "구현",
        "countmethod": {
            "range": 4,
            "sorted": 1,
            ".items": 1
        },
        "line_count": 21,
        "module": {},
        "code": "def solution(N, stages):\n    answer = []\n    \n    result = {i:[0,0] for i in range(1,N+2)}\n    \n    fail = {i:0 for i in range(1,N+1)}\n    \n    for i in stages:\n        result[i][0] += 1\n        for j in range(1,i+1):\n            result[j][1] += 1\n            \n    for i in range(1,N+1):\n        if result[i][1] == 0:\n            pass\n        else:\n            fail[i] = result[i][0]/result[i][1]\n    \n    answer = [x for x,y in sorted(fail.items(), key = lambda x : x[1], reverse = True)]\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내마음대로정렬하기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내마음대로정렬하기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내마음대로정렬하기",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(strings, n):\n    answer = []\n    \n    answer = sorted(strings,key= lambda x:(x[n],x))\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_자연수뒤집어배열로만들기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자연수뒤집어배열로만들기",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            "map": 1,
            "str": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    answer = list(map(int,str(n)[::-1]))\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "핸드폰번호가리기",
        "problem_type": "구현",
        "countmethod": {
            ".sub": 1
        },
        "line_count": 4,
        "module": {
            "re": 1
        },
        "code": "import re\ndef solution(phone_number):\n    answer = re.sub(r\".(?=\\d{4})\", \"*\", phone_number)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_명예의전당(1)_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_명예의전당(1)_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "명예의전당(1)",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "len": 1,
            ".append": 1,
            "min": 1,
            "sorted": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(k, score):\n    result = []\n    \n    for i in range(1, len(score) + 1):\n        result.append(min((sorted(score[0:i], reverse = True))[0:k]))\n        \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열을정수로바꾸기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(s):\n    answer = int(s)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수제곱근판별_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_정수제곱근판별_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수제곱근판별",
        "problem_type": "구현",
        "countmethod": {
            ".isqrt": 1
        },
        "line_count": 8,
        "module": {
            "math": 1
        },
        "code": "import math\ndef solution(n):\n    sqrt_n = math.isqrt(n)\n    if sqrt_n * sqrt_n == n:\n        answer = (sqrt_n + 1) ** 2\n    else:\n        answer = -1\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열을정수로바꾸기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열을정수로바꾸기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(s):\n    return int(s)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_하샤드수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_하샤드수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "하샤드수",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            "int": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(x):\n    y = 0\n    for i in str(x):\n        y += int(i)\n    if x % y == 0:\n        return True\n    else:\n        return False",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1,
            "str": 1,
            "sum": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(N):\n    answer = [int(i) for i in str(N)]\n    return sum(answer)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_짝수와홀수_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_짝수와홀수_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수와홀수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(num):\n    return \"Odd\" if num % 2 != 0 else \"Even\"",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내P와Y의개수",
        "problem_type": "구현",
        "countmethod": {
            ".compile": 2,
            "len": 2,
            ".findall": 2
        },
        "line_count": 8,
        "module": {
            "re": 1
        },
        "code": "import re\ndef solution(s):\n    p_p = re.compile('p|P')\n    p_y = re.compile('y|Y')\n    p_count = len(p_p.findall(s))\n    y_count = len(p_y.findall(s))\n    answer = True if p_count == y_count or p_count == y_count == 0 else False\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_2016년_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_2016년_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "2016년",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            "range": 1
        },
        "line_count": 12,
        "module": {},
        "code": "def solution(a, b):\n    answer = ''\n    \n    d = 'THU,FRI,SAT,SUN,MON,TUE,WED'.split(',')\n    l = [31,29,31,30,31,30,31,31,30,31,30,31]\n    total = 0\n    for i in range(1,a):\n        total += l[i-1]\n    total += b\n    answer += d[total%7]\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_시저암호_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_시저암호_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "시저암호",
        "problem_type": "구현",
        "countmethod": {
            "ord": 12,
            "chr": 4
        },
        "line_count": 15,
        "module": {},
        "code": "def solution(s, n):\n    answer = ''\n    \n    for c in s:\n        if c ==' ':\n            answer+=c\n        if ord(c)+n>ord('z'):\n            answer += chr(ord(c)+n-26)\n        elif ord(c)>=ord('a'):\n            answer += chr(ord(c)+n)\n        elif ord(c)+n>ord('Z'):\n            answer += chr(ord(c)+n-26)\n        elif ord(c)>=ord('A'):\n            answer += chr(ord(c)+n)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최소직사각형_완전탐색_1.py": {
        "file_name": "Lv1_0000_프로그래머스_최소직사각형_완전탐색_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최소직사각형",
        "problem_type": "완전탐색",
        "countmethod": {
            "range": 1,
            "len": 1,
            "max": 2
        },
        "line_count": 16,
        "module": {},
        "code": "def solution(sizes):\n    answer = 0\n    \n    number = [i for i in range(len(sizes))]\n    w = [x for x,y in sizes]\n    h = [y for x,y in sizes]\n    \n    for i in number:\n        if w[i]<h[i]:\n            h[i],w[i] = w[i],h[i]\n    \n    s = max(w)*max(h)\n    \n    answer = s\n        \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_부족한금액계산하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_부족한금액계산하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "부족한금액계산하기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(price, money, count):\n    result = 0\n    for i in range(1, count + 1):\n        result += price * i\n    if result <= money:\n        return 0\n    else:\n        return result - money",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_3.py": {
        "file_name": "Lv1_0000_프로그래머스_문자열내P와Y의개수_구현_3.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열내P와Y의개수",
        "problem_type": "구현",
        "countmethod": {
            ".lower": 1,
            ".count": 2
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(s):\n    answer = True\n    \n    s = s.lower()\n    \n    p = s.count('p')\n    y = s.count('y')\n    answer = True if p==y else False\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_핸드폰번호가리기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "핸드폰번호가리기",
        "problem_type": "구현",
        "countmethod": {
            ".sub": 1
        },
        "line_count": 4,
        "module": {
            "re": 1
        },
        "code": "import re\ndef solution(phone_number):\n    number = re.sub('[0-9]', '*', phone_number[:-4])\n    return number + phone_number[-4:]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2018_카카오_[1차]비밀지도_구현_1.py": {
        "file_name": "Lv1_2018_카카오_[1차]비밀지도_구현_1.py",
        "level": "level1",
        "year": "2018",
        "company_name": "카카오",
        "problem_name": "[1차]비밀지도",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 0,
        "module": {},
        "code": "",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            "str": 1,
            "sum": 1,
            "int": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    n = list(str(n))\n    return sum([int(val) for val in n])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_약수의합_구현_3.py": {
        "file_name": "Lv1_0000_프로그래머스_약수의합_구현_3.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수의합",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "range": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(n):\n    answer = sum([i for i in range(1, n + 1) if n % i == 0])\n    return answer\nsolution(12)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_콜라츠추측_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_콜라츠추측_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "콜라츠추측",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 15,
        "module": {},
        "code": "def solution(num):\n    result = 0\n    for i in range(501):\n        if num % 2 == 0:\n            num /= 2\n            result += 1\n            if num == 1:\n                return result\n        elif num == 1:\n            return 0\n        elif num % 2 != 0:\n            num = num * 3 + 1\n            result += 1\n    if num != 1:\n        return -1",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_2021_카카오_숫자문자열과영단어_구현_1.py": {
        "file_name": "Lv1_2021_카카오_숫자문자열과영단어_구현_1.py",
        "level": "level1",
        "year": "2021",
        "company_name": "카카오",
        "problem_name": "숫자문자열과영단어",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            ".keys": 1,
            "str": 1,
            "int": 1
        },
        "line_count": 23,
        "module": {},
        "code": "def solution(s):\n    answer = ''\n    d = {'zero':0,\n        'one':1,\n        'two':2,\n         'three':3,\n         'four':4,\n         'five':5,\n         'six':6,\n         'seven':7,\n         'eight':8,\n         'nine':9\n        }\n    s2=''\n    for c in s:\n        if c in '1234567890':\n            answer+=c\n        else:\n            s2+=c\n            if s2 in list(d.keys()):\n                answer+=str(d[s2])\n                s2=''\n    return int(answer)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_시저암호_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_시저암호_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "시저암호",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            "range": 1,
            "len": 1,
            ".isupper": 1,
            "chr": 2,
            "ord": 6,
            ".islower": 1,
            ".join": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(s, n):\n    l = list(s)\n    for i in range(len(s)):\n        if l[i].isupper():\n            l[i] = chr((ord(l[i]) - ord('A') + n) % 26 + ord('A'))\n        elif l[i].islower():\n            l[i] = chr((ord(l[i]) - ord('a') + n) % 26 + ord('a'))\n    return ''.join(l)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_카드뭉치_스택큐_0.py": {
        "file_name": "Lv1_0000_프로그래머스_카드뭉치_스택큐_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "카드뭉치",
        "problem_type": "스택큐",
        "countmethod": {
            ".pop": 2
        },
        "line_count": 14,
        "module": {},
        "code": "def solution(cards1, cards2, goal):\n    answer = ''\n    for i in goal:\n        if i in cards1:\n            if cards1.pop(0) != i:\n                answer = 'No'\n                break\n        if i in cards2:\n            if cards2.pop(0) != i:\n                answer = 'No'\n                break\n    if not(answer):\n        answer = 'Yes'\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_최대공약수와최소공배수_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_최대공약수와최소공배수_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최대공약수와최소공배수",
        "problem_type": "구현",
        "countmethod": {
            ".append": 2,
            ".gcd": 1,
            "range": 1,
            "max": 1
        },
        "line_count": 10,
        "module": {
            "math": 1
        },
        "code": "import math\ndef solution(n, m):\n    result = []\n    result.append(math.gcd(n, m))\n    for i in range(max(n, m), n*m + 1):\n        if i % n == 0 and i % m == 0:\n            result.append(i)\n            break\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_폰켓몬_해시_0.py": {
        "file_name": "Lv1_0000_프로그래머스_폰켓몬_해시_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "폰켓몬",
        "problem_type": "해시",
        "countmethod": {
            "len": 2,
            "set": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(nums):\n    answer = 0\n    \n    l = len(set(nums))\n    N = len(nums)//2\n    \n    if N<=l :\n        return N\n    else:\n        return l",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_두정수사이의합_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_두정수사이의합_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두정수사이의합",
        "problem_type": "구현",
        "countmethod": {
            "sum": 2,
            "range": 2
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(a, b):\n    if a < b:\n        answer = sum([i for i in range(a, b + 1)])\n    else:\n        answer = sum([i for i in range(b, a + 1)])\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_정수내림차순으로배치하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "정수내림차순으로배치하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1,
            ".join": 1,
            "sorted": 1,
            "str": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return int(''.join(sorted(str(n), reverse = True)))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_하샤드수_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_하샤드수_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "하샤드수",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "int": 1,
            "str": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(x):\n    case_a = sum([int(i) for i in str(x)])\n    if x % case_a == 0:\n        answer = True\n    else:\n        answer = False\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_자릿수더하기_구현_3.py": {
        "file_name": "Lv1_0000_프로그래머스_자릿수더하기_구현_3.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "int": 1,
            "str": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return sum([int(i) for i in str(n)])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나누어떨어지는숫자배열",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1,
            ".append": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(arr, divisor):\n    result = sorted([i for i in arr if i % divisor == 0])\n    if result == []:\n        result.append(-1)\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_짝수와홀수_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_짝수와홀수_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수와홀수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(num):\n    if num % 2 == 0:\n        return 'Even'\n    else:\n        return 'Odd'",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_평균구하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_평균구하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평균구하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(arr):\n    return sum(arr) / len(arr)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_제일작은수제거하기_구현_1.py": {
        "file_name": "Lv1_0000_프로그래머스_제일작은수제거하기_구현_1.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제일작은수제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".pop": 1,
            ".index": 1,
            "min": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(arr):\n    arr.pop(arr.index(min(arr)))\n    answer = [-1] if arr == [] else arr\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_평균구하기_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_평균구하기_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "평균구하기",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(arr):\n    return sum(arr) / len(arr)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_3.py": {
        "file_name": "Lv1_0000_프로그래머스_나머지가1이되는수찾기_구현_3.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지가1이되는수찾기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    \n    for i in range(1,n+1):\n        if (n%i==1):\n            answer = i\n            break\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_2.py": {
        "file_name": "Lv1_0000_프로그래머스_나누어떨어지는숫자배열_구현_2.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나누어떨어지는숫자배열",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            ".append": 2,
            "len": 1
        },
        "line_count": 13,
        "module": {},
        "code": "def solution(arr, divisor):\n    answer = []\n    \n    arr.sort()\n    \n    for e in arr:\n        if e%divisor==0:\n            answer.append(e)\n    \n    if len(answer)==0:\n        answer.append(-1)\n    \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv1_0000_프로그래머스_공원산책_구현_0.py": {
        "file_name": "Lv1_0000_프로그래머스_공원산책_구현_0.py",
        "level": "level1",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "공원산책",
        "problem_type": "구현",
        "countmethod": {
            "len": 2,
            "range": 2,
            ".find": 1,
            ".split": 1,
            "int": 1
        },
        "line_count": 35,
        "module": {},
        "code": "def solution(park, routes):\n    direction = {\n        'N': (-1, 0),\n        'S': (1, 0),\n        'W': (0, -1),\n        'E': (0, 1),\n    }\n    pos = [0, 0]\n    temp_pos = [0, 0]\n    width = len(park[0])\n    height = len(park)\n    route_dir = ''\n    route_count = ''\n    for i in range(height):\n        if 'S' in park[i]:\n            pos[0], pos[1] = i, park[i].find('S')\n            break\n    for i in routes:\n        temp_pos[0], temp_pos[1] = pos[0], pos[1]\n        route_dir, route_count = i.split(' ')\n        for _ in range(int(route_count)):\n            temp_pos[0] += direction[route_dir][0]\n            temp_pos[1] += direction[route_dir][1]\n            if temp_pos[0] < 0 or temp_pos[0] >= height:\n                temp_pos[0], temp_pos[1] = pos[0], pos[1]\n                break\n            if temp_pos[1] < 0 or temp_pos[1] >= width:\n                temp_pos[0], temp_pos[1] = pos[0], pos[1]\n                break   \n            if park[temp_pos[0]][temp_pos[1]] == 'X':\n                temp_pos[0], temp_pos[1] = pos[0], pos[1]\n                break\n        pos[0], pos[1] = temp_pos[0], temp_pos[1]\n    answer = pos\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_프로세스_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_프로세스_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "프로세스",
        "problem_type": "스택큐",
        "countmethod": {
            "len": 1,
            "max": 2,
            ".append": 1,
            ".pop": 2
        },
        "line_count": 19,
        "module": {},
        "code": "def solution(priorities, location):\n    answer = 0\n    l = len(priorities)\n    m = max(priorities)\n    while priorities:\n        if m != priorities[0]:\n            priorities.append(priorities.pop(0))\n            location = (location-1)%l\n        else:\n            if location == 0:\n                answer+=1\n                break\n            else:\n                priorities.pop(0)\n                l-=1\n                answer+=1\n                location = (location-1)%l\n                m = max(priorities)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_타겟넘버_DFSBFS_0.py": {
        "file_name": "Lv2_0000_프로그래머스_타겟넘버_DFSBFS_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "타겟넘버",
        "problem_type": "DFSBFS",
        "countmethod": {
            "len": 1
        },
        "line_count": 16,
        "module": {},
        "code": "def dfs(iter_,v,target,numbers):\n    global answer\n    if iter_ == len(numbers):\n        if v==target:\n            answer+=1\n        return\n    dfs(iter_+1,v+numbers[iter_],target,numbers)\n    dfs(iter_+1,v-numbers[iter_],target,numbers)\ndef solution(numbers, target):\n    global answer\n    answer = 0 \n    v = 0\n    i = 0\n    dfs(i,v,target,numbers)\n    \n    return answer",
        "check_user_func": 1,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_기능개발_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_기능개발_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "기능개발",
        "problem_type": "스택큐",
        "countmethod": {
            "int": 1,
            "zip": 1,
            ".popleft": 1,
            ".append": 2
        },
        "line_count": 17,
        "module": {
            "collections": 1,
            "deque": 1,
            "math": 1,
            "ceil": 1
        },
        "code": "from collections import deque\nfrom math import ceil\ndef solution(progresses, speeds):\n    answer = []\n    arr = deque([int(ceil((100-i)/j)) for i,j in zip(progresses,speeds)])\n    while True:\n        pivot = arr[0]\n        cnt = 0\n        try:\n            while pivot>=arr[0]:\n                arr.popleft()\n                cnt+=1\n            answer.append(cnt)\n        except IndexError:\n            answer.append(cnt)\n            break\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_숫자의표현_구현_0.py": {
        "file_name": "Lv2_0000_프로그래머스_숫자의표현_구현_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자의표현",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "sum": 2,
            ".append": 1
        },
        "line_count": 11,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    for i in range(1,n+1):\n        d = [0]\n        num = i\n        while sum(d)<n:\n            d.append(num)\n            if sum(d) == n:\n                answer += 1\n            num+=1\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_괄호회전하기_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_괄호회전하기_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "괄호회전하기",
        "problem_type": "스택큐",
        "countmethod": {
            "list": 1,
            "range": 1,
            "len": 1,
            ".append": 2,
            ".popleft": 1,
            ".pop": 3
        },
        "line_count": 31,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(s):\n    answer = 0\n    s = deque(list(s))\n    for i in range(len(s)):\n        answer += check(s)\n        s.append(s.popleft())\n    return answer\ndef check(d):\n    stack = []\n    for c in d:\n        if c in '[({':\n            stack.append(c)\n        if not stack and c in '])}':\n            return 0\n        elif c in '])}':\n            if c ==']' and stack[-1] == '[':\n                stack.pop()\n                continue\n            if c =='}' and stack[-1] == '{':\n                stack.pop()\n                continue\n            if c ==')' and stack[-1] == '(':\n                stack.pop()\n                continue\n    if stack:\n        return 0\n    else:\n        return 1\n            \n        ",
        "check_user_func": 1,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_피보나치수_구현_0.py": {
        "file_name": "Lv2_0000_프로그래머스_피보나치수_구현_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피보나치수",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 11,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    \n    if n<2:\n        return n\n    l = [0]*(n+1)\n    l[1] = 1\n    for i in range(2,n+1):\n        l[i] = (l[i-2] + l[i-1])\n    \n    return l[-1]%1234567",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_주식가격_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_주식가격_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "주식가격",
        "problem_type": "스택큐",
        "countmethod": {
            ".popleft": 1,
            ".append": 1
        },
        "line_count": 13,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(prices):\n    answer = []\n    prices = deque(prices)\n    while prices:\n        p = prices.popleft()\n        num = 0\n        for i in prices:\n            num +=1\n            if i<p:\n                break\n        answer.append(num)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_최솟값만들기_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_최솟값만들기_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최솟값만들기",
        "problem_type": "스택큐",
        "countmethod": {
            "sorted": 2,
            "range": 1,
            "len": 1,
            ".popleft": 2
        },
        "line_count": 8,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(A,B):\n    answer = 0\n    A = deque(sorted(A))\n    B = deque(sorted(B,reverse=True))\n    for i in range(len(A)):\n        answer += A.popleft()*B.popleft()\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_JADENCASE문자열만들기_구현_0.py": {
        "file_name": "Lv2_0000_프로그래머스_JADENCASE문자열만들기_구현_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "JADENCASE문자열만들기",
        "problem_type": "구현",
        "countmethod": {
            ".upper": 2,
            "range": 1,
            "len": 1,
            ".lower": 1
        },
        "line_count": 11,
        "module": {},
        "code": "def solution(s):\n    answer = ''\n    \n    answer += s[0].upper()\n    for i in range(1,len(s)):\n        if s[i-1] == ' ' and s[i] != ' ':\n            answer += s[i].upper()\n        else:\n            answer += s[i].lower()\n        \n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_최댓값과최솟값_구현_0.py": {
        "file_name": "Lv2_0000_프로그래머스_최댓값과최솟값_구현_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값과최솟값",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            "map": 1,
            ".split": 1,
            "str": 2,
            "min": 1,
            "max": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(s):\n    answer = ''\n    d = list(map(int,s.split()))\n    answer += str(min(d))\n    answer += ' '\n    answer += str(max(d))\n    \n    return (answer)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_이진변환반복하기_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_이진변환반복하기_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "이진변환반복하기",
        "problem_type": "스택큐",
        "countmethod": {
            "len": 1,
            "divmod": 1,
            "str": 1
        },
        "line_count": 23,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(s):\n    cnt1 = 0\n    cnt2 = 0\n    \n    while s != '1':\n        a =''\n    \n        for c in s:\n            if c=='1':\n                a+='1'\n            else:\n                cnt2+=1\n        s = sol(len(a))    \n        cnt1+=1\n        \n    return [cnt1,cnt2]\ndef sol(n):\n    s=''\n    while n>0:\n        n, m = divmod(n,2)\n        s += str(m)\n    return s[::-1]",
        "check_user_func": 1,
        "check_user_class": 0
    },
    "Lv2_2018_프로그래머스_영어끝말잇기_스택큐_0.py": {
        "file_name": "Lv2_2018_프로그래머스_영어끝말잇기_스택큐_0.py",
        "level": "level2",
        "year": "2018",
        "company_name": "프로그래머스",
        "problem_name": "영어끝말잇기",
        "problem_type": "스택큐",
        "countmethod": {
            "range": 1,
            "len": 1,
            ".append": 2,
            ".popleft": 2
        },
        "line_count": 21,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(n, words):\n    answer = [0,0]\n    words = deque(words)\n    dummy = []\n    p = 1\n    cnt = 1\n    \n    for _ in range(len(words)):\n        if not dummy:\n            dummy.append(words.popleft())\n            p+=1\n            continue\n        if dummy[-1][-1] != words[0][0] or words[0] in dummy:\n            return [p,cnt]\n        dummy.append(words.popleft())\n        p += 1\n        if p>n:\n            p = p%n\n            cnt += 1\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_다리를지나는트럭_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_다리를지나는트럭_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "다리를지나는트럭",
        "problem_type": "스택큐",
        "countmethod": {
            ".pop": 2,
            ".append": 2
        },
        "line_count": 14,
        "module": {},
        "code": "def solution(bridge_length, weight, truck_weights):\n    answer = 0\n    bridge = [0]*bridge_length\n    bridge_weight = 0\n    while bridge:\n        answer += 1\n        bridge_weight -= bridge.pop(0)\n        if truck_weights:\n            if bridge_weight + truck_weights[0] <= weight:\n                bridge_weight += truck_weights[0]\n                bridge.append(truck_weights.pop(0))\n            else:\n                bridge.append(0)\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_다음큰숫자_구현_0.py": {
        "file_name": "Lv2_0000_프로그래머스_다음큰숫자_구현_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "다음큰숫자",
        "problem_type": "구현",
        "countmethod": {
            "bin": 2,
            ".count": 2
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    \n    t = bin(n)[2:].count('1')\n    while True:\n        n+=1\n        if bin(n)[2:].count('1') == t:\n            return n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_게임맵최단거리_DFSBFS_0.py": {
        "file_name": "Lv2_0000_프로그래머스_게임맵최단거리_DFSBFS_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "게임맵최단거리",
        "problem_type": "DFSBFS",
        "countmethod": {
            "len": 2,
            ".popleft": 1,
            "range": 1,
            ".append": 1
        },
        "line_count": 21,
        "module": {
            "collections": 1,
            "deque": 1
        },
        "code": "from collections import deque\ndef solution(maps):\n    answer = 0\n    n = len(maps[0])\n    m = len(maps)\n    q = deque([(0,0)])\n    dx = [-1,1,0,0]\n    dy = [0,0,1,-1]\n    while q:\n        x,y = q.popleft()\n        for i in range(4):\n            nx = dx[i]+x\n            ny = dy[i]+y\n            if 0<=nx<m and 0<=ny<n and maps[nx][ny] == 1:\n                maps[nx][ny] = maps[x][y]+1\n                q.append((nx,ny))\n    if maps[-1][-1]>1:\n        answer = maps[-1][-1]\n    else:\n        answer = -1\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_올바른괄호_스택큐_0.py": {
        "file_name": "Lv2_0000_프로그래머스_올바른괄호_스택큐_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "올바른괄호",
        "problem_type": "스택큐",
        "countmethod": {
            ".append": 1,
            ".pop": 1
        },
        "line_count": 15,
        "module": {},
        "code": "def solution(s):\n    answer = True\n    \n    stack = []\n    for c in s:\n        if not stack and c == ')':\n            return False\n        if c == '(':\n            stack.append(c)\n        elif stack[-1] == '(' and c == ')':\n            stack.pop()\n        \n    if stack:\n        return False \n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_카펫_완전탐색_0.py": {
        "file_name": "Lv2_0000_프로그래머스_카펫_완전탐색_0.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "카펫",
        "problem_type": "완전탐색",
        "countmethod": {
            "range": 1
        },
        "line_count": 14,
        "module": {},
        "code": "def solution(brown, yellow):\n    answer = []\n    total = brown + yellow\n    \n    for i in range(1,total+1):\n        if total%i == 0:\n            bh = i\n            bw = total//i\n            yh = bh - 2\n            yw = bw - 2\n        if yh*yw == yellow:\n            break\n    answer = [bw,bh]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_올바른괄호_스택큐_1.py": {
        "file_name": "Lv2_0000_프로그래머스_올바른괄호_스택큐_1.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "올바른괄호",
        "problem_type": "스택큐",
        "countmethod": 0,
        "line_count": 15,
        "module": {},
        "code": "def solution(s):\n    result = 0\n    \n    for i in s:\n        if i == '(':\n            result += 1\n        else:\n            result -= 1\n            if result < 0:\n                return False\n    \n    if result == 0:\n        return True\n    else:\n        return False",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv2_0000_프로그래머스_최댓값과최솟값_구현_1.py": {
        "file_name": "Lv2_0000_프로그래머스_최댓값과최솟값_구현_1.py",
        "level": "level2",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값과최솟값",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            "int": 1,
            ".join": 1,
            "str": 2,
            "min": 1,
            "max": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(s):\n    s = s.split()\n    s = [int(i) for i in s]\n    \n    return ' '.join([str(min(s)), str(max(s))])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열안에문자열_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열안에문자열_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열안에문자열",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(str1, str2):\n    if str2 in str1:\n        return 1\n    else:\n        return 2",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_양꼬치_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_양꼬치_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "양꼬치",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(n, k):\n    result = 12000*n + 2000*k\n    if n >= 10:\n        result -= 2000*(n // 10)\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_각도기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_각도기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "각도기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "# https://school.programmers.co.kr/learn/courses/30/lessons/120829\ndef solution(angle):\n    if 0 < angle < 90:\n        return 1\n    elif angle == 90:\n        return 2\n    elif 90 < angle < 180:\n        return 3\n    else:\n        return 4\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_나이출력_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_나이출력_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나이출력",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(age):\n    birth_year = 2022 - age + 1\n    return birth_year\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(1)",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return (n - 1) // 7 + 1",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_주사위의개수_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_주사위의개수_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "주사위의개수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(box, n):\n    return (box[0] // n) * (box[1] // n) * box[2] // n\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가장큰수찾기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_가장큰수찾기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장큰수찾기",
        "problem_type": "구현",
        "countmethod": {
            ".append": 2,
            "max": 2,
            ".index": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(array):\n    result = []\n    result.append(max(array))\n    num = array.index(max(array))\n    result.append(num)\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_개미군단_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_개미군단_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "개미군단",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(hp):\n    total = (hp // 5) + (hp % 5 // 3) + (hp % 5 % 3)\n    return total\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열뒤집기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열뒤집기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열뒤집기",
        "problem_type": "구현",
        "countmethod": {
            ".reverse": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(num_list):\n    num_list.reverse()\n    return num_list",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(3)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(3)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(3)",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(slice, n):\n    if n % slice != 0:\n        return (n // slice) + 1\n    else:\n        return n // slice\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_팩토리얼_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_팩토리얼_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "팩토리얼",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 8,
        "module": {},
        "code": "def solution(n):\n    result = 1\n    factorial = 1\n    while factorial <= n:\n        result += 1\n        factorial = factorial * result\n    result -= 1\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_직각삼각형출력하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_직각삼각형출력하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "직각삼각형출력하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1,
            "input": 1,
            "range": 1,
            "print": 1
        },
        "line_count": 3,
        "module": {},
        "code": "n = int(input())\nfor i in range(1, n + 1):\n    print('*' * i)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_인덱스바꾸기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_인덱스바꾸기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "인덱스바꾸기",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            ".join": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(my_string, num1, num2):\n    str_list = list(my_string)\n    a = str_list[num1]\n    b = str_list[num2]\n    str_list[num1] = b\n    str_list[num2] = a\n    answer = \"\".join(str_list)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수홀수개수_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_짝수홀수개수_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수홀수개수",
        "problem_type": "구현",
        "countmethod": {
            ".append": 2,
            "len": 2
        },
        "line_count": 11,
        "module": {},
        "code": "def solution(num_list):\n    even_list = []\n    odd_list = []\n    \n    for i in num_list:\n        if i % 2 == 0:\n            even_list.append(i)\n        else:\n            odd_list.append(i)\n        \n    return [len(even_list), len(odd_list)]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_개미군단_그리디_1.py": {
        "file_name": "Lv0_0000_프로그래머스_개미군단_그리디_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "개미군단",
        "problem_type": "그리디",
        "countmethod": 0,
        "line_count": 11,
        "module": {},
        "code": "def solution(hp):\n    장군개미수 = hp // 5\n    hp = hp - 장군개미수 * 5\n    \n    병정개미수 = hp // 3\n    hp = hp - 병정개미수 * 3\n    \n    일개미수 = hp // 1\n    hp = hp - 일개미수 * 3\n    \n    return 장군개미수 + 병정개미수 + 일개미수",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(3)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(3)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(3)",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(slice, n):\n    return (n // slice) + (n % slice != 0)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가위바위보_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_가위바위보_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가위바위보",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "def solution(rsp):\n    result = ''    \n    for i in rsp:\n        if i == '2':\n            result += '0'\n        elif i == '0':\n            result += '5'\n        else:\n            result += '2'\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수의합_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_짝수의합_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수의합",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "range": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return sum(range(0, n+1, 2))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(1)",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1,
            "int": 1,
            ".isdigit": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string):\n   return sorted([int(i) for i in my_string if i.isdigit()])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_양꼬치_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_양꼬치_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "양꼬치",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 4,
        "module": {},
        "code": "def solution(n, k):\n    service = n // 10\n    answer = 12000 * n + 2000 * (k - service)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_저주의숫자3_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_저주의숫자3_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "저주의숫자3",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            ".append": 1,
            "len": 1
        },
        "line_count": 11,
        "module": {},
        "code": "def solution(n):\n    count10 = 0\n    count3 = []\n    while 1:\n        count10 += 1\n        if count10 % 3 == 0 or '3' in str(count10):\n            continue\n        count3.append(count10)\n        if len(count3) >= n:\n            break\n    return count3[-1]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중복된숫자개수_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_중복된숫자개수_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중복된숫자개수",
        "problem_type": "구현",
        "countmethod": {
            ".count": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(array, n):\n    answer = array.count(n)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_9로나눈나머지_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_9로나눈나머지_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "9로나눈나머지",
        "problem_type": "구현",
        "countmethod": {
            "list": 1,
            "range": 1,
            "len": 1,
            "int": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(number):\n    arr = list(number)\n    sum = 0\n    for i in range(len(arr)):\n        sum += int(arr[i])\n    answer = sum % 9\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(2)",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            "sorted": 1,
            ".lower": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(my_string):\n    answer = ''.join(sorted(my_string.lower()))\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열회전시키기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열회전시키기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열회전시키기",
        "problem_type": "구현",
        "countmethod": {
            ".insert": 1,
            ".append": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(numbers, direction):\n    if direction == 'right':\n        numbers.insert(0, numbers[-1])\n        return numbers[:-1]\n    elif direction == 'left':\n        numbers.append(numbers[0])\n        return numbers[1:]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_진료순서정하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_진료순서정하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "진료순서정하기",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1,
            ".index": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(emergency):\n    sorted_emergency = sorted(emergency, reverse=True) \n    result = [sorted_emergency.index(i)+1 for i in emergency]\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_몫구하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_몫구하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "몫구하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(num1, num2):\n    answer = num1 // num2\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숨어있는숫자의덧셈(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sub": 1,
            "sum": 1,
            "int": 1
        },
        "line_count": 5,
        "module": {
            "re": 1
        },
        "code": "import re\ndef solution(my_string):\n    numbers = re.sub('[^0-9]', '', my_string)\n    answer = sum([int(i) for i in numbers])\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의유사도_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열의유사도_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의유사도",
        "problem_type": "구현",
        "countmethod": {
            "len": 1,
            "set": 2
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(s1, s2):\n    return len(set(s1) & set(s2))\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열뒤집기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_배열뒤집기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열뒤집기",
        "problem_type": "구현",
        "countmethod": {
            ".reverse": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(num_list):\n    return num_list.reverse()",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열뒤집기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열뒤집기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열뒤집기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(my_string):\n    answer = my_string[::-1]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_약수구하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_약수구하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수구하기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    answer = [i for i in range(1, n + 1) if n % i == 0]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모스부호(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_모스부호(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모스부호(1)",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".join": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(letter):\n    morse = { \n    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',\n    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',\n    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',\n    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',\n    '-.--':'y','--..':'z'}\n    letter = letter.split(' ')\n    return ''.join(morse[i] for i in letter)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열섞기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열섞기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열섞기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            "len": 1,
            ".append": 2,
            ".join": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(str1, str2):\n    l = []\n    for i in range(len(str1)):\n        l.append(str1[i])\n        l.append(str2[i])\n    return ''.join(l)\nsolution('aaaaa', 'bbbbb')",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_약수구하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_약수구하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "약수구하기",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return [i for i in range(1, n+1) if n % i == 0]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_편지_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_편지_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "편지",
        "problem_type": "구현",
        "countmethod": {
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(message):\n    return len(message) * 2\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최댓값만들기(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_최댓값만들기(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값만들기(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(numbers):\n    numbers.sort()\n    answer = numbers[-1] * numbers[-2]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_머쓱이보다키큰사람_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_머쓱이보다키큰사람_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "머쓱이보다키큰사람",
        "problem_type": "구현",
        "countmethod": {
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(array, height):\n    return len([i for i in array if i > height])",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_머쓱이보다키큰사람_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_머쓱이보다키큰사람_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "머쓱이보다키큰사람",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 6,
        "module": {},
        "code": "def solution(array, height):\n    num = 0\n    for i in array:\n        if i > height:\n            num += 1\n    return num",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열두배만들기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열두배만들기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열두배만들기",
        "problem_type": "구현",
        "countmethod": {
            ".append": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(numbers):\n    result = []\n    for num in numbers:\n        result.append(num * 2)\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열자르기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열자르기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열자르기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(numbers, num1, num2):\n    answer = numbers[num1:num2 + 1]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의평균값_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열의평균값_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의평균값",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(numbers):\n    return sum(numbers) / len(numbers)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최댓값만들기(2)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_최댓값만들기(2)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값만들기(2)",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1,
            "max": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(numbers):\n    numbers = sorted(numbers)\n    case_a = numbers[0] * numbers[1]\n    case_b = numbers[-1] * numbers[-2]\n    answer = max(case_a, case_b)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가장큰수찾기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_가장큰수찾기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가장큰수찾기",
        "problem_type": "구현",
        "countmethod": {
            "max": 2,
            ".index": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(array):\n    answer = [max(array), array.index(max(array))]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수의합_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_짝수의합_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수의합",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    result = 0\n    for i in range(0, n + 1, 2):\n        result += i\n    return result\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_아이스아메리카노_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_아이스아메리카노_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "아이스아메리카노",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(money):\n    cup = money // 5500\n    change = money % 5500\n        \n    return [cup, change]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_대문자와소문자_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_대문자와소문자_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대문자와소문자",
        "problem_type": "구현",
        "countmethod": {
            ".islower": 1,
            ".upper": 1,
            ".lower": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(my_string):\n    answer = ''\n    for i in my_string:\n        if i.islower():\n            answer += i.upper()\n        else:\n            answer += i.lower()\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_대문자와소문자_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_대문자와소문자_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "대문자와소문자",
        "problem_type": "구현",
        "countmethod": {
            ".isupper": 1,
            ".lower": 1,
            ".upper": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(my_string):\n    result = ''\n    for i in my_string:\n        if i.isupper():\n            result += i.lower()\n        else:\n            result += i.upper()    \n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가위바위보_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_가위바위보_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가위바위보",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(rsp):\n    d = {'0': '5', '2': '0', '5': '2'}\n    return ''.join(d[i] for i in rsp)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_자릿수더하기_구현_4.py": {
        "file_name": "Lv0_0000_프로그래머스_자릿수더하기_구현_4.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            "int": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    for i in str(n):\n        answer += int(i)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_두수의합_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_두수의합_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두수의합",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(num1, num2):\n    answer = num1 + num2\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_삼각형의완성조건(2)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_삼각형의완성조건(2)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼각형의완성조건(2)",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1,
            "range": 1,
            ".append": 1,
            "len": 1
        },
        "line_count": 12,
        "module": {},
        "code": "def solution(sides):\n    result = []\n    side = sorted(sides)\n    \n    min = side[1] - side[0]\n    max = side[0] + side[1]\n    \n    for i in range(min, max):\n        if min < i < max:\n            result.append(i)\n    \n    return len(result)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_순서쌍의개수_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_순서쌍의개수_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "순서쌍의개수",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수홀수개수_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_짝수홀수개수_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수홀수개수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 10,
        "module": {},
        "code": "def solution(num_list):\n    even_count = 0\n    odd_count = 0\n    for i in num_list:\n        if i % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    result = [even_count, odd_count]\n    return result\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(2)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(2)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(2)",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    pizza = 6\n    while pizza % n != 0:\n        pizza += 6\n    return pizza / 6\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_공던지기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_공던지기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "공던지기",
        "problem_type": "구현",
        "countmethod": {
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(numbers, k):\n    return numbers[2 * (k - 1) % len(numbers)]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열뒤집기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열뒤집기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열뒤집기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string):\n    return my_string[::-1]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_합성수찾기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_합성수찾기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "합성수찾기",
        "problem_type": "구현",
        "countmethod": {
            "range": 2,
            ".append": 1,
            "len": 1,
            "set": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(n):\n    result = []\n    for i in range(3, n+1):\n        for j in range(2, i):\n            if i % j == 0:\n                result.append(i)\n    return len(set(result))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_편지_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_편지_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "편지",
        "problem_type": "구현",
        "countmethod": {
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(message):\n    return len(message) * 2",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_영어가싫어요_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_영어가싫어요_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "영어가싫어요",
        "problem_type": "구현",
        "countmethod": {
            ".items": 1,
            ".replace": 1,
            "int": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(numbers):\n    num = {'zero' : '0', 'one' : '1', 'two' : '2',\n           'three' : '3', 'four' : '4', 'five' : '5',\n           'six' : '6', 'seven' : '7', 'eight' : '8',\n           'nine' : '9'}\n    for word, number in num.items():\n        numbers = numbers.replace(word, number)\n    return int(numbers)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_두수의나눗셈_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_두수의나눗셈_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두수의나눗셈",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(num1, num2):\n    answer = int((num1 / num2) * 1000)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_가까운수_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_가까운수_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "가까운수",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 2,
            ".append": 1,
            "abs": 1,
            ".index": 1,
            "min": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(array, n):\n    result = []\n    sorted_array = sorted(array)\n    for i in sorted_array:\n        result.append(abs(n - i))\n    \n    x = result.index(min(result))\n    \n    return sorted(array)[x]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_주사위의개수_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_주사위의개수_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "주사위의개수",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(box, n):\n    return (box[0] // n) * (box[1] // n) * (box[2] // n)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_N의배수고르기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_N의배수고르기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "N의배수고르기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(n, numlist):\n    answer = [i for i in numlist if i % n == 0]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_최댓값만들기(1)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_최댓값만들기(1)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "최댓값만들기(1)",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 2
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(numbers):\n    return sorted(numbers)[-1] * sorted(numbers)[-2]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모음제거_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_모음제거_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모음제거",
        "problem_type": "구현",
        "countmethod": {
            ".replace": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(my_string):\n    for i in my_string:\n        if i in ['a','e','i','o','u']:\n            my_string = my_string.replace(i, '')\n    \n    return my_string",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중복된숫자개수_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_중복된숫자개수_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중복된숫자개수",
        "problem_type": "구현",
        "countmethod": {
            ".count": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(array, n):\n    return array.count(n)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_나머지구하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_나머지구하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나머지구하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(num1, num2):\n    answer = num1 % num2\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_특정문자제거하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_특정문자제거하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "특정문자제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".replace": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string, letter):\n    return my_string.replace(letter,'')",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_두수의곱_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_두수의곱_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "두수의곱",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(num1, num2):\n    answer = num1 * num2\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열원소의길이_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_배열원소의길이_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열원소의길이",
        "problem_type": "구현",
        "countmethod": {
            ".append": 1,
            "len": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(strlist):\n    answer = []\n    for i in strlist:\n        answer.append(len(i))\n    return answer",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(2)",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            "sorted": 1,
            ".lower": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string):\n    return ''.join(sorted(my_string.lower()))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중복된문자제거_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_중복된문자제거_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중복된문자제거",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            ".fromkeys": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string):\n    return ''.join(dict.fromkeys(my_string))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_숨어있는숫자의덧셈(1)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숨어있는숫자의덧셈(1)",
        "problem_type": "구현",
        "countmethod": {
            ".isdigit": 1,
            "int": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(my_string):\n    result = 0\n    for i in my_string:\n        if i.isdigit():\n            result += int(i)\n            \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열두배만들기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_배열두배만들기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열두배만들기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(numbers):\n    return [i * 2 for i in numbers]\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_외계행성의나이_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_외계행성의나이_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "외계행성의나이",
        "problem_type": "구현",
        "countmethod": {
            "str": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(age):\n    result = ''\n    alpha = {'0' : 'a', '1' : 'b', '2' : 'c', '3' : 'd',\n             '4' : 'e', '5' : 'f', '6' : 'g', '7' : 'h',\n             '8' : 'i', '9' : 'j'}\n    for i in str(age):\n        result += alpha[i]\n    \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_합성수찾기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_합성수찾기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "합성수찾기",
        "problem_type": "구현",
        "countmethod": {
            "range": 2,
            "len": 1
        },
        "line_count": 7,
        "module": {},
        "code": "def solution(n):\n    answer = 0\n    for i in range(1, n + 1):\n        m = [j for j in range(1, i + 1) if i % j == 0]\n        if len(m) >= 3:\n            answer += 1\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수는싫어요_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_짝수는싫어요_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수는싫어요",
        "problem_type": "구현",
        "countmethod": {
            "range": 1,
            ".append": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(n):\n    answer = []\n    for i in range(n + 1):\n        if i % 2 != 0:\n            answer.append(i)\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_각도기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_각도기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "각도기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 9,
        "module": {},
        "code": "def solution(angle):\n    if 0 < angle < 90:\n        return 1\n    elif angle == 90:\n        return 2\n    elif 90 < angle < 180:\n        return 3\n    else:\n        return 4",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_369게임_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_369게임_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "369게임",
        "problem_type": "구현",
        "countmethod": {
            "str": 3,
            ".count": 3
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(order):\n    result = 0\n    result += str(order).count('3')\n    result += str(order).count('6')\n    result += str(order).count('9')\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자찾기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_숫자찾기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자찾기",
        "problem_type": "구현",
        "countmethod": {
            "str": 2,
            ".find": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(num, k):\n    num = str(num)\n    k = str(k)\n    answer = num.find(k) + 1\n    return answer if answer != 0 else -1\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_N의배수고르기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_N의배수고르기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "N의배수고르기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(n, numlist):\n    result = [i for i in numlist if i%n==0]\n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_암호해독_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_암호해독_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "암호해독",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            "range": 1,
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(cipher, code):\n    return ''.join(cipher[i] for i in range(code-1,len(cipher), code))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_옷가게할인받기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_옷가게할인받기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "옷가게할인받기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(price):\n    if price >= 500000:\n        price *= 0.8\n    elif price >= 300000:\n        price *= 0.9\n    elif price >= 100000:\n        price *= 0.95\n    \n    return int(price)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중앙값구하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_중앙값구하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중앙값구하기",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            "len": 1
        },
        "line_count": 4,
        "module": {},
        "code": "def solution(array):\n    array.sort()\n    answer = (len(array) // 2)\n    return array[answer]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자반복출력하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자반복출력하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자반복출력하기",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string, n):\n    return ''.join(i*n for i in my_string)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(1)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(1)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(1)",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(n):\n    answer = (n - 1) // 7 + 1\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_점의위치구하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_점의위치구하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "점의위치구하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 9,
        "module": {},
        "code": "def solution(dot):\n    if dot[0] > 0 and dot[1] > 0:\n        return 1\n    elif dot[0] > 0 and dot[1] < 0:\n        return 4\n    elif dot[0] < 0 and dot[1] > 0:\n        return 2\n    else:\n        return 3",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열안에문자열_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열안에문자열_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열안에문자열",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(str1, str2):\n    if str2 in str1:\n        return 1\n    else:\n        return 2\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_제곱수판별하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_제곱수판별하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제곱수판별하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    if n ** (1 / 2) == int(n ** (1 / 2)):\n        return 1\n    else:\n        return 2\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_나이출력_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_나이출력_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "나이출력",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(age):\n    return 2022 - age + 1",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_모음제거_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_모음제거_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "모음제거",
        "problem_type": "구현",
        "countmethod": {
            ".replace": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(my_string):\n    vowel = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in vowel:\n        my_string = my_string.replace(i, \"\")\n    return my_string\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(1)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(1)",
        "problem_type": "구현",
        "countmethod": {
            "sorted": 1,
            "int": 1,
            ".isdigit": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(my_string):\n    answer = sorted([int(c) for c in my_string if c.isdigit()])\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_369게임_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_369게임_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "369게임",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            ".count": 3
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(order):\n    order = str(order)\n    return order.count('3') + order.count('6') + order.count('9')\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_피자나눠먹기(2)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_피자나눠먹기(2)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "피자나눠먹기(2)",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    for i in range(1, n+1):\n        if 6 * i % n == 0:\n            return i\n            break",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_옷가게할인받기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_옷가게할인받기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "옷가게할인받기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(price):\n    if price >= 500000:\n        price = price * 0.8\n    elif price >= 300000:\n        price = price * 0.9\n    elif price >= 100000:\n        price = price * 0.95\n    return int(price)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_직각삼각형출력하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_직각삼각형출력하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "직각삼각형출력하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1,
            "input": 1,
            "range": 1,
            "print": 1
        },
        "line_count": 3,
        "module": {},
        "code": "n = int(input())\nfor i in range(1, n+1):\n    print('*'*i)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중앙값구하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_중앙값구하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중앙값구하기",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1,
            "len": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(array):\n    array.sort()\n    return array[len(array) // 2]\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자찾기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_숫자찾기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자찾기",
        "problem_type": "구현",
        "countmethod": {
            "str": 4,
            ".find": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(num, k):\n    if str(k) in str(num):\n        return str(num).find(str(k)) + 1\n    else :\n        return -1",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼각형의완성조건(1)",
        "problem_type": "구현",
        "countmethod": {
            ".sort": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(sides):\n    sides.sort()\n    if sides[-1] < sides[0] + sides[1]:\n        return 1\n    else:\n        return 2",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_컨트롤제트_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_컨트롤제트_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "컨트롤제트",
        "problem_type": "구현",
        "countmethod": {
            ".split": 1,
            ".isdigit": 1,
            ".startswith": 1,
            ".append": 1,
            "int": 1,
            ".pop": 1,
            "sum": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(s):\n    numbers = s.split()\n    result = []\n    for num in numbers:\n        if num.isdigit() or num.startswith('-'):\n            result.append(int(num))\n        elif num == 'Z':\n            if result:\n                result.pop()\n    return sum(result)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_삼각형의완성조건(1)_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "삼각형의완성조건(1)",
        "problem_type": "구현",
        "countmethod": {
            "max": 1,
            ".remove": 1,
            "sum": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(sides):\n    max_side = max(sides)\n    sides.remove(max_side)\n    other_sides_sum = sum(sides)\n    if max_side < other_sides_sum:\n        return 1\n    else:\n        return 2\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의유사도_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_배열의유사도_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의유사도",
        "problem_type": "구현",
        "countmethod": {
            "len": 1,
            "set": 2
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(s1, s2):\n    return len(set(s1) & set(s2))",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중복된문자제거_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_중복된문자제거_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중복된문자제거",
        "problem_type": "구현",
        "countmethod": {
            ".append": 1,
            ".join": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(my_string):\n    answer = []\n    for i in my_string:\n        if i not in answer:\n            answer.append(i)\n    answer = ''.join(answer)\n    \n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_짝수는싫어요_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_짝수는싫어요_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "짝수는싫어요",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(n):\n    return [i for i in range(1, n+1, 2)]",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_옹알이(1)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_옹알이(1)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "옹알이(1)",
        "problem_type": "구현",
        "countmethod": {
            ".replace": 1,
            "len": 1,
            ".strip": 1
        },
        "line_count": 9,
        "module": {},
        "code": "def solution(babbling):\n    c = 0\n    for b in babbling:\n        for w in [ \"aya\", \"ye\", \"woo\", \"ma\" ]:\n            if w * 2 not in b:\n                b = b.replace(w, ' ')\n        if len(b.strip()) == 0:\n            c += 1\n    return c",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_문자열정렬하기(2)_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자열정렬하기(2)",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            "sorted": 1,
            ".lower": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(my_string):\n    answer = ''.join(sorted(my_string.lower()))\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_세균증식_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_세균증식_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "세균증식",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 2,
        "module": {},
        "code": "def solution(n, t):\n    return 2 ** t * n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_외계행성의나이_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_외계행성의나이_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "외계행성의나이",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1,
            "int": 1,
            "str": 1
        },
        "line_count": 15,
        "module": {},
        "code": "def solution(age):\n    planet = {\n        0: 'a',\n        1: 'b',\n        2: 'c',\n        3: 'd',\n        4: 'e',\n        5: 'f',\n        6: 'g',\n        7: 'h',\n        8: 'i',\n        9: 'j'\n    }\n    answer = ''.join(planet[int(i)] for i in str(age))\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_아이스아메리카노_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_아이스아메리카노_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "아이스아메리카노",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 3,
        "module": {},
        "code": "def solution(money):\n    answer = [money // 5500, money % 5500]\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_특정문자제거하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_특정문자제거하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "특정문자제거하기",
        "problem_type": "구현",
        "countmethod": {
            ".replace": 1
        },
        "line_count": 3,
        "module": {},
        "code": "def solution(my_string, letter):\n    answer = my_string.replace(letter, '')\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열회전시키기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_배열회전시키기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열회전시키기",
        "problem_type": "구현",
        "countmethod": {
            ".insert": 1,
            ".append": 1
        },
        "line_count": 10,
        "module": {},
        "code": "def solution(numbers, direction):\n    if direction == \"right\":\n        temp = numbers[-1]\n        numbers.insert(0, temp)\n        del numbers[-1]\n    else:\n        temp = numbers[0]\n        numbers.append(temp)\n        del numbers[0]\n    return numbers\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_제곱수판별하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_제곱수판별하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "제곱수판별하기",
        "problem_type": "구현",
        "countmethod": {
            "int": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n):\n    if n**0.5 == int(n**0.5):\n        return 1\n    else:\n        return 2",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_자릿수더하기_구현_5.py": {
        "file_name": "Lv0_0000_프로그래머스_자릿수더하기_구현_5.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "자릿수더하기",
        "problem_type": "구현",
        "countmethod": {
            "str": 1,
            "int": 1
        },
        "line_count": 6,
        "module": {},
        "code": "def solution(n):\n    result = 0\n    for i in str(n):\n        result += int(i)\n        \n    return result",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열원소의길이_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_배열원소의길이_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열원소의길이",
        "problem_type": "구현",
        "countmethod": {
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(strlist):\n    return [len(i) for i in strlist]\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_배열의평균값_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_배열의평균값_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "배열의평균값",
        "problem_type": "구현",
        "countmethod": {
            "sum": 1,
            "len": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(numbers):\n    return sum(numbers) / len(numbers)",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자비교하기_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_숫자비교하기_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자비교하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(num1, num2):\n    if num1 == num2:\n        return 1\n    else:\n        return -1\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_숫자비교하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_숫자비교하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "숫자비교하기",
        "problem_type": "구현",
        "countmethod": 0,
        "line_count": 5,
        "module": {},
        "code": "def solution(num1, num2):\n    if num1 == num2:\n        return 1\n    else:\n        return -1",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_문자반복출력하기_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_문자반복출력하기_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "문자반복출력하기",
        "problem_type": "구현",
        "countmethod": {
            ".join": 1
        },
        "line_count": 2,
        "module": {},
        "code": "def solution(my_string, n):\n    return ''.join(i * n for i in my_string)\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_중복된문자제거_구현_0.py": {
        "file_name": "Lv0_0000_프로그래머스_중복된문자제거_구현_0.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "중복된문자제거",
        "problem_type": "구현",
        "countmethod": {
            ".append": 1,
            ".join": 1
        },
        "line_count": 8,
        "module": {},
        "code": "def solution(my_string):\n    answer = []\n    for i in my_string:\n        if i not in answer:\n            answer.append(i)\n    answer = ''.join(answer)\n    \n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    },
    "Lv0_0000_프로그래머스_세균증식_구현_1.py": {
        "file_name": "Lv0_0000_프로그래머스_세균증식_구현_1.py",
        "level": "level0",
        "year": "0000",
        "company_name": "프로그래머스",
        "problem_name": "세균증식",
        "problem_type": "구현",
        "countmethod": {
            "range": 1
        },
        "line_count": 5,
        "module": {},
        "code": "def solution(n, t):\n    answer = n\n    for i in range(t):\n        answer *= 2\n    return answer\n",
        "check_user_func": 0,
        "check_user_class": 0
    }
}